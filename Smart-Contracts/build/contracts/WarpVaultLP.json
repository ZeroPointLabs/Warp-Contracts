{
  "contractName": "WarpVaultLP",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_lp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WarpControl",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_lpName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralProvided",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LPtoken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralizedLP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeWizard",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "warpControl",
      "outputs": [
        {
          "internalType": "contract WarpControlI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_warpControl",
          "type": "address"
        }
      ],
      "name": "updateWarpControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "provideCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAssetAdd",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "collateralOfAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        }
      ],
      "name": "_liquidateAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "valueOfAccountCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WarpControl\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_lpName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"CollateralProvided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LPtoken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"}],\"name\":\"_liquidateAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"collateralOfAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralizedLP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssetAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeWizard\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_warpControl\",\"type\":\"address\"}],\"name\":\"updateWarpControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"valueOfAccountCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"warpControl\",\"outputs\":[{\"internalType\":\"contract WarpControlI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_liquidateAccount(address,address)\":{\"details\":\"this function uses the onlyWarpControl modifier meaning that only the Warp Control contract can call it*\",\"params\":{\"_account\":\"is the address of the account being liquidated\",\"_liquidator\":\"is the address of the account doing the liquidating who receives the liquidated LP's\"}},\"collateralOfAccount(address)\":{\"params\":{\"_account\":\"is the address of the account being looked up*\"}},\"constructor\":{\"details\":\"this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving this contract the ability to call their mint and burn functions.*\",\"params\":{\"_lp\":\"is the address of the lp token a specific Warp vault will represent\",\"_lpName\":\"is the name of the lp token\",\"_timelock\":\"is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)\"}},\"provideCollateral(uint256)\":{\"params\":{\"_amount\":\"is the amount of LP being collateralized*\"}},\"withdrawCollateral(uint256)\":{\"params\":{\"_amount\":\"is the amount of LP tokens he wishes to withdraw*\"}}}},\"userdoc\":{\"methods\":{\"_liquidateAccount(address,address)\":{\"notice\":\"_liquidateAccount is a function to liquidate the LP tokens of the input account\"},\"collateralOfAccount(address)\":{\"notice\":\"collateralOfAccount is a view function to retreive an accounts collateralized LP amount\"},\"constructor\":\"constructor sets up token names and symbols for the WarpWrapperToken\",\"getAssetAdd()\":{\"notice\":\"getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*\"},\"provideCollateral(uint256)\":{\"notice\":\"provideCollateral allows a user to collateralize this contracts associated LP token\"},\"withdrawCollateral(uint256)\":{\"notice\":\"withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\"}},\"notice\":\"the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the Warp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets, holding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts from the coumpound protocol.*\"}},\"settings\":{\"compilationTarget\":{\"/E/dOrg/warp/Smart-Contracts/contracts/WarpVaultLP.sol\":\"WarpVaultLP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/dOrg/warp/Smart-Contracts/contracts/WarpVaultLP.sol\":{\"keccak256\":\"0xe8423cbd6a4e426a3b0e5d23b26cecb8a4b1d878767256ebcd354aa71c9d6514\",\"urls\":[\"bzz-raw://370c5d49032955c26818d325081e13f3fda1a4020d15d7a6aee20cc67e5a674d\",\"dweb:/ipfs/QmPes1Akoca85HzFSgeNY8h1ZSm9HBqCRKjAmwVCYm4kiv\"]},\"/E/dOrg/warp/Smart-Contracts/contracts/WarpWrapperToken.sol\":{\"keccak256\":\"0x88eb1207990a4dacd0cd0874b20fc49a36ef11165db1dbd40a0123e7c2ca9a43\",\"urls\":[\"bzz-raw://945b545748e5629ee9dbca9023e672fd45713d7db7c9e6c67f6ea0462b19d92f\",\"dweb:/ipfs/Qmce5LzYMhUuhEfn43y3gkG6epz1r3F7xqNv8odU9HV7Er\"]},\"/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol\":{\"keccak256\":\"0xa9e293fb6456066f9a3327d2c014b39165c766767933933f67da701eb6dcf55c\",\"urls\":[\"bzz-raw://a9b6924721cb71b6d4dbc3aad3ac239b656aa7f0b1c07aa3dc7302ed8bf00007\",\"dweb:/ipfs/QmW2DSN1Ugwdjs177JwqoTVTaeBEewJc6FGfsLRYDDjszz\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000ead38038062000ead833981810160405260808110156200003757600080fd5b8151602083015160408085015160608601805192519496939591949391820192846401000000008211156200006b57600080fd5b9083019060208201858111156200008157600080fd5b82516401000000008111828201881017156200009c57600080fd5b82525081516020918201929091019080838360005b83811015620000cb578181015183820152602001620000b1565b50505050905090810190601f168015620000f95780820380516001836020036101000a031916815260200191505b50604052505081516200011591506001906020840190620001d0565b50600280546001600160a01b03199081166001600160a01b0386811691909117909255600380549091169184169190911790556200016042856200016e602090811b62000a8017901c565b600055506200027592505050565b600082820183811015620001c9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200021357805160ff191683800117855562000243565b8280016001018555821562000243579182015b828111156200024357825182559160200191906001019062000226565b506200025192915062000255565b5090565b6200027291905b808211156200025157600081556001016200025c565b90565b610c2880620002856000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063c14cba3e11610071578063c14cba3e146101df578063c453e557146101e7578063cb7b42061461020d578063f0c3c06b14610215578063f4b5e3e414610232578063f919b4bf14610260576100b4565b806346cd6801146100b95780634c20ac74146101365780634cf3e7841461015a5780636112fe2e14610182578063763e4a0d1461019f578063bbb7d489146101d7575b600080fd5b6100c1610286565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013e610313565b604080516001600160a01b039092168252519081900360200190f35b6101806004803603602081101561017057600080fd5b50356001600160a01b0316610322565b005b6101806004803603602081101561019857600080fd5b503561035b565b6101c5600480360360208110156101b557600080fd5b50356001600160a01b031661058a565b60408051918252519081900360200190f35b61013e61059c565b61013e6105ab565b6101c5600480360360208110156101fd57600080fd5b50356001600160a01b03166105ba565b6101c561066d565b6101806004803603602081101561022b57600080fd5b5035610673565b6101806004803603604081101561024857600080fd5b506001600160a01b03813581169160200135166108ed565b6101c56004803603602081101561027657600080fd5b50356001600160a01b03166109c1565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561030b5780601f106102e05761010080835404028352916020019161030b565b820191906000526020600020905b8154815290600101906020018083116102ee57829003601f168201915b505050505081565b6002546001600160a01b031690565b6003546001600160a01b0316331461033957600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546002546040805163ab5e2c9960e01b81523360048201526001600160a01b03928316602482015290516000938493169163ab5e2c9991604480830192602092919082900301818787803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050506040513d60208110156103de57600080fd5b50519050826103ef578091506103f3565b8291505b81811015610448576040805162461bcd60e51b815260206004820152601b60248201527f547279696e6720746f20776974686472617720746f6f206d7563680000000000604482015290519081900360640190fd5b336000908152600460205260409020548211156104965760405162461bcd60e51b815260040180806020018281038252603f815260200180610b72603f913960400191505060405180910390fd5b336000908152600460205260409020546104b6908363ffffffff6109dc16565b33600081815260046020818152604080842095909555600254855163a9059cbb60e01b8152928301949094526024820187905293516001600160a01b039093169363a9059cbb9360448084019492939192918390030190829087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d602081101561054857600080fd5b5050604080513381526020810184905281517f92682d28e4c16f4a2ddb833ecdd2bab2f2da69e2f325cda58d421e7d634b8e27929181900390910190a1505050565b60046020526000908152604090205481565b6003546001600160a01b031681565b6002546001600160a01b031681565b6003546002546040805163272c85f760e11b81526001600160a01b039283166004820152905160009384931691634e590bee916024808301926020929190829003018186803b15801561060c57600080fd5b505afa158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b50516001600160a01b03841660009081526004602052604081205491925090610665908363ffffffff610a2716565b949350505050565b60005481565b60025460408051636eb1769f60e11b8152336004820152306024820152905183926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b1580156106c357600080fd5b505afa1580156106d7573d6000803e3d6000fd5b505050506040513d60208110156106ed57600080fd5b5051101561072c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610bd26021913960400191505060405180910390fd5b600254604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d60208110156107a057600080fd5b505110156107f5576040805162461bcd60e51b815260206004820152601e60248201527f4d757374206861766520656e6f756768204c5020746f2070726f766964650000604482015290519081900360640190fd5b600254604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561084f57600080fd5b505af1158015610863573d6000803e3d6000fd5b505050506040513d602081101561087957600080fd5b50503360009081526004602052604090205461089b908263ffffffff610a8016565b3360008181526004602090815260409182902093909355805191825291810183905281517f304548d20eea45684a7db179080f94dce8e4442923ddd63688ab5b7e270a4849929181900390910190a150565b6003546001600160a01b0316331461090457600080fd5b600054421161091257600080fd5b6002546001600160a01b03838116600090815260046020818152604080842054815163a9059cbb60e01b815288871694810194909452602484015251939094169363a9059cbb9360448084019492939192918390030190829087803b15801561097a57600080fd5b505af115801561098e573d6000803e3d6000fd5b505050506040513d60208110156109a457600080fd5b5050506001600160a01b0316600090815260046020526040812055565b6001600160a01b031660009081526004602052604090205490565b6000610a1e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ada565b90505b92915050565b600082610a3657506000610a21565b82820282848281610a4357fe5b0414610a1e5760405162461bcd60e51b8152600401808060200182810382526021815260200180610bb16021913960400191505060405180910390fd5b600082820183811015610a1e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610b695760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b2e578181015183820152602001610b16565b50505050905090810190601f168015610b5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe796f752061726520747279696e6720746f207769746864726177206d6f726520636f6c6c61746572616c207468616e20796f752068617665206c6f636b6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775661756c74206d757374206861766520656e6f75676820616c6c6f77616e63652ea26469706673582212206847e7f331abc1452a0b16ac1c19123b5050034b564456e070f53b7617d0968864736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063c14cba3e11610071578063c14cba3e146101df578063c453e557146101e7578063cb7b42061461020d578063f0c3c06b14610215578063f4b5e3e414610232578063f919b4bf14610260576100b4565b806346cd6801146100b95780634c20ac74146101365780634cf3e7841461015a5780636112fe2e14610182578063763e4a0d1461019f578063bbb7d489146101d7575b600080fd5b6100c1610286565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013e610313565b604080516001600160a01b039092168252519081900360200190f35b6101806004803603602081101561017057600080fd5b50356001600160a01b0316610322565b005b6101806004803603602081101561019857600080fd5b503561035b565b6101c5600480360360208110156101b557600080fd5b50356001600160a01b031661058a565b60408051918252519081900360200190f35b61013e61059c565b61013e6105ab565b6101c5600480360360208110156101fd57600080fd5b50356001600160a01b03166105ba565b6101c561066d565b6101806004803603602081101561022b57600080fd5b5035610673565b6101806004803603604081101561024857600080fd5b506001600160a01b03813581169160200135166108ed565b6101c56004803603602081101561027657600080fd5b50356001600160a01b03166109c1565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561030b5780601f106102e05761010080835404028352916020019161030b565b820191906000526020600020905b8154815290600101906020018083116102ee57829003601f168201915b505050505081565b6002546001600160a01b031690565b6003546001600160a01b0316331461033957600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546002546040805163ab5e2c9960e01b81523360048201526001600160a01b03928316602482015290516000938493169163ab5e2c9991604480830192602092919082900301818787803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050506040513d60208110156103de57600080fd5b50519050826103ef578091506103f3565b8291505b81811015610448576040805162461bcd60e51b815260206004820152601b60248201527f547279696e6720746f20776974686472617720746f6f206d7563680000000000604482015290519081900360640190fd5b336000908152600460205260409020548211156104965760405162461bcd60e51b815260040180806020018281038252603f815260200180610b72603f913960400191505060405180910390fd5b336000908152600460205260409020546104b6908363ffffffff6109dc16565b33600081815260046020818152604080842095909555600254855163a9059cbb60e01b8152928301949094526024820187905293516001600160a01b039093169363a9059cbb9360448084019492939192918390030190829087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d602081101561054857600080fd5b5050604080513381526020810184905281517f92682d28e4c16f4a2ddb833ecdd2bab2f2da69e2f325cda58d421e7d634b8e27929181900390910190a1505050565b60046020526000908152604090205481565b6003546001600160a01b031681565b6002546001600160a01b031681565b6003546002546040805163272c85f760e11b81526001600160a01b039283166004820152905160009384931691634e590bee916024808301926020929190829003018186803b15801561060c57600080fd5b505afa158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b50516001600160a01b03841660009081526004602052604081205491925090610665908363ffffffff610a2716565b949350505050565b60005481565b60025460408051636eb1769f60e11b8152336004820152306024820152905183926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b1580156106c357600080fd5b505afa1580156106d7573d6000803e3d6000fd5b505050506040513d60208110156106ed57600080fd5b5051101561072c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610bd26021913960400191505060405180910390fd5b600254604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d60208110156107a057600080fd5b505110156107f5576040805162461bcd60e51b815260206004820152601e60248201527f4d757374206861766520656e6f756768204c5020746f2070726f766964650000604482015290519081900360640190fd5b600254604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561084f57600080fd5b505af1158015610863573d6000803e3d6000fd5b505050506040513d602081101561087957600080fd5b50503360009081526004602052604090205461089b908263ffffffff610a8016565b3360008181526004602090815260409182902093909355805191825291810183905281517f304548d20eea45684a7db179080f94dce8e4442923ddd63688ab5b7e270a4849929181900390910190a150565b6003546001600160a01b0316331461090457600080fd5b600054421161091257600080fd5b6002546001600160a01b03838116600090815260046020818152604080842054815163a9059cbb60e01b815288871694810194909452602484015251939094169363a9059cbb9360448084019492939192918390030190829087803b15801561097a57600080fd5b505af115801561098e573d6000803e3d6000fd5b505050506040513d60208110156109a457600080fd5b5050506001600160a01b0316600090815260046020526040812055565b6001600160a01b031660009081526004602052604090205490565b6000610a1e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ada565b90505b92915050565b600082610a3657506000610a21565b82820282848281610a4357fe5b0414610a1e5760405162461bcd60e51b8152600401808060200182810382526021815260200180610bb16021913960400191505060405180910390fd5b600082820183811015610a1e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610b695760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b2e578181015183820152602001610b16565b50505050905090810190601f168015610b5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe796f752061726520747279696e6720746f207769746864726177206d6f726520636f6c6c61746572616c207468616e20796f752068617665206c6f636b6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775661756c74206d757374206861766520656e6f75676820616c6c6f77616e63652ea26469706673582212206847e7f331abc1452a0b16ac1c19123b5050034b564456e070f53b7617d0968864736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "1083:5488:9:-:0;;;2570:299;5:9:-1;2:2;;;27:1;24;17:12;2:2;2570:299:9;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;2570:299:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2570:299:9;;420:4:-1;411:14;;;;2570:299:9;;;;;411:14:-1;2570:299:9;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2570:299:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2570:299:9;;-1:-1:-1;;2720:16:9;;;;-1:-1:-1;2720:6:9;;:16;;;;;:::i;:::-;-1:-1:-1;2747:7:9;:21;;-1:-1:-1;;;;;;2747:21:9;;;-1:-1:-1;;;;;2747:21:9;;;;;;;;;;2779:11;:40;;;;;;;;;;;;;;2843:18;:3;2851:9;2843:7;;;;;;;:18;;:::i;:::-;2830:10;:31;-1:-1:-1;1083:5488:9;;-1:-1:-1;;;1083:5488:9;874:176:28;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:28:o;1083:5488:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1083:5488:9;;;-1:-1:-1;1083:5488:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1083:5488:9:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1083:5488:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1178:20:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1178:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5084:95;;;:::i;:::-;;;;-1:-1:-1;;;;;5084:95:9;;;;;;;;;;;;;;2877:129;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2877:129:9;-1:-1:-1;;;;;2877:129:9;;:::i;:::-;;3899:1076;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3899:1076:9;;:::i;1275:51::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1275:51:9;-1:-1:-1;;;;;1275:51:9;;:::i;:::-;;;;;;;;;;;;;;;;1235:31;;;:::i;1207:21::-;;;:::i;6272:296::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6272:296:9;-1:-1:-1;;;;;6272:296:9;;:::i;1146:25::-;;;:::i;3190:496::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3190:496:9;;:::i;5912:352::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5912:352:9;;;;;;;;;;:::i;5361:161::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5361:161:9;-1:-1:-1;;;;;5361:161:9;;:::i;1178:20::-;;;;;;;;;;;;;;;-1:-1:-1;;1178:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5084:95::-;5163:7;;-1:-1:-1;;;;;5163:7:9;;5084:95::o;2877:129::-;1617:11;;-1:-1:-1;;;;;1617:11:9;1595:10;:34;1587:43;;12:1:-1;9;2:12;1587:43:9;2958:11:::1;:40:::0;;-1:-1:-1;;;;;;2958:40:9::1;-1:-1:-1::0;;;;;2958:40:9;;;::::1;::::0;;;::::1;::::0;;2877:129::o;3899:1076::-;4007:11;;4061:7;;4007:63;;;-1:-1:-1;;;4007:63:9;;4041:10;4007:63;;;;-1:-1:-1;;;;;4061:7:9;;;4007:63;;;;;;-1:-1:-1;;;;4007:11:9;;-1:-1:-1;;4007:63:9;;;;;;;;;;;;;;-1:-1:-1;4007:11:9;:63;;;2:2:-1;;;;27:1;24;17:12;2:2;4007:63:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4007:63:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4007:63:9;;-1:-1:-1;4084:12:9;4081:115;;4122:9;4113:18;;4081:115;;;4175:7;4166:16;;4081:115;4395:6;4382:9;:19;;4360:96;;;;;-1:-1:-1;;;4360:96:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;4576:10;4559:28;;;;:16;:28;;;;;;:38;-1:-1:-1;4559:38:9;4551:114;;;;-1:-1:-1;;;4551:114:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4782:10;4765:28;;;;:16;:28;;;;;;:64;;4812:6;4765:64;:32;:64;:::i;:::-;4751:10;4734:28;;;;:16;:28;;;;;;;;:95;;;;4877:7;;:36;;-1:-1:-1;;;4877:36:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4877:7:9;;;;-1:-1:-1;;4877:36:9;;;;;4734:28;;4877:36;;;;;;;;;;:7;:36;;;2:2:-1;;;;27:1;24;17:12;2:2;4877:36:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4877:36:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;4929:38:9;;;4948:10;4929:38;;4877:36;4929:38;;;;;;;;;;;;;;;;;;3899:1076;;;:::o;1275:51::-;;;;;;;;;;;;;:::o;1235:31::-;;;-1:-1:-1;;;;;1235:31:9;;:::o;1207:21::-;;;-1:-1:-1;;;;;1207:21:9;;:::o;6272:296::-;6392:11;;6434:7;;6392:51;;;-1:-1:-1;;;6392:51:9;;-1:-1:-1;;;;;6434:7:9;;;6392:51;;;;;;-1:-1:-1;;;;6392:11:9;;:33;;:51;;;;;;;;;;;;;;:11;:51;;;2:2:-1;;;;27:1;24;17:12;2:2;6392:51:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6392:51:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6392:51:9;-1:-1:-1;;;;;6480:26:9;;6454:23;6480:26;;;:16;6392:51;6480:26;;;;;6392:51;;-1:-1:-1;6454:23:9;6480:47;;6392:51;6480:30;:47::i;:::-;6454:73;6272:296;-1:-1:-1;;;;6272:296:9:o;1146:25::-;;;;:::o;3190:496::-;3260:7;;:44;;;-1:-1:-1;;;3260:44:9;;3278:10;3260:44;;;;3298:4;3260:44;;;;;;3308:7;;-1:-1:-1;;;;;3260:7:9;;:17;;:44;;;;;;;;;;;;;;:7;:44;;;2:2:-1;;;;27:1;24;17:12;2:2;3260:44:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3260:44:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3260:44:9;:55;;3252:101;;;;-1:-1:-1;;;3252:101:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3372:7;;:29;;;-1:-1:-1;;;3372:29:9;;3390:10;3372:29;;;;;;3405:7;;-1:-1:-1;;;;;3372:7:9;;-1:-1:-1;;3372:29:9;;;;;;;;;;;;;;:7;:29;;;2:2:-1;;;;27:1;24;17:12;2:2;3372:29:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3372:29:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3372:29:9;:40;;3364:83;;;;;-1:-1:-1;;;3364:83:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;3458:7;;:56;;;-1:-1:-1;;;3458:56:9;;3479:10;3458:56;;;;3499:4;3458:56;;;;;;;;;;;;-1:-1:-1;;;;;3458:7:9;;;;-1:-1:-1;;3458:56:9;;;;;;;;;;;;;;;-1:-1:-1;3458:7:9;:56;;;2:2:-1;;;;27:1;24;17:12;2:2;3458:56:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3458:56:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;3573:10:9;3556:28;;;;:16;3458:56;3556:28;;;;;:65;;3603:7;3556:65;:32;:65;:::i;:::-;3542:10;3525:28;;;;:16;:28;;;;;;;;;:96;;;;3639:39;;;;;;;;;;;;;;;;;;;;;;;;3190:496;:::o;5912:352::-;1617:11;;-1:-1:-1;;;;;1617:11:9;1595:10;:34;1587:43;;12:1:-1;9;2:12;1587:43:9;1786:10:::1;;1780:3;:16;1772:25;;12:1:-1;9::::0;2:12:::1;1772:25:9;6108:7:::2;::::0;-1:-1:-1;;;;;6138:26:9;;::::2;6108:7;6138:26:::0;;;:16:::2;:26;::::0;;;;;;;;6108:57;;-1:-1:-1;;;6108:57:9;;;;::::2;::::0;;::::2;::::0;;;;;;;;;:7;;;::::2;::::0;-1:-1:-1;;6108:57:9;;;;;6138:26;;6108:57;;;;;;;;;;:7;:57;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;6108:57:9;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;6108:57:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;;;;;;;;6226:26:9::2;6255:1;6226:26:::0;;;:16:::2;6108:57;6226:26:::0;;;;:30;5912:352::o;5361:161::-;-1:-1:-1;;;;;5488:26:9;5456:7;5488:26;;;:16;:26;;;;;;;5361:161::o;1321:134:28:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;;:::o;2180:459::-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:28;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;874:176;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:187;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:28;;;1746:187::o",
  "source": "pragma solidity ^0.6.2;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./WarpWrapperToken.sol\";\r\nimport \"./interfaces/WarpControlI.sol\";\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n/// @title WarpVaultLP\r\n/// @author Christopher Dixon\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\r\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\r\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\r\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\r\nfrom the coumpound protocol.\r\n**/\r\n\r\ncontract WarpVaultLP {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public timeWizard;\r\n    string public lpName;\r\n\r\n    IERC20 public LPtoken;\r\n    WarpControlI public warpControl;\r\n\r\n    mapping(address => uint256) public collateralizedLP;\r\n\r\n    event CollateralProvided(address _account, uint _amount);\r\n    event CollateralWithdraw(address _account, uint amount);\r\n    /**\r\n     * @dev Throws if called by any account other than a warp control\r\n     */\r\n    modifier onlyWarpControl() {\r\n        require(msg.sender == address(warpControl));\r\n        _;\r\n    }\r\n\r\n/**\r\n@dev Throws if a function is called before the time wizard allows it\r\n**/\r\n    modifier angryWizard() {\r\n        require(now > timeWizard);\r\n        _;\r\n    }\r\n    /**\r\n    @notice constructor sets up token names and symbols for the WarpWrapperToken\r\n    @param _lp is the address of the lp token a specific Warp vault will represent\r\n    @param _lpName is the name of the lp token\r\n    @param _timelock is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)\r\n    @dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\r\n        each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\r\n        this contract the ability to call their mint and burn functions.\r\n    **/\r\n    constructor(\r\n        uint256 _timelock,\r\n        address _lp,\r\n        address _WarpControl,\r\n        string memory _lpName\r\n    ) public {\r\n        lpName = _lpName;\r\n        LPtoken = IERC20(_lp);\r\n        warpControl = WarpControlI(_WarpControl);\r\n        timeWizard = now.add(_timelock);\r\n    }\r\n\r\n    function updateWarpControl(address _warpControl) public onlyWarpControl {\r\n      warpControl = WarpControlI(_warpControl);\r\n    }\r\n\r\n    /**\r\n    @notice provideCollateral allows a user to collateralize this contracts associated LP token\r\n    @param _amount is the amount of LP being collateralized\r\n    **/\r\n    function provideCollateral(uint256 _amount) public {\r\n        require(LPtoken.allowance(msg.sender, address(this)) >= _amount, \"Vault must have enough allowance.\");\r\n        require(LPtoken.balanceOf(msg.sender) >= _amount, \"Must have enough LP to provide\");\r\n        LPtoken.transferFrom(msg.sender, address(this), _amount);\r\n        collateralizedLP[msg.sender] = collateralizedLP[msg.sender].add(\r\n            _amount\r\n        );\r\n\r\n        emit CollateralProvided(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n    @notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\r\n    @param _amount is the amount of LP tokens he wishes to withdraw\r\n    **/\r\n    function withdrawCollateral(uint256 _amount) public {\r\n        uint256 amount;\r\n        uint256 maxAmount = warpControl.getMaxWithdrawAllowed(msg.sender, address(LPtoken));\r\n        if(_amount == 0) {\r\n            amount = maxAmount;\r\n          } else {\r\n            amount = _amount;\r\n          }\r\n\r\n        //require the availible value of the LP locked in this contract the user has\r\n        //is greater than or equal to the amount being withdrawn\r\n        require(\r\n            maxAmount >= amount,\r\n            \"Trying to withdraw too much\"\r\n        );\r\n        //require the user has locked up enough collateral to withdraw this amount\r\n        require(collateralizedLP[msg.sender] >= amount, \"you are trying to withdraw more collateral than you have locked\");\r\n\r\n        //subtract withdrawn amount from amount stored\r\n        collateralizedLP[msg.sender] = collateralizedLP[msg.sender].sub(\r\n            amount\r\n        );\r\n        //transfer them their token\r\n        LPtoken.transfer(msg.sender, amount);\r\n        emit CollateralWithdraw(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n    @notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress\r\n    **/\r\n    function getAssetAdd() public view returns (address) {\r\n        return address(LPtoken);\r\n    }\r\n\r\n    /**\r\n@notice collateralOfAccount is a view function to retreive an accounts collateralized LP amount\r\n@param _account is the address of the account being looked up\r\n**/\r\n    function collateralOfAccount(address _account)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return collateralizedLP[_account];\r\n    }\r\n\r\n    /**\r\n@notice _liquidateAccount is a function to liquidate the LP tokens of the input account\r\n@param _account is the address of the account being liquidated\r\n@param _liquidator is the address of the account doing the liquidating who receives the liquidated LP's\r\n@dev this function uses the onlyWarpControl modifier meaning that only the Warp Control contract can call it\r\n**/\r\n    function _liquidateAccount(address _account, address _liquidator)\r\n        public\r\n        onlyWarpControl\r\n        angryWizard\r\n    {\r\n        //transfer the LP tokens to the liquidator\r\n        LPtoken.transfer(_liquidator, collateralizedLP[_account]);\r\n        //reset the borrowers collateral tracker\r\n        collateralizedLP[_account] = 0;\r\n    }\r\n\r\n    function valueOfAccountCollateral(address _account) external view returns(uint256) {\r\n        uint256 collateralPrice = warpControl.viewPriceOfCollateral(address(LPtoken));\r\n        uint256 collateralValue = collateralizedLP[_account].mul(collateralPrice);\r\n        return collateralValue;\r\n    }\r\n}\r\n",
  "sourcePath": "E:\\dOrg\\warp\\Smart-Contracts\\contracts\\WarpVaultLP.sol",
  "ast": {
    "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/WarpVaultLP.sol",
    "exportedSymbols": {
      "WarpVaultLP": [
        3316
      ]
    },
    "id": 3317,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2980,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2981,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 7292,
        "src": "27:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2982,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 7488,
        "src": "81:51:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2983,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 8073,
        "src": "134:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
        "file": "./WarpWrapperToken.sol",
        "id": 2984,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 5005,
        "src": "192:32:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol",
        "file": "./interfaces/WarpControlI.sol",
        "id": 2985,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 7020,
        "src": "226:39:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2986,
          "nodeType": "StructuredDocumentation",
          "src": "512:567:9",
          "text": "@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\nfrom the coumpound protocol.*"
        },
        "fullyImplemented": true,
        "id": 3316,
        "linearizedBaseContracts": [
          3316
        ],
        "name": "WarpVaultLP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2989,
            "libraryName": {
              "contractScope": null,
              "id": 2987,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7487,
              "src": "1117:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7487",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1111:27:9",
            "typeName": {
              "id": 2988,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1130:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "cb7b4206",
            "id": 2991,
            "mutability": "mutable",
            "name": "timeWizard",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1146:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2990,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1146:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46cd6801",
            "id": 2993,
            "mutability": "mutable",
            "name": "lpName",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1178:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2992,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1178:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c14cba3e",
            "id": 2995,
            "mutability": "mutable",
            "name": "LPtoken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1207:21:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8072",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2994,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8072,
              "src": "1207:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8072",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bbb7d489",
            "id": 2997,
            "mutability": "mutable",
            "name": "warpControl",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1235:31:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WarpControlI_$7019",
              "typeString": "contract WarpControlI"
            },
            "typeName": {
              "contractScope": null,
              "id": 2996,
              "name": "WarpControlI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7019,
              "src": "1235:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WarpControlI_$7019",
                "typeString": "contract WarpControlI"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "763e4a0d",
            "id": 3001,
            "mutability": "mutable",
            "name": "collateralizedLP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1275:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3000,
              "keyType": {
                "id": 2998,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1283:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1275:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2999,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1294:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3007,
            "name": "CollateralProvided",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3003,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3007,
                  "src": "1360:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3005,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3007,
                  "src": "1378:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3004,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1359:32:9"
            },
            "src": "1335:57:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3013,
            "name": "CollateralWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3009,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3013,
                  "src": "1423:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3011,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3013,
                  "src": "1441:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3010,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1422:31:9"
            },
            "src": "1398:56:9"
          },
          {
            "body": {
              "id": 3027,
              "nodeType": "Block",
              "src": "1576:74:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3017,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1595:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1595:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3021,
                              "name": "warpControl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2997,
                              "src": "1617:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WarpControlI_$7019",
                                "typeString": "contract WarpControlI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WarpControlI_$7019",
                                "typeString": "contract WarpControlI"
                              }
                            ],
                            "id": 3020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1609:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3019,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1609:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1609:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1595:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1587:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3025,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:43:9"
                },
                {
                  "id": 3026,
                  "nodeType": "PlaceholderStatement",
                  "src": "1641:1:9"
                }
              ]
            },
            "documentation": {
              "id": 3014,
              "nodeType": "StructuredDocumentation",
              "src": "1460:83:9",
              "text": "@dev Throws if called by any account other than a warp control"
            },
            "id": 3028,
            "name": "onlyWarpControl",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1573:2:9"
            },
            "src": "1549:101:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3038,
              "nodeType": "Block",
              "src": "1761:56:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3032,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "1780:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3033,
                          "name": "timeWizard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2991,
                          "src": "1786:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1780:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1772:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:25:9"
                },
                {
                  "id": 3037,
                  "nodeType": "PlaceholderStatement",
                  "src": "1808:1:9"
                }
              ]
            },
            "documentation": {
              "id": 3029,
              "nodeType": "StructuredDocumentation",
              "src": "1654:78:9",
              "text": "@dev Throws if a function is called before the time wizard allows it*"
            },
            "id": 3039,
            "name": "angryWizard",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1758:2:9"
            },
            "src": "1738:79:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3074,
              "nodeType": "Block",
              "src": "2709:160:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3051,
                      "name": "lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "2720:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3052,
                      "name": "_lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3048,
                      "src": "2729:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2720:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3054,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3055,
                      "name": "LPtoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2995,
                      "src": "2747:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8072",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3057,
                          "name": "_lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3044,
                          "src": "2764:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3056,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8072,
                        "src": "2757:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$8072_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2757:11:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8072",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2747:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8072",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3060,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3061,
                      "name": "warpControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "2779:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7019",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3063,
                          "name": "_WarpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3046,
                          "src": "2806:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3062,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7019,
                        "src": "2793:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$7019_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 3064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2793:26:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7019",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2779:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$7019",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 3066,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:40:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3067,
                      "name": "timeWizard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2991,
                      "src": "2830:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3070,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3042,
                          "src": "2851:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3068,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "2843:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7320,
                        "src": "2843:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2843:18:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2830:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3073,
                  "nodeType": "ExpressionStatement",
                  "src": "2830:31:9"
                }
              ]
            },
            "documentation": {
              "id": 3040,
              "nodeType": "StructuredDocumentation",
              "src": "1823:741:9",
              "text": "@notice constructor sets up token names and symbols for the WarpWrapperToken\n@param _lp is the address of the lp token a specific Warp vault will represent\n@param _lpName is the name of the lp token\n@param _timelock is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)\n@dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\neach type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\nthis contract the ability to call their mint and burn functions.*"
            },
            "id": 3075,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3042,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "2592:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3044,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "2620:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2620:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3046,
                  "mutability": "mutable",
                  "name": "_WarpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "2642:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3048,
                  "mutability": "mutable",
                  "name": "_lpName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "2673:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2581:120:9"
            },
            "returnParameters": {
              "id": 3050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2709:0:9"
            },
            "scope": 3316,
            "src": "2570:299:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3088,
              "nodeType": "Block",
              "src": "2949:57:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3082,
                      "name": "warpControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "2958:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7019",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3084,
                          "name": "_warpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3077,
                          "src": "2985:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3083,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7019,
                        "src": "2972:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$7019_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 3085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2972:26:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7019",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2958:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$7019",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 3087,
                  "nodeType": "ExpressionStatement",
                  "src": "2958:40:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4cf3e784",
            "id": 3089,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3080,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3079,
                  "name": "onlyWarpControl",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3028,
                  "src": "2933:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2933:15:9"
              }
            ],
            "name": "updateWarpControl",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3077,
                  "mutability": "mutable",
                  "name": "_warpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3089,
                  "src": "2904:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2903:22:9"
            },
            "returnParameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2949:0:9"
            },
            "scope": 3316,
            "src": "2877:129:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3152,
              "nodeType": "Block",
              "src": "3241:445:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3098,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3278:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3278:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3102,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3298:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WarpVaultLP_$3316",
                                    "typeString": "contract WarpVaultLP"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WarpVaultLP_$3316",
                                    "typeString": "contract WarpVaultLP"
                                  }
                                ],
                                "id": 3101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3290:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3100,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3290:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3290:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3096,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "3260:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8072",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8031,
                            "src": "3260:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 3104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3260:44:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3105,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "3308:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3260:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5661756c74206d757374206861766520656e6f75676820616c6c6f77616e63652e",
                        "id": 3107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3317:35:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff02b9fc82578adaeb1ee8508353c479a64656660dbb700329f0785ff0182118",
                          "typeString": "literal_string \"Vault must have enough allowance.\""
                        },
                        "value": "Vault must have enough allowance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff02b9fc82578adaeb1ee8508353c479a64656660dbb700329f0785ff0182118",
                          "typeString": "literal_string \"Vault must have enough allowance.\""
                        }
                      ],
                      "id": 3095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3252:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3252:101:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3109,
                  "nodeType": "ExpressionStatement",
                  "src": "3252:101:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3390:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3390:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3111,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "3372:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8072",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8011,
                            "src": "3372:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3372:29:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3116,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "3405:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3372:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520656e6f756768204c5020746f2070726f76696465",
                        "id": 3118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3414:32:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        },
                        "value": "Must have enough LP to provide"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        }
                      ],
                      "id": 3110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3364:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3364:83:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3120,
                  "nodeType": "ExpressionStatement",
                  "src": "3364:83:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3479:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3479:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3128,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3499:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$3316",
                              "typeString": "contract WarpVaultLP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$3316",
                              "typeString": "contract WarpVaultLP"
                            }
                          ],
                          "id": 3127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3491:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3491:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3491:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3130,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "3506:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3121,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "3458:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8053,
                      "src": "3458:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3458:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3132,
                  "nodeType": "ExpressionStatement",
                  "src": "3458:56:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3133,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3001,
                        "src": "3525:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3136,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3542:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3542:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3525:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3142,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "3603:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3137,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "3556:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3140,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3138,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3573:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3573:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3556:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7320,
                        "src": "3556:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3556:65:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3525:96:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3145,
                  "nodeType": "ExpressionStatement",
                  "src": "3525:96:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3658:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3658:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3149,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "3670:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3146,
                      "name": "CollateralProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3007,
                      "src": "3639:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3639:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3151,
                  "nodeType": "EmitStatement",
                  "src": "3634:44:9"
                }
              ]
            },
            "documentation": {
              "id": 3090,
              "nodeType": "StructuredDocumentation",
              "src": "3014:170:9",
              "text": "@notice provideCollateral allows a user to collateralize this contracts associated LP token\n@param _amount is the amount of LP being collateralized*"
            },
            "functionSelector": "f0c3c06b",
            "id": 3153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3092,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3153,
                  "src": "3217:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3217:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3216:17:9"
            },
            "returnParameters": {
              "id": 3094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3241:0:9"
            },
            "scope": 3316,
            "src": "3190:496:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3232,
              "nodeType": "Block",
              "src": "3951:1024:9",
              "statements": [
                {
                  "assignments": [
                    3160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3160,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3232,
                      "src": "3962:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3962:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3161,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3962:14:9"
                },
                {
                  "assignments": [
                    3163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3163,
                      "mutability": "mutable",
                      "name": "maxAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3232,
                      "src": "3987:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3987:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3173,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4041:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4041:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3170,
                            "name": "LPtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2995,
                            "src": "4061:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8072",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$8072",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4053:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4053:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4053:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3164,
                        "name": "warpControl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "4007:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WarpControlI_$7019",
                          "typeString": "contract WarpControlI"
                        }
                      },
                      "id": 3165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMaxWithdrawAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6920,
                      "src": "4007:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 3172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4007:63:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3987:83:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3174,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3156,
                      "src": "4084:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4095:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4084:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3186,
                    "nodeType": "Block",
                    "src": "4151:45:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3182,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3160,
                            "src": "4166:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3183,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3156,
                            "src": "4175:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4166:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3185,
                        "nodeType": "ExpressionStatement",
                        "src": "4166:16:9"
                      }
                    ]
                  },
                  "id": 3187,
                  "nodeType": "IfStatement",
                  "src": "4081:115:9",
                  "trueBody": {
                    "id": 3181,
                    "nodeType": "Block",
                    "src": "4098:47:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3177,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3160,
                            "src": "4113:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3178,
                            "name": "maxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3163,
                            "src": "4122:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4113:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3180,
                        "nodeType": "ExpressionStatement",
                        "src": "4113:18:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3189,
                          "name": "maxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3163,
                          "src": "4382:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3190,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3160,
                          "src": "4395:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4382:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "547279696e6720746f20776974686472617720746f6f206d756368",
                        "id": 3192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4416:29:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        },
                        "value": "Trying to withdraw too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        }
                      ],
                      "id": 3188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4360:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4360:96:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3194,
                  "nodeType": "ExpressionStatement",
                  "src": "4360:96:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3196,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "4559:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3199,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3197,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4576:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4576:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4559:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3200,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3160,
                          "src": "4591:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4559:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752061726520747279696e6720746f207769746864726177206d6f726520636f6c6c61746572616c207468616e20796f752068617665206c6f636b6564",
                        "id": 3202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4599:65:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a962e5d734e10f5e9f0032efef10c1040971ae90410b2eda99f153e6d62850f",
                          "typeString": "literal_string \"you are trying to withdraw more collateral than you have locked\""
                        },
                        "value": "you are trying to withdraw more collateral than you have locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a962e5d734e10f5e9f0032efef10c1040971ae90410b2eda99f153e6d62850f",
                          "typeString": "literal_string \"you are trying to withdraw more collateral than you have locked\""
                        }
                      ],
                      "id": 3195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4551:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4551:114:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3204,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:114:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3205,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3001,
                        "src": "4734:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3208,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4751:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4751:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4734:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3214,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3160,
                          "src": "4812:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3209,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "4765:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3212,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3210,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4782:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4782:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4765:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7337,
                        "src": "4765:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4765:64:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4734:95:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3217,
                  "nodeType": "ExpressionStatement",
                  "src": "4734:95:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4894:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4894:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3223,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3160,
                        "src": "4906:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3218,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "4877:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8021,
                      "src": "4877:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4877:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3225,
                  "nodeType": "ExpressionStatement",
                  "src": "4877:36:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3227,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4948:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4948:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3229,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3160,
                        "src": "4960:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3226,
                      "name": "CollateralWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3013,
                      "src": "4929:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4929:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3231,
                  "nodeType": "EmitStatement",
                  "src": "4924:43:9"
                }
              ]
            },
            "documentation": {
              "id": 3154,
              "nodeType": "StructuredDocumentation",
              "src": "3694:199:9",
              "text": "@notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\n@param _amount is the amount of LP tokens he wishes to withdraw*"
            },
            "functionSelector": "6112fe2e",
            "id": 3233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3156,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3233,
                  "src": "3927:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3927:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3926:17:9"
            },
            "returnParameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3951:0:9"
            },
            "scope": 3316,
            "src": "3899:1076:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3244,
              "nodeType": "Block",
              "src": "5137:42:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3241,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "5163:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 3240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5155:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3239,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5155:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 3242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5155:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3238,
                  "id": 3243,
                  "nodeType": "Return",
                  "src": "5148:23:9"
                }
              ]
            },
            "documentation": {
              "id": 3234,
              "nodeType": "StructuredDocumentation",
              "src": "4983:95:9",
              "text": "@notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
            },
            "functionSelector": "4c20ac74",
            "id": 3245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetAdd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5104:2:9"
            },
            "returnParameters": {
              "id": 3238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3237,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3245,
                  "src": "5128:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5127:9:9"
            },
            "scope": 3316,
            "src": "5084:95:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3257,
              "nodeType": "Block",
              "src": "5470:52:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3253,
                      "name": "collateralizedLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3001,
                      "src": "5488:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3255,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3254,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3248,
                      "src": "5505:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5488:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3252,
                  "id": 3256,
                  "nodeType": "Return",
                  "src": "5481:33:9"
                }
              ]
            },
            "documentation": {
              "id": 3246,
              "nodeType": "StructuredDocumentation",
              "src": "5187:168:9",
              "text": "@notice collateralOfAccount is a view function to retreive an accounts collateralized LP amount\n@param _account is the address of the account being looked up*"
            },
            "functionSelector": "f919b4bf",
            "id": 3258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralOfAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3248,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3258,
                  "src": "5390:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5390:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5389:18:9"
            },
            "returnParameters": {
              "id": 3252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3251,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3258,
                  "src": "5456:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5456:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5455:9:9"
            },
            "scope": 3316,
            "src": "5361:161:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3285,
              "nodeType": "Block",
              "src": "6045:219:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3273,
                        "name": "_liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3263,
                        "src": "6125:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3274,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "6138:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3276,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3275,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3261,
                          "src": "6155:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6138:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3270,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "6108:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8021,
                      "src": "6108:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6108:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3278,
                  "nodeType": "ExpressionStatement",
                  "src": "6108:57:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3279,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3001,
                        "src": "6226:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3281,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3280,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "6243:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6226:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6255:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6226:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "6226:30:9"
                }
              ]
            },
            "documentation": {
              "id": 3259,
              "nodeType": "StructuredDocumentation",
              "src": "5530:376:9",
              "text": "@notice _liquidateAccount is a function to liquidate the LP tokens of the input account\n@param _account is the address of the account being liquidated\n@param _liquidator is the address of the account doing the liquidating who receives the liquidated LP's\n@dev this function uses the onlyWarpControl modifier meaning that only the Warp Control contract can call it*"
            },
            "functionSelector": "f4b5e3e4",
            "id": 3286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3266,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3265,
                  "name": "onlyWarpControl",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3028,
                  "src": "6003:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6003:15:9"
              },
              {
                "arguments": null,
                "id": 3268,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3267,
                  "name": "angryWizard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3039,
                  "src": "6028:11:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6028:11:9"
              }
            ],
            "name": "_liquidateAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3261,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3286,
                  "src": "5939:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "_liquidator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3286,
                  "src": "5957:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5957:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5938:39:9"
            },
            "returnParameters": {
              "id": 3269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6045:0:9"
            },
            "scope": 3316,
            "src": "5912:352:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3314,
              "nodeType": "Block",
              "src": "6355:213:9",
              "statements": [
                {
                  "assignments": [
                    3294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3294,
                      "mutability": "mutable",
                      "name": "collateralPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3314,
                      "src": "6366:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6366:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3302,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3299,
                            "name": "LPtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2995,
                            "src": "6434:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8072",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$8072",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6426:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6426:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6426:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3295,
                        "name": "warpControl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "6392:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WarpControlI_$7019",
                          "typeString": "contract WarpControlI"
                        }
                      },
                      "id": 3296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "viewPriceOfCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6936,
                      "src": "6392:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6392:51:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6366:77:9"
                },
                {
                  "assignments": [
                    3304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3304,
                      "mutability": "mutable",
                      "name": "collateralValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3314,
                      "src": "6454:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3303,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6454:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3311,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3309,
                        "name": "collateralPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3294,
                        "src": "6511:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3305,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "6480:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3307,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3306,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3288,
                          "src": "6497:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6480:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7400,
                      "src": "6480:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6480:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6454:73:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3312,
                    "name": "collateralValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3304,
                    "src": "6545:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3292,
                  "id": 3313,
                  "nodeType": "Return",
                  "src": "6538:22:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c453e557",
            "id": 3315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "valueOfAccountCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3288,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3315,
                  "src": "6306:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6306:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6305:18:9"
            },
            "returnParameters": {
              "id": 3292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3291,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3315,
                  "src": "6346:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6346:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6345:9:9"
            },
            "scope": 3316,
            "src": "6272:296:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3317,
        "src": "1083:5488:9"
      }
    ],
    "src": "0:6573:9"
  },
  "legacyAST": {
    "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/WarpVaultLP.sol",
    "exportedSymbols": {
      "WarpVaultLP": [
        3316
      ]
    },
    "id": 3317,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2980,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2981,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 7292,
        "src": "27:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2982,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 7488,
        "src": "81:51:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2983,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 8073,
        "src": "134:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
        "file": "./WarpWrapperToken.sol",
        "id": 2984,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 5005,
        "src": "192:32:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol",
        "file": "./interfaces/WarpControlI.sol",
        "id": 2985,
        "nodeType": "ImportDirective",
        "scope": 3317,
        "sourceUnit": 7020,
        "src": "226:39:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2986,
          "nodeType": "StructuredDocumentation",
          "src": "512:567:9",
          "text": "@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\nfrom the coumpound protocol.*"
        },
        "fullyImplemented": true,
        "id": 3316,
        "linearizedBaseContracts": [
          3316
        ],
        "name": "WarpVaultLP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2989,
            "libraryName": {
              "contractScope": null,
              "id": 2987,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7487,
              "src": "1117:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7487",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1111:27:9",
            "typeName": {
              "id": 2988,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1130:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "cb7b4206",
            "id": 2991,
            "mutability": "mutable",
            "name": "timeWizard",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1146:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2990,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1146:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46cd6801",
            "id": 2993,
            "mutability": "mutable",
            "name": "lpName",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1178:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2992,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1178:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c14cba3e",
            "id": 2995,
            "mutability": "mutable",
            "name": "LPtoken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1207:21:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8072",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2994,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8072,
              "src": "1207:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8072",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bbb7d489",
            "id": 2997,
            "mutability": "mutable",
            "name": "warpControl",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1235:31:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WarpControlI_$7019",
              "typeString": "contract WarpControlI"
            },
            "typeName": {
              "contractScope": null,
              "id": 2996,
              "name": "WarpControlI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7019,
              "src": "1235:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WarpControlI_$7019",
                "typeString": "contract WarpControlI"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "763e4a0d",
            "id": 3001,
            "mutability": "mutable",
            "name": "collateralizedLP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3316,
            "src": "1275:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3000,
              "keyType": {
                "id": 2998,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1283:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1275:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2999,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1294:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3007,
            "name": "CollateralProvided",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3003,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3007,
                  "src": "1360:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3005,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3007,
                  "src": "1378:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3004,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1359:32:9"
            },
            "src": "1335:57:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3013,
            "name": "CollateralWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3009,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3013,
                  "src": "1423:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3011,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3013,
                  "src": "1441:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3010,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1422:31:9"
            },
            "src": "1398:56:9"
          },
          {
            "body": {
              "id": 3027,
              "nodeType": "Block",
              "src": "1576:74:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3017,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1595:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1595:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3021,
                              "name": "warpControl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2997,
                              "src": "1617:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WarpControlI_$7019",
                                "typeString": "contract WarpControlI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WarpControlI_$7019",
                                "typeString": "contract WarpControlI"
                              }
                            ],
                            "id": 3020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1609:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3019,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1609:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1609:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1595:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1587:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3025,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:43:9"
                },
                {
                  "id": 3026,
                  "nodeType": "PlaceholderStatement",
                  "src": "1641:1:9"
                }
              ]
            },
            "documentation": {
              "id": 3014,
              "nodeType": "StructuredDocumentation",
              "src": "1460:83:9",
              "text": "@dev Throws if called by any account other than a warp control"
            },
            "id": 3028,
            "name": "onlyWarpControl",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1573:2:9"
            },
            "src": "1549:101:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3038,
              "nodeType": "Block",
              "src": "1761:56:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3032,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "1780:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3033,
                          "name": "timeWizard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2991,
                          "src": "1786:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1780:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1772:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:25:9"
                },
                {
                  "id": 3037,
                  "nodeType": "PlaceholderStatement",
                  "src": "1808:1:9"
                }
              ]
            },
            "documentation": {
              "id": 3029,
              "nodeType": "StructuredDocumentation",
              "src": "1654:78:9",
              "text": "@dev Throws if a function is called before the time wizard allows it*"
            },
            "id": 3039,
            "name": "angryWizard",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1758:2:9"
            },
            "src": "1738:79:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3074,
              "nodeType": "Block",
              "src": "2709:160:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3051,
                      "name": "lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "2720:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3052,
                      "name": "_lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3048,
                      "src": "2729:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2720:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3054,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3055,
                      "name": "LPtoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2995,
                      "src": "2747:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8072",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3057,
                          "name": "_lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3044,
                          "src": "2764:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3056,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8072,
                        "src": "2757:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$8072_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2757:11:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8072",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2747:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8072",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3060,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3061,
                      "name": "warpControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "2779:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7019",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3063,
                          "name": "_WarpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3046,
                          "src": "2806:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3062,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7019,
                        "src": "2793:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$7019_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 3064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2793:26:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7019",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2779:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$7019",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 3066,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:40:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3067,
                      "name": "timeWizard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2991,
                      "src": "2830:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3070,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3042,
                          "src": "2851:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3068,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "2843:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7320,
                        "src": "2843:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2843:18:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2830:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3073,
                  "nodeType": "ExpressionStatement",
                  "src": "2830:31:9"
                }
              ]
            },
            "documentation": {
              "id": 3040,
              "nodeType": "StructuredDocumentation",
              "src": "1823:741:9",
              "text": "@notice constructor sets up token names and symbols for the WarpWrapperToken\n@param _lp is the address of the lp token a specific Warp vault will represent\n@param _lpName is the name of the lp token\n@param _timelock is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)\n@dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\neach type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\nthis contract the ability to call their mint and burn functions.*"
            },
            "id": 3075,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3042,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "2592:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3044,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "2620:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2620:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3046,
                  "mutability": "mutable",
                  "name": "_WarpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "2642:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3048,
                  "mutability": "mutable",
                  "name": "_lpName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "2673:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2581:120:9"
            },
            "returnParameters": {
              "id": 3050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2709:0:9"
            },
            "scope": 3316,
            "src": "2570:299:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3088,
              "nodeType": "Block",
              "src": "2949:57:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3082,
                      "name": "warpControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "2958:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7019",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3084,
                          "name": "_warpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3077,
                          "src": "2985:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3083,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7019,
                        "src": "2972:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$7019_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 3085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2972:26:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7019",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2958:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$7019",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 3087,
                  "nodeType": "ExpressionStatement",
                  "src": "2958:40:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4cf3e784",
            "id": 3089,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3080,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3079,
                  "name": "onlyWarpControl",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3028,
                  "src": "2933:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2933:15:9"
              }
            ],
            "name": "updateWarpControl",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3077,
                  "mutability": "mutable",
                  "name": "_warpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3089,
                  "src": "2904:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2903:22:9"
            },
            "returnParameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2949:0:9"
            },
            "scope": 3316,
            "src": "2877:129:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3152,
              "nodeType": "Block",
              "src": "3241:445:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3098,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3278:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3278:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3102,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3298:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WarpVaultLP_$3316",
                                    "typeString": "contract WarpVaultLP"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WarpVaultLP_$3316",
                                    "typeString": "contract WarpVaultLP"
                                  }
                                ],
                                "id": 3101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3290:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3100,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3290:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3290:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3096,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "3260:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8072",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8031,
                            "src": "3260:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 3104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3260:44:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3105,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "3308:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3260:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5661756c74206d757374206861766520656e6f75676820616c6c6f77616e63652e",
                        "id": 3107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3317:35:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff02b9fc82578adaeb1ee8508353c479a64656660dbb700329f0785ff0182118",
                          "typeString": "literal_string \"Vault must have enough allowance.\""
                        },
                        "value": "Vault must have enough allowance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff02b9fc82578adaeb1ee8508353c479a64656660dbb700329f0785ff0182118",
                          "typeString": "literal_string \"Vault must have enough allowance.\""
                        }
                      ],
                      "id": 3095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3252:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3252:101:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3109,
                  "nodeType": "ExpressionStatement",
                  "src": "3252:101:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3390:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3390:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3111,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "3372:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8072",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8011,
                            "src": "3372:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3372:29:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3116,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "3405:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3372:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520656e6f756768204c5020746f2070726f76696465",
                        "id": 3118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3414:32:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        },
                        "value": "Must have enough LP to provide"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        }
                      ],
                      "id": 3110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3364:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3364:83:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3120,
                  "nodeType": "ExpressionStatement",
                  "src": "3364:83:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3479:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3479:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3128,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3499:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$3316",
                              "typeString": "contract WarpVaultLP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$3316",
                              "typeString": "contract WarpVaultLP"
                            }
                          ],
                          "id": 3127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3491:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3491:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3491:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3130,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "3506:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3121,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "3458:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8053,
                      "src": "3458:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3458:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3132,
                  "nodeType": "ExpressionStatement",
                  "src": "3458:56:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3133,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3001,
                        "src": "3525:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3136,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3542:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3542:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3525:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3142,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "3603:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3137,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "3556:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3140,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3138,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3573:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3573:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3556:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7320,
                        "src": "3556:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3556:65:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3525:96:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3145,
                  "nodeType": "ExpressionStatement",
                  "src": "3525:96:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3658:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3658:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3149,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "3670:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3146,
                      "name": "CollateralProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3007,
                      "src": "3639:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3639:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3151,
                  "nodeType": "EmitStatement",
                  "src": "3634:44:9"
                }
              ]
            },
            "documentation": {
              "id": 3090,
              "nodeType": "StructuredDocumentation",
              "src": "3014:170:9",
              "text": "@notice provideCollateral allows a user to collateralize this contracts associated LP token\n@param _amount is the amount of LP being collateralized*"
            },
            "functionSelector": "f0c3c06b",
            "id": 3153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3092,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3153,
                  "src": "3217:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3217:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3216:17:9"
            },
            "returnParameters": {
              "id": 3094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3241:0:9"
            },
            "scope": 3316,
            "src": "3190:496:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3232,
              "nodeType": "Block",
              "src": "3951:1024:9",
              "statements": [
                {
                  "assignments": [
                    3160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3160,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3232,
                      "src": "3962:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3962:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3161,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3962:14:9"
                },
                {
                  "assignments": [
                    3163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3163,
                      "mutability": "mutable",
                      "name": "maxAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3232,
                      "src": "3987:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3987:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3173,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4041:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4041:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3170,
                            "name": "LPtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2995,
                            "src": "4061:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8072",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$8072",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4053:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4053:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4053:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3164,
                        "name": "warpControl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "4007:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WarpControlI_$7019",
                          "typeString": "contract WarpControlI"
                        }
                      },
                      "id": 3165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMaxWithdrawAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6920,
                      "src": "4007:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 3172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4007:63:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3987:83:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3174,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3156,
                      "src": "4084:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4095:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4084:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3186,
                    "nodeType": "Block",
                    "src": "4151:45:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3182,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3160,
                            "src": "4166:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3183,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3156,
                            "src": "4175:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4166:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3185,
                        "nodeType": "ExpressionStatement",
                        "src": "4166:16:9"
                      }
                    ]
                  },
                  "id": 3187,
                  "nodeType": "IfStatement",
                  "src": "4081:115:9",
                  "trueBody": {
                    "id": 3181,
                    "nodeType": "Block",
                    "src": "4098:47:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3177,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3160,
                            "src": "4113:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3178,
                            "name": "maxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3163,
                            "src": "4122:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4113:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3180,
                        "nodeType": "ExpressionStatement",
                        "src": "4113:18:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3189,
                          "name": "maxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3163,
                          "src": "4382:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3190,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3160,
                          "src": "4395:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4382:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "547279696e6720746f20776974686472617720746f6f206d756368",
                        "id": 3192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4416:29:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        },
                        "value": "Trying to withdraw too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        }
                      ],
                      "id": 3188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4360:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4360:96:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3194,
                  "nodeType": "ExpressionStatement",
                  "src": "4360:96:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3196,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "4559:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3199,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3197,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4576:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4576:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4559:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3200,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3160,
                          "src": "4591:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4559:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752061726520747279696e6720746f207769746864726177206d6f726520636f6c6c61746572616c207468616e20796f752068617665206c6f636b6564",
                        "id": 3202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4599:65:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a962e5d734e10f5e9f0032efef10c1040971ae90410b2eda99f153e6d62850f",
                          "typeString": "literal_string \"you are trying to withdraw more collateral than you have locked\""
                        },
                        "value": "you are trying to withdraw more collateral than you have locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a962e5d734e10f5e9f0032efef10c1040971ae90410b2eda99f153e6d62850f",
                          "typeString": "literal_string \"you are trying to withdraw more collateral than you have locked\""
                        }
                      ],
                      "id": 3195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4551:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4551:114:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3204,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:114:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3205,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3001,
                        "src": "4734:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3208,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4751:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4751:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4734:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3214,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3160,
                          "src": "4812:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3209,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "4765:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3212,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3210,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4782:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4782:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4765:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7337,
                        "src": "4765:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4765:64:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4734:95:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3217,
                  "nodeType": "ExpressionStatement",
                  "src": "4734:95:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4894:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4894:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3223,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3160,
                        "src": "4906:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3218,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "4877:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8021,
                      "src": "4877:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4877:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3225,
                  "nodeType": "ExpressionStatement",
                  "src": "4877:36:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3227,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4948:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4948:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3229,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3160,
                        "src": "4960:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3226,
                      "name": "CollateralWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3013,
                      "src": "4929:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4929:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3231,
                  "nodeType": "EmitStatement",
                  "src": "4924:43:9"
                }
              ]
            },
            "documentation": {
              "id": 3154,
              "nodeType": "StructuredDocumentation",
              "src": "3694:199:9",
              "text": "@notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\n@param _amount is the amount of LP tokens he wishes to withdraw*"
            },
            "functionSelector": "6112fe2e",
            "id": 3233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3156,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3233,
                  "src": "3927:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3927:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3926:17:9"
            },
            "returnParameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3951:0:9"
            },
            "scope": 3316,
            "src": "3899:1076:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3244,
              "nodeType": "Block",
              "src": "5137:42:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3241,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "5163:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 3240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5155:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3239,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5155:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 3242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5155:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3238,
                  "id": 3243,
                  "nodeType": "Return",
                  "src": "5148:23:9"
                }
              ]
            },
            "documentation": {
              "id": 3234,
              "nodeType": "StructuredDocumentation",
              "src": "4983:95:9",
              "text": "@notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
            },
            "functionSelector": "4c20ac74",
            "id": 3245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetAdd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5104:2:9"
            },
            "returnParameters": {
              "id": 3238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3237,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3245,
                  "src": "5128:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5127:9:9"
            },
            "scope": 3316,
            "src": "5084:95:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3257,
              "nodeType": "Block",
              "src": "5470:52:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3253,
                      "name": "collateralizedLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3001,
                      "src": "5488:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3255,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3254,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3248,
                      "src": "5505:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5488:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3252,
                  "id": 3256,
                  "nodeType": "Return",
                  "src": "5481:33:9"
                }
              ]
            },
            "documentation": {
              "id": 3246,
              "nodeType": "StructuredDocumentation",
              "src": "5187:168:9",
              "text": "@notice collateralOfAccount is a view function to retreive an accounts collateralized LP amount\n@param _account is the address of the account being looked up*"
            },
            "functionSelector": "f919b4bf",
            "id": 3258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralOfAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3248,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3258,
                  "src": "5390:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5390:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5389:18:9"
            },
            "returnParameters": {
              "id": 3252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3251,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3258,
                  "src": "5456:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5456:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5455:9:9"
            },
            "scope": 3316,
            "src": "5361:161:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3285,
              "nodeType": "Block",
              "src": "6045:219:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3273,
                        "name": "_liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3263,
                        "src": "6125:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3274,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "6138:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3276,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3275,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3261,
                          "src": "6155:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6138:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3270,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "6108:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8072",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8021,
                      "src": "6108:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6108:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3278,
                  "nodeType": "ExpressionStatement",
                  "src": "6108:57:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3279,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3001,
                        "src": "6226:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3281,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3280,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "6243:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6226:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6255:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6226:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "6226:30:9"
                }
              ]
            },
            "documentation": {
              "id": 3259,
              "nodeType": "StructuredDocumentation",
              "src": "5530:376:9",
              "text": "@notice _liquidateAccount is a function to liquidate the LP tokens of the input account\n@param _account is the address of the account being liquidated\n@param _liquidator is the address of the account doing the liquidating who receives the liquidated LP's\n@dev this function uses the onlyWarpControl modifier meaning that only the Warp Control contract can call it*"
            },
            "functionSelector": "f4b5e3e4",
            "id": 3286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3266,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3265,
                  "name": "onlyWarpControl",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3028,
                  "src": "6003:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6003:15:9"
              },
              {
                "arguments": null,
                "id": 3268,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3267,
                  "name": "angryWizard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3039,
                  "src": "6028:11:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6028:11:9"
              }
            ],
            "name": "_liquidateAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3261,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3286,
                  "src": "5939:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "_liquidator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3286,
                  "src": "5957:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5957:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5938:39:9"
            },
            "returnParameters": {
              "id": 3269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6045:0:9"
            },
            "scope": 3316,
            "src": "5912:352:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3314,
              "nodeType": "Block",
              "src": "6355:213:9",
              "statements": [
                {
                  "assignments": [
                    3294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3294,
                      "mutability": "mutable",
                      "name": "collateralPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3314,
                      "src": "6366:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6366:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3302,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3299,
                            "name": "LPtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2995,
                            "src": "6434:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8072",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$8072",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6426:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6426:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6426:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3295,
                        "name": "warpControl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "6392:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WarpControlI_$7019",
                          "typeString": "contract WarpControlI"
                        }
                      },
                      "id": 3296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "viewPriceOfCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6936,
                      "src": "6392:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6392:51:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6366:77:9"
                },
                {
                  "assignments": [
                    3304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3304,
                      "mutability": "mutable",
                      "name": "collateralValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3314,
                      "src": "6454:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3303,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6454:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3311,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3309,
                        "name": "collateralPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3294,
                        "src": "6511:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3305,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "6480:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3307,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3306,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3288,
                          "src": "6497:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6480:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7400,
                      "src": "6480:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6480:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6454:73:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3312,
                    "name": "collateralValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3304,
                    "src": "6545:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3292,
                  "id": 3313,
                  "nodeType": "Return",
                  "src": "6538:22:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c453e557",
            "id": 3315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "valueOfAccountCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3288,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3315,
                  "src": "6306:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6306:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6305:18:9"
            },
            "returnParameters": {
              "id": 3292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3291,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3315,
                  "src": "6346:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6346:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6345:9:9"
            },
            "scope": 3316,
            "src": "6272:296:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3317,
        "src": "1083:5488:9"
      }
    ],
    "src": "0:6573:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-11T00:35:02.032Z",
  "devdoc": {
    "methods": {
      "_liquidateAccount(address,address)": {
        "details": "this function uses the onlyWarpControl modifier meaning that only the Warp Control contract can call it*",
        "params": {
          "_account": "is the address of the account being liquidated",
          "_liquidator": "is the address of the account doing the liquidating who receives the liquidated LP's"
        }
      },
      "collateralOfAccount(address)": {
        "params": {
          "_account": "is the address of the account being looked up*"
        }
      },
      "constructor": {
        "details": "this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving this contract the ability to call their mint and burn functions.*",
        "params": {
          "_lp": "is the address of the lp token a specific Warp vault will represent",
          "_lpName": "is the name of the lp token",
          "_timelock": "is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)"
        }
      },
      "provideCollateral(uint256)": {
        "params": {
          "_amount": "is the amount of LP being collateralized*"
        }
      },
      "withdrawCollateral(uint256)": {
        "params": {
          "_amount": "is the amount of LP tokens he wishes to withdraw*"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "_liquidateAccount(address,address)": {
        "notice": "_liquidateAccount is a function to liquidate the LP tokens of the input account"
      },
      "collateralOfAccount(address)": {
        "notice": "collateralOfAccount is a view function to retreive an accounts collateralized LP amount"
      },
      "constructor": "constructor sets up token names and symbols for the WarpWrapperToken",
      "getAssetAdd()": {
        "notice": "getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
      },
      "provideCollateral(uint256)": {
        "notice": "provideCollateral allows a user to collateralize this contracts associated LP token"
      },
      "withdrawCollateral(uint256)": {
        "notice": "withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral"
      }
    },
    "notice": "the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the Warp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets, holding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts from the coumpound protocol.*"
  }
}