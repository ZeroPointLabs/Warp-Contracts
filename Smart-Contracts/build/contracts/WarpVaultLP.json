{
  "contractName": "WarpVaultLP",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_lp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WarpControl",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_lpName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralProvided",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LPtoken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WC",
      "outputs": [
        {
          "internalType": "contract WarpControlI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralizedLP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeWizard",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_warpControl",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "provideCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAssetAdd",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "collateralOfAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        }
      ],
      "name": "_liquidateAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "valueOfAccountCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WarpControl\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_lpName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"CollateralProvided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LPtoken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WC\",\"outputs\":[{\"internalType\":\"contract WarpControlI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"}],\"name\":\"_liquidateAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"collateralOfAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralizedLP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssetAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeWizard\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_warpControl\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"valueOfAccountCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_liquidateAccount(address,address)\":{\"details\":\"this function uses the onlyWC modifier meaning that only the Warp Control contract can call it*\",\"params\":{\"_account\":\"is the address of the account being liquidated\",\"_liquidator\":\"is the address of the account doing the liquidating who receives the liquidated LP's\"}},\"collateralOfAccount(address)\":{\"params\":{\"_account\":\"is the address of the account being looked up*\"}},\"constructor\":{\"details\":\"this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving this contract the ability to call their mint and burn functions.*\",\"params\":{\"_lp\":\"is the address of the lp token a specific Warp vault will represent\",\"_lpName\":\"is the name of the lp token\",\"_timelock\":\"is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"provideCollateral(uint256)\":{\"params\":{\"_amount\":\"is the amount of LP being collateralized*\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawCollateral(uint256)\":{\"params\":{\"_amount\":\"is the amount of LP tokens he wishes to withdraw*\"}}}},\"userdoc\":{\"methods\":{\"_liquidateAccount(address,address)\":{\"notice\":\"_liquidateAccount is a function to liquidate the LP tokens of the input account\"},\"collateralOfAccount(address)\":{\"notice\":\"collateralOfAccount is a view function to retreive an accounts collateralized LP amount\"},\"constructor\":\"constructor sets up token names and symbols for the WarpWrapperToken\",\"getAssetAdd()\":{\"notice\":\"getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*\"},\"provideCollateral(uint256)\":{\"notice\":\"provideCollateral allows a user to collateralize this contracts associated LP token\"},\"withdrawCollateral(uint256)\":{\"notice\":\"withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\"}},\"notice\":\"the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the Warp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets, holding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts from the coumpound protocol.*\"}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpVaultLP.sol\":\"WarpVaultLP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpVaultLP.sol\":{\"keccak256\":\"0x426c5dbeb1eb33991b4f6a092b14a9a35e1b9e4efca4c9379f01b69efe12220b\",\"urls\":[\"bzz-raw://7f0f0e095221d9c15fbe54ed3ca094041519a48d5231e1a64d7d9a33eddb16f5\",\"dweb:/ipfs/QmPodtq3r4CvJpS2S6ZQLGhUJz593fJpaFGekEhsUKmWuE\"]},\"/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpWrapperToken.sol\":{\"keccak256\":\"0x35de3d220b33e201d27d423fcd687508e91b091cef1c860465e0ff2195cbd4eb\",\"urls\":[\"bzz-raw://dde5700203f3273038e1c9accf460b5749c546983390507bf9d534285679bb09\",\"dweb:/ipfs/QmPBWxpq9EfHeig5Ho6WpvcMvyekgk9aeyG2cpCWx1Cezp\"]},\"/home/stan36/repos/Warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol\":{\"keccak256\":\"0xc75dd7bd6cb8a75d5d9d3c999c7caa9c391e641c123a42bf928ffc78b208febf\",\"urls\":[\"bzz-raw://2a1e7b40ea1a4750bab61d86d63f1326511459a0d30d613b283b6f40abaea3da\",\"dweb:/ipfs/QmNwEVZBN6v7yX82a8up9sUJTKfoGWxeQqjXSggUnAGtnb\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200117d3803806200117d833981810160405260808110156200003757600080fd5b8151602083015160408085015160608601805192519496939591949391820192846401000000008211156200006b57600080fd5b9083019060208201858111156200008157600080fd5b82516401000000008111828201881017156200009c57600080fd5b82525081516020918201929091019080838360005b83811015620000cb578181015183820152602001620000b1565b50505050905090810190601f168015620000f95780820380516001836020036101000a031916815260200191505b50604052505050600062000112620001ca60201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080516200017190600290602084019062000231565b50600380546001600160a01b03199081166001600160a01b038681169190911790925560048054909116918416919091179055620001bc4285620001cf602090811b62000ccc17901c565b60015550620002d392505050565b335b90565b6000828201838110156200022a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027457805160ff1916838001178555620002a4565b82800160010185558215620002a4579182015b82811115620002a457825182559160200191906001019062000287565b50620002b2929150620002b6565b5090565b620001cc91905b80821115620002b25760008155600101620002bd565b610e9a80620002e36000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063f0c3c06b11610066578063f0c3c06b14610266578063f2fde38b14610283578063f4b5e3e4146102a9578063f919b4bf146102d7576100f5565b80638da5cb5b14610228578063c14cba3e14610230578063c453e55714610238578063cb7b42061461025e576100f5565b80634c20ac74116100d35780634c20ac74146101c35780636112fe2e146101cb578063715018a6146101e8578063763e4a0d146101f0576100f5565b80630900f010146100fa578063122b58181461012257806346cd680114610146575b600080fd5b6101206004803603602081101561011057600080fd5b50356001600160a01b03166102fd565b005b61012a610336565b604080516001600160a01b039092168252519081900360200190f35b61014e610345565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610188578181015183820152602001610170565b50505050905090810190601f1680156101b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61012a6103d0565b610120600480360360208110156101e157600080fd5b50356103df565b610120610610565b6102166004803603602081101561020657600080fd5b50356001600160a01b03166106c4565b60408051918252519081900360200190f35b61012a6106d6565b61012a6106e5565b6102166004803603602081101561024e57600080fd5b50356001600160a01b03166106f4565b6102166107ac565b6101206004803603602081101561027c57600080fd5b50356107b2565b6101206004803603602081101561029957600080fd5b50356001600160a01b0316610a2c565b610120600480360360408110156102bf57600080fd5b506001600160a01b0381358116916020013516610b36565b610216600480360360208110156102ed57600080fd5b50356001600160a01b0316610c09565b6004546001600160a01b0316331461031457600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103c85780601f1061039d576101008083540402835291602001916103c8565b820191906000526020600020905b8154815290600101906020018083116103ab57829003601f168201915b505050505081565b6003546001600160a01b031690565b600480546003546040805163ab5e2c9960e01b815233948101949094526001600160a01b039182166024850152516000938493929092169163ab5e2c9991604480830192602092919082900301818787803b15801561043d57600080fd5b505af1158015610451573d6000803e3d6000fd5b505050506040513d602081101561046757600080fd5b50519050826104785780915061047c565b8291505b818110156104d1576040805162461bcd60e51b815260206004820152601b60248201527f547279696e6720746f20776974686472617720746f6f206d7563680000000000604482015290519081900360640190fd5b3360009081526005602052604090205482111561051f5760405162461bcd60e51b815260040180806020018281038252603f815260200180610dbe603f913960400191505060405180910390fd5b3360009081526005602052604090205461053f908363ffffffff610c2416565b33600081815260056020908152604080832094909455600354845163a9059cbb60e01b815260048101949094526024840187905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b1580156105a457600080fd5b505af11580156105b8573d6000803e3d6000fd5b505050506040513d60208110156105ce57600080fd5b5050604080513381526020810184905281517f92682d28e4c16f4a2ddb833ecdd2bab2f2da69e2f325cda58d421e7d634b8e27929181900390910190a1505050565b610618610c6f565b6000546001600160a01b0390811691161461067a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60056020526000908152604090205481565b6000546001600160a01b031690565b6003546001600160a01b031681565b600480546003546040805163272c85f760e11b81526001600160a01b03928316948101949094525160009384939290921691634e590bee916024808301926020929190829003018186803b15801561074b57600080fd5b505afa15801561075f573d6000803e3d6000fd5b505050506040513d602081101561077557600080fd5b50516001600160a01b038416600090815260056020526040812054919250906107a4908363ffffffff610c7316565b949350505050565b60015481565b60035460408051636eb1769f60e11b8152336004820152306024820152905183926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b15801561080257600080fd5b505afa158015610816573d6000803e3d6000fd5b505050506040513d602081101561082c57600080fd5b5051101561086b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610e446021913960400191505060405180910390fd5b600354604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156108b557600080fd5b505afa1580156108c9573d6000803e3d6000fd5b505050506040513d60208110156108df57600080fd5b50511015610934576040805162461bcd60e51b815260206004820152601e60248201527f4d757374206861766520656e6f756768204c5020746f2070726f766964650000604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561098e57600080fd5b505af11580156109a2573d6000803e3d6000fd5b505050506040513d60208110156109b857600080fd5b5050336000908152600560205260409020546109da908263ffffffff610ccc16565b3360008181526005602090815260409182902093909355805191825291810183905281517f304548d20eea45684a7db179080f94dce8e4442923ddd63688ab5b7e270a4849929181900390910190a150565b610a34610c6f565b6000546001600160a01b03908116911614610a96576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610adb5760405162461bcd60e51b8152600401808060200182810382526026815260200180610dfd6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03163314610b4d57600080fd5b6001544211610b5b57600080fd5b6003546001600160a01b03838116600090815260056020908152604080832054815163a9059cbb60e01b8152878616600482015260248101919091529051939094169363a9059cbb9360448083019491928390030190829087803b158015610bc257600080fd5b505af1158015610bd6573d6000803e3d6000fd5b505050506040513d6020811015610bec57600080fd5b5050506001600160a01b0316600090815260056020526040812055565b6001600160a01b031660009081526005602052604090205490565b6000610c6683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610d26565b90505b92915050565b3390565b600082610c8257506000610c69565b82820282848281610c8f57fe5b0414610c665760405162461bcd60e51b8152600401808060200182810382526021815260200180610e236021913960400191505060405180910390fd5b600082820183811015610c66576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610db55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d7a578181015183820152602001610d62565b50505050905090810190601f168015610da75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe796f752061726520747279696e6720746f207769746864726177206d6f726520636f6c6c61746572616c207468616e20796f752068617665206c6f636b65644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775661756c74206d757374206861766520656e6f75676820616c6c6f77616e63652ea2646970667358221220845814bf8fc3e9121f36e5bf10e9d731b4fde618297a970e7380c4b74805dadd64736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063f0c3c06b11610066578063f0c3c06b14610266578063f2fde38b14610283578063f4b5e3e4146102a9578063f919b4bf146102d7576100f5565b80638da5cb5b14610228578063c14cba3e14610230578063c453e55714610238578063cb7b42061461025e576100f5565b80634c20ac74116100d35780634c20ac74146101c35780636112fe2e146101cb578063715018a6146101e8578063763e4a0d146101f0576100f5565b80630900f010146100fa578063122b58181461012257806346cd680114610146575b600080fd5b6101206004803603602081101561011057600080fd5b50356001600160a01b03166102fd565b005b61012a610336565b604080516001600160a01b039092168252519081900360200190f35b61014e610345565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610188578181015183820152602001610170565b50505050905090810190601f1680156101b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61012a6103d0565b610120600480360360208110156101e157600080fd5b50356103df565b610120610610565b6102166004803603602081101561020657600080fd5b50356001600160a01b03166106c4565b60408051918252519081900360200190f35b61012a6106d6565b61012a6106e5565b6102166004803603602081101561024e57600080fd5b50356001600160a01b03166106f4565b6102166107ac565b6101206004803603602081101561027c57600080fd5b50356107b2565b6101206004803603602081101561029957600080fd5b50356001600160a01b0316610a2c565b610120600480360360408110156102bf57600080fd5b506001600160a01b0381358116916020013516610b36565b610216600480360360208110156102ed57600080fd5b50356001600160a01b0316610c09565b6004546001600160a01b0316331461031457600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103c85780601f1061039d576101008083540402835291602001916103c8565b820191906000526020600020905b8154815290600101906020018083116103ab57829003601f168201915b505050505081565b6003546001600160a01b031690565b600480546003546040805163ab5e2c9960e01b815233948101949094526001600160a01b039182166024850152516000938493929092169163ab5e2c9991604480830192602092919082900301818787803b15801561043d57600080fd5b505af1158015610451573d6000803e3d6000fd5b505050506040513d602081101561046757600080fd5b50519050826104785780915061047c565b8291505b818110156104d1576040805162461bcd60e51b815260206004820152601b60248201527f547279696e6720746f20776974686472617720746f6f206d7563680000000000604482015290519081900360640190fd5b3360009081526005602052604090205482111561051f5760405162461bcd60e51b815260040180806020018281038252603f815260200180610dbe603f913960400191505060405180910390fd5b3360009081526005602052604090205461053f908363ffffffff610c2416565b33600081815260056020908152604080832094909455600354845163a9059cbb60e01b815260048101949094526024840187905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b1580156105a457600080fd5b505af11580156105b8573d6000803e3d6000fd5b505050506040513d60208110156105ce57600080fd5b5050604080513381526020810184905281517f92682d28e4c16f4a2ddb833ecdd2bab2f2da69e2f325cda58d421e7d634b8e27929181900390910190a1505050565b610618610c6f565b6000546001600160a01b0390811691161461067a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60056020526000908152604090205481565b6000546001600160a01b031690565b6003546001600160a01b031681565b600480546003546040805163272c85f760e11b81526001600160a01b03928316948101949094525160009384939290921691634e590bee916024808301926020929190829003018186803b15801561074b57600080fd5b505afa15801561075f573d6000803e3d6000fd5b505050506040513d602081101561077557600080fd5b50516001600160a01b038416600090815260056020526040812054919250906107a4908363ffffffff610c7316565b949350505050565b60015481565b60035460408051636eb1769f60e11b8152336004820152306024820152905183926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b15801561080257600080fd5b505afa158015610816573d6000803e3d6000fd5b505050506040513d602081101561082c57600080fd5b5051101561086b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610e446021913960400191505060405180910390fd5b600354604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156108b557600080fd5b505afa1580156108c9573d6000803e3d6000fd5b505050506040513d60208110156108df57600080fd5b50511015610934576040805162461bcd60e51b815260206004820152601e60248201527f4d757374206861766520656e6f756768204c5020746f2070726f766964650000604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561098e57600080fd5b505af11580156109a2573d6000803e3d6000fd5b505050506040513d60208110156109b857600080fd5b5050336000908152600560205260409020546109da908263ffffffff610ccc16565b3360008181526005602090815260409182902093909355805191825291810183905281517f304548d20eea45684a7db179080f94dce8e4442923ddd63688ab5b7e270a4849929181900390910190a150565b610a34610c6f565b6000546001600160a01b03908116911614610a96576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610adb5760405162461bcd60e51b8152600401808060200182810382526026815260200180610dfd6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03163314610b4d57600080fd5b6001544211610b5b57600080fd5b6003546001600160a01b03838116600090815260056020908152604080832054815163a9059cbb60e01b8152878616600482015260248101919091529051939094169363a9059cbb9360448083019491928390030190829087803b158015610bc257600080fd5b505af1158015610bd6573d6000803e3d6000fd5b505050506040513d6020811015610bec57600080fd5b5050506001600160a01b0316600090815260056020526040812055565b6001600160a01b031660009081526005602052604090205490565b6000610c6683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610d26565b90505b92915050565b3390565b600082610c8257506000610c69565b82820282848281610c8f57fe5b0414610c665760405162461bcd60e51b8152600401808060200182810382526021815260200180610e236021913960400191505060405180910390fd5b600082820183811015610c66576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610db55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d7a578181015183820152602001610d62565b50505050905090810190601f168015610da75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe796f752061726520747279696e6720746f207769746864726177206d6f726520636f6c6c61746572616c207468616e20796f752068617665206c6f636b65644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775661756c74206d757374206861766520656e6f75676820616c6c6f77616e63652ea2646970667358221220845814bf8fc3e9121f36e5bf10e9d731b4fde618297a970e7380c4b74805dadd64736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "1063:5259:9:-:0;;;2497:280;5:9:-1;2:2;;;27:1;24;17:12;2:2;2497:280:9;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;2497:280:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2497:280:9;;420:4:-1;411:14;;;;2497:280:9;;;;;411:14:-1;2497:280:9;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2497:280:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:17:27;885:12;:10;;;:12;;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:27;-1:-1:-1;;;;;907:18:27;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:27;940:43;;907:6;;940:43;-1:-1:-1;2641:16:9;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;2667:7:9;:21;;-1:-1:-1;;;;;;2667:21:9;;;-1:-1:-1;;;;;2667:21:9;;;;;;;;;;2698:2;:31;;;;;;;;;;;;;;2752:18;:3;2760:9;2752:7;;;;;;;:18;;:::i;:::-;2739:10;:31;-1:-1:-1;1063:5259:9;;-1:-1:-1;;;1063:5259:9;590:104:26;677:10;590:104;;:::o;874:176:28:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:28:o;1063:5259:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1063:5259:9;;;-1:-1:-1;1063:5259:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1063:5259:9:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1063:5259:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2783:99:9;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2783:99:9;-1:-1:-1;;;;;2783:99:9;;:::i;:::-;;1219:22;;;:::i;:::-;;;;-1:-1:-1;;;;;1219:22:9;;;;;;;;;;;;;;1165:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1165:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4900:93;;;:::i;3754:1042::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3754:1042:9;;:::i;1689:145:27:-;;;:::i;1248:51:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1248:51:9;-1:-1:-1;;;;;1248:51:9;;:::i;:::-;;;;;;;;;;;;;;;;1066:77:27;;;:::i;1192:21:9:-;;;:::i;6037:283::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6037:283:9;-1:-1:-1;;;;;6037:283:9;;:::i;1134:25::-;;;:::i;3060:487::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3060:487:9;;:::i;1983:240:27:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1983:240:27;-1:-1:-1;;;;;1983:240:27;;:::i;5697:334:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5697:334:9;;;;;;;;;;:::i;5169:155::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5169:155:9;-1:-1:-1;;;;;5169:155:9;;:::i;2783:99::-;1573:2;;-1:-1:-1;;;;;1573:2:9;1551:10;:25;1543:34;;12:1:-1;9;2:12;1543:34:9;2844:2:::1;:31:::0;;-1:-1:-1;;;;;;2844:31:9::1;-1:-1:-1::0;;;;;2844:31:9;;;::::1;::::0;;;::::1;::::0;;2783:99::o;1219:22::-;;;-1:-1:-1;;;;;1219:22:9;;:::o;1165:20::-;;;;;;;;;;;;;;-1:-1:-1;;1165:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4900:93::-;4978:7;;-1:-1:-1;;;;;4978:7:9;;4900:93::o;3754:1042::-;3860:2;;;3905:7;;3860:54;;;-1:-1:-1;;;3860:54:9;;3885:10;3860:54;;;;;;;-1:-1:-1;;;;;3905:7:9;;;3860:54;;;;;-1:-1:-1;;;;3860:2:9;;;;;-1:-1:-1;;3860:54:9;;;;;;;;;;;;;;-1:-1:-1;3860:2:9;:54;;;2:2:-1;;;;27:1;24;17:12;2:2;3860:54:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3860:54:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3860:54:9;;-1:-1:-1;3927:12:9;3924:111;;3964:9;3955:18;;3924:111;;;4015:7;4006:16;;3924:111;4229:6;4216:9;:19;;4195:93;;;;;-1:-1:-1;;;4195:93:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;4406:10;4389:28;;;;:16;:28;;;;;;:38;-1:-1:-1;4389:38:9;4381:114;;;;-1:-1:-1;;;4381:114:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4609:10;4592:28;;;;:16;:28;;;;;;:62;;4638:6;4592:62;:32;:62;:::i;:::-;4578:10;4561:28;;;;:16;:28;;;;;;;;:93;;;;4700:7;;:36;;-1:-1:-1;;;4700:36:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4700:7:9;;;;-1:-1:-1;;4700:36:9;;;;;;;;;;;;;:7;:36;;;2:2:-1;;;;27:1;24;17:12;2:2;4700:36:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4700:36:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;4751:38:9;;;4770:10;4751:38;;4700:36;4751:38;;;;;;;;;;;;;;;;;;3754:1042;;;:::o;1689:145:27:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:27;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;1262:67:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:27;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:27::1;::::0;;1689:145::o;1248:51:9:-;;;;;;;;;;;;;:::o;1066:77:27:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:27;;1066:77::o;1192:21:9:-;;;-1:-1:-1;;;;;1192:21:9;;:::o;6037:283::-;6156:2;;;6189:7;;6156:42;;;-1:-1:-1;;;6156:42:9;;-1:-1:-1;;;;;6189:7:9;;;6156:42;;;;;;;;-1:-1:-1;;;;6156:2:9;;;;;:24;;:42;;;;;;;;;;;;;;:2;:42;;;2:2:-1;;;;27:1;24;17:12;2:2;6156:42:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6156:42:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6156:42:9;-1:-1:-1;;;;;6234:26:9;;6208:23;6234:26;;;:16;6156:42;6234:26;;;;;6156:42;;-1:-1:-1;6208:23:9;6234:47;;6156:42;6234:30;:47::i;:::-;6208:73;6037:283;-1:-1:-1;;;;6037:283:9:o;1134:25::-;;;;:::o;3060:487::-;3129:7;;:44;;;-1:-1:-1;;;3129:44:9;;3147:10;3129:44;;;;3167:4;3129:44;;;;;;3177:7;;-1:-1:-1;;;;;3129:7:9;;:17;;:44;;;;;;;;;;;;;;:7;:44;;;2:2:-1;;;;27:1;24;17:12;2:2;3129:44:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3129:44:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3129:44:9;:55;;3121:101;;;;-1:-1:-1;;;3121:101:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3240:7;;:29;;;-1:-1:-1;;;3240:29:9;;3258:10;3240:29;;;;;;3273:7;;-1:-1:-1;;;;;3240:7:9;;-1:-1:-1;;3240:29:9;;;;;;;;;;;;;;:7;:29;;;2:2:-1;;;;27:1;24;17:12;2:2;3240:29:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3240:29:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3240:29:9;:40;;3232:83;;;;;-1:-1:-1;;;3232:83:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;3325:7;;:56;;;-1:-1:-1;;;3325:56:9;;3346:10;3325:56;;;;3366:4;3325:56;;;;;;;;;;;;-1:-1:-1;;;;;3325:7:9;;;;-1:-1:-1;;3325:56:9;;;;;;;;;;;;;;;-1:-1:-1;3325:7:9;:56;;;2:2:-1;;;;27:1;24;17:12;2:2;3325:56:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3325:56:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;3439:10:9;3422:28;;;;:16;3325:56;3422:28;;;;;:63;;3468:7;3422:63;:32;:63;:::i;:::-;3408:10;3391:28;;;;:16;:28;;;;;;;;;:94;;;;3501:39;;;;;;;;;;;;;;;;;;;;;;;;3060:487;:::o;1983:240:27:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:27;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;1262:67:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:27;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:27::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:27;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:27::1;-1:-1:-1::0;;;;;2199:17:27;;;::::1;::::0;;;::::1;::::0;;1983:240::o;5697:334:9:-;1573:2;;-1:-1:-1;;;;;1573:2:9;1551:10;:25;1543:34;;12:1:-1;9;2:12;1543:34:9;1725:10:::1;;1719:3;:16;1711:25;;12:1:-1;9::::0;2:12:::1;1711:25:9;5878:7:::2;::::0;-1:-1:-1;;;;;5908:26:9;;::::2;5878:7;5908:26:::0;;;:16:::2;:26;::::0;;;;;;;;5878:57;;-1:-1:-1;;;5878:57:9;;;;::::2;;::::0;::::2;::::0;;;;;;;;;;:7;;;::::2;::::0;-1:-1:-1;;5878:57:9;;;;;;;;;;;;;;:7;:57;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;5878:57:9;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;5878:57:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;;;;;;;;5994:26:9::2;6023:1;5994:26:::0;;;:16:::2;5878:57;5994:26:::0;;;;:30;5697:334::o;5169:155::-;-1:-1:-1;;;;;5291:26:9;5261:7;5291:26;;;:16;:26;;;;;;;5169:155::o;1321:134:28:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;;:::o;590:104:26:-;677:10;590:104;:::o;2180:459:28:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:28;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;874:176;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:187;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:28;;;1746:187::o",
  "source": "pragma solidity ^0.6.2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./WarpWrapperToken.sol\";\nimport \"./interfaces/WarpControlI.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////\n/// @title WarpVaultLP\n/// @author Christopher Dixon\n////////////////////////////////////////////////////////////////////////////////////////////\n/**\n@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\nfrom the coumpound protocol.\n**/\n\ncontract WarpVaultLP is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public timeWizard;\n    string public lpName;\n\n    IERC20 public LPtoken;\n    WarpControlI public WC;\n\n    mapping(address => uint256) public collateralizedLP;\n\n    event CollateralProvided(address _account, uint _amount);\n    event CollateralWithdraw(address _account, uint amount);\n    /**\n     * @dev Throws if called by any account other than a warp control\n     */\n    modifier onlyWC() {\n        require(msg.sender == address(WC));\n        _;\n    }\n\n/**\n@dev Throws if a function is called before the time wizard allows it\n**/\n    modifier angryWizard() {\n        require(now > timeWizard);\n        _;\n    }\n    /**\n    @notice constructor sets up token names and symbols for the WarpWrapperToken\n    @param _lp is the address of the lp token a specific Warp vault will represent\n    @param _lpName is the name of the lp token\n    @param _timelock is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)\n    @dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\n        each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\n        this contract the ability to call their mint and burn functions.\n    **/\n    constructor(\n        uint256 _timelock,\n        address _lp,\n        address _WarpControl,\n        string memory _lpName\n    ) public {\n        lpName = _lpName;\n        LPtoken = IERC20(_lp);\n        WC = WarpControlI(_WarpControl);\n        timeWizard = now.add(_timelock);\n    }\n\n    function upgrade(address _warpControl) public onlyWC {\n      WC = WarpControlI(_warpControl);\n    }\n\n    /**\n    @notice provideCollateral allows a user to collateralize this contracts associated LP token\n    @param _amount is the amount of LP being collateralized\n    **/\n    function provideCollateral(uint256 _amount) public {\n        require(LPtoken.allowance(msg.sender, address(this)) >= _amount, \"Vault must have enough allowance.\");\n        require(LPtoken.balanceOf(msg.sender) >= _amount, \"Must have enough LP to provide\");\n        LPtoken.transferFrom(msg.sender, address(this), _amount);\n        collateralizedLP[msg.sender] = collateralizedLP[msg.sender].add(\n            _amount\n        );\n\n        emit CollateralProvided(msg.sender, _amount);\n    }\n\n    /**\n    @notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\n    @param _amount is the amount of LP tokens he wishes to withdraw\n    **/\n    function withdrawCollateral(uint256 _amount) public {\n        uint256 amount;\n        uint256 maxAmount = WC.getMaxWithdrawAllowed(msg.sender, address(LPtoken));\n        if(_amount == 0) {\n            amount = maxAmount;\n          } else {\n            amount = _amount;\n          }\n\n        //require the availible value of the LP locked in this contract the user has\n        //is greater than or equal to the amount being withdrawn\n        require(\n            maxAmount >= amount,\n            \"Trying to withdraw too much\"\n        );\n        //require the user has locked up enough collateral to withdraw this amount\n        require(collateralizedLP[msg.sender] >= amount, \"you are trying to withdraw more collateral than you have locked\");\n\n        //subtract withdrawn amount from amount stored\n        collateralizedLP[msg.sender] = collateralizedLP[msg.sender].sub(\n            amount\n        );\n        //transfer them their token\n        LPtoken.transfer(msg.sender, amount);\n        emit CollateralWithdraw(msg.sender, amount);\n    }\n\n    /**\n    @notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress\n    **/\n    function getAssetAdd() public view returns (address) {\n        return address(LPtoken);\n    }\n\n    /**\n@notice collateralOfAccount is a view function to retreive an accounts collateralized LP amount\n@param _account is the address of the account being looked up\n**/\n    function collateralOfAccount(address _account)\n        public\n        view\n        returns (uint256)\n    {\n        return collateralizedLP[_account];\n    }\n\n    /**\n@notice _liquidateAccount is a function to liquidate the LP tokens of the input account\n@param _account is the address of the account being liquidated\n@param _liquidator is the address of the account doing the liquidating who receives the liquidated LP's\n@dev this function uses the onlyWC modifier meaning that only the Warp Control contract can call it\n**/\n    function _liquidateAccount(address _account, address _liquidator)\n        public\n        onlyWC\n        angryWizard\n    {\n        //transfer the LP tokens to the liquidator\n        LPtoken.transfer(_liquidator, collateralizedLP[_account]);\n        //reset the borrowers collateral tracker\n        collateralizedLP[_account] = 0;\n    }\n\n    function valueOfAccountCollateral(address _account) external view returns(uint256) {\n        uint256 collateralPrice = WC.viewPriceOfCollateral(address(LPtoken));\n        uint256 collateralValue = collateralizedLP[_account].mul(collateralPrice);\n        return collateralValue;\n    }\n}\n",
  "sourcePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpVaultLP.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpVaultLP.sol",
    "exportedSymbols": {
      "WarpVaultLP": [
        3334
      ]
    },
    "id": 3335,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2996,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2997,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 7354,
        "src": "25:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2998,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 7550,
        "src": "78:51:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2999,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 8135,
        "src": "130:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
        "file": "./WarpWrapperToken.sol",
        "id": 3000,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 5047,
        "src": "187:32:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol",
        "file": "./interfaces/WarpControlI.sol",
        "id": 3001,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 7062,
        "src": "220:39:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3003,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7353,
              "src": "1087:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7353",
                "typeString": "contract Ownable"
              }
            },
            "id": 3004,
            "nodeType": "InheritanceSpecifier",
            "src": "1087:7:9"
          }
        ],
        "contractDependencies": [
          7244,
          7353
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3002,
          "nodeType": "StructuredDocumentation",
          "src": "500:561:9",
          "text": "@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\nfrom the coumpound protocol.*"
        },
        "fullyImplemented": true,
        "id": 3334,
        "linearizedBaseContracts": [
          3334,
          7353,
          7244
        ],
        "name": "WarpVaultLP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3007,
            "libraryName": {
              "contractScope": null,
              "id": 3005,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7549,
              "src": "1107:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7549",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1101:27:9",
            "typeName": {
              "id": 3006,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1120:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "cb7b4206",
            "id": 3009,
            "mutability": "mutable",
            "name": "timeWizard",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1134:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3008,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1134:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46cd6801",
            "id": 3011,
            "mutability": "mutable",
            "name": "lpName",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1165:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3010,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1165:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c14cba3e",
            "id": 3013,
            "mutability": "mutable",
            "name": "LPtoken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1192:21:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8134",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3012,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8134,
              "src": "1192:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8134",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "122b5818",
            "id": 3015,
            "mutability": "mutable",
            "name": "WC",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1219:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WarpControlI_$7061",
              "typeString": "contract WarpControlI"
            },
            "typeName": {
              "contractScope": null,
              "id": 3014,
              "name": "WarpControlI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7061,
              "src": "1219:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WarpControlI_$7061",
                "typeString": "contract WarpControlI"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "763e4a0d",
            "id": 3019,
            "mutability": "mutable",
            "name": "collateralizedLP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1248:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3018,
              "keyType": {
                "id": 3016,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1256:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1248:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3017,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1267:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3025,
            "name": "CollateralProvided",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3021,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3025,
                  "src": "1331:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3023,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3025,
                  "src": "1349:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3022,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1330:32:9"
            },
            "src": "1306:57:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3031,
            "name": "CollateralWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3027,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3031,
                  "src": "1393:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3029,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3031,
                  "src": "1411:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3028,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1392:31:9"
            },
            "src": "1368:56:9"
          },
          {
            "body": {
              "id": 3045,
              "nodeType": "Block",
              "src": "1533:62:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3035,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1551:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1551:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3039,
                              "name": "WC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3015,
                              "src": "1573:2:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WarpControlI_$7061",
                                "typeString": "contract WarpControlI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WarpControlI_$7061",
                                "typeString": "contract WarpControlI"
                              }
                            ],
                            "id": 3038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1565:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1565:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1565:11:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1551:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1543:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1543:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3043,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:34:9"
                },
                {
                  "id": 3044,
                  "nodeType": "PlaceholderStatement",
                  "src": "1587:1:9"
                }
              ]
            },
            "documentation": {
              "id": 3032,
              "nodeType": "StructuredDocumentation",
              "src": "1429:81:9",
              "text": "@dev Throws if called by any account other than a warp control"
            },
            "id": 3046,
            "name": "onlyWC",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1530:2:9"
            },
            "src": "1515:80:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3056,
              "nodeType": "Block",
              "src": "1701:53:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3050,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "1719:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3051,
                          "name": "timeWizard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3009,
                          "src": "1725:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1719:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1711:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3054,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:25:9"
                },
                {
                  "id": 3055,
                  "nodeType": "PlaceholderStatement",
                  "src": "1746:1:9"
                }
              ]
            },
            "documentation": {
              "id": 3047,
              "nodeType": "StructuredDocumentation",
              "src": "1597:76:9",
              "text": "@dev Throws if a function is called before the time wizard allows it*"
            },
            "id": 3057,
            "name": "angryWizard",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:2:9"
            },
            "src": "1678:76:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3092,
              "nodeType": "Block",
              "src": "2631:146:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3069,
                      "name": "lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3011,
                      "src": "2641:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3070,
                      "name": "_lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3066,
                      "src": "2650:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2641:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3072,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3073,
                      "name": "LPtoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3013,
                      "src": "2667:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8134",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3075,
                          "name": "_lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3062,
                          "src": "2684:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3074,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8134,
                        "src": "2677:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$8134_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2677:11:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8134",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2667:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8134",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3078,
                  "nodeType": "ExpressionStatement",
                  "src": "2667:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3079,
                      "name": "WC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3015,
                      "src": "2698:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7061",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3081,
                          "name": "_WarpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3064,
                          "src": "2716:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3080,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7061,
                        "src": "2703:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$7061_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 3082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2703:26:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7061",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2698:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$7061",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 3084,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:31:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3085,
                      "name": "timeWizard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3009,
                      "src": "2739:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3088,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3060,
                          "src": "2760:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3086,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "2752:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7382,
                        "src": "2752:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2752:18:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2739:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "2739:31:9"
                }
              ]
            },
            "documentation": {
              "id": 3058,
              "nodeType": "StructuredDocumentation",
              "src": "1759:733:9",
              "text": "@notice constructor sets up token names and symbols for the WarpWrapperToken\n@param _lp is the address of the lp token a specific Warp vault will represent\n@param _lpName is the name of the lp token\n@param _timelock is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)\n@dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\neach type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\nthis contract the ability to call their mint and burn functions.*"
            },
            "id": 3093,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3060,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "2518:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3062,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "2545:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3064,
                  "mutability": "mutable",
                  "name": "_WarpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "2566:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3066,
                  "mutability": "mutable",
                  "name": "_lpName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "2596:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3065,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2508:115:9"
            },
            "returnParameters": {
              "id": 3068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:0:9"
            },
            "scope": 3334,
            "src": "2497:280:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3106,
              "nodeType": "Block",
              "src": "2836:46:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3100,
                      "name": "WC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3015,
                      "src": "2844:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7061",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3102,
                          "name": "_warpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3095,
                          "src": "2862:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3101,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7061,
                        "src": "2849:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$7061_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 3103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2849:26:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7061",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2844:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$7061",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 3105,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:31:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0900f010",
            "id": 3107,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3098,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3097,
                  "name": "onlyWC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3046,
                  "src": "2829:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2829:6:9"
              }
            ],
            "name": "upgrade",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "mutable",
                  "name": "_warpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3107,
                  "src": "2800:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2799:22:9"
            },
            "returnParameters": {
              "id": 3099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2836:0:9"
            },
            "scope": 3334,
            "src": "2783:99:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3170,
              "nodeType": "Block",
              "src": "3111:436:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3116,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3147:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3147:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3120,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3167:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WarpVaultLP_$3334",
                                    "typeString": "contract WarpVaultLP"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WarpVaultLP_$3334",
                                    "typeString": "contract WarpVaultLP"
                                  }
                                ],
                                "id": 3119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3159:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3118,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3159:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3159:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3114,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3013,
                              "src": "3129:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8134",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8093,
                            "src": "3129:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 3122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3129:44:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3123,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3110,
                          "src": "3177:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3129:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5661756c74206d757374206861766520656e6f75676820616c6c6f77616e63652e",
                        "id": 3125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3186:35:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff02b9fc82578adaeb1ee8508353c479a64656660dbb700329f0785ff0182118",
                          "typeString": "literal_string \"Vault must have enough allowance.\""
                        },
                        "value": "Vault must have enough allowance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff02b9fc82578adaeb1ee8508353c479a64656660dbb700329f0785ff0182118",
                          "typeString": "literal_string \"Vault must have enough allowance.\""
                        }
                      ],
                      "id": 3113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3121:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:101:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3127,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:101:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3131,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3258:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3258:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3129,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3013,
                              "src": "3240:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8134",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8073,
                            "src": "3240:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3240:29:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3134,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3110,
                          "src": "3273:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3240:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520656e6f756768204c5020746f2070726f76696465",
                        "id": 3136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3282:32:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        },
                        "value": "Must have enough LP to provide"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        }
                      ],
                      "id": 3128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3232:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:83:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3138,
                  "nodeType": "ExpressionStatement",
                  "src": "3232:83:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3142,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3346:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3346:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3146,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3366:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$3334",
                              "typeString": "contract WarpVaultLP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$3334",
                              "typeString": "contract WarpVaultLP"
                            }
                          ],
                          "id": 3145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3358:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3358:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3358:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3148,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3110,
                        "src": "3373:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3139,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "3325:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8115,
                      "src": "3325:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:56:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3151,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "3391:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3154,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3408:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3408:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3391:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3160,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3110,
                          "src": "3468:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3155,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "3422:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3158,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3156,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3439:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3439:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3422:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7382,
                        "src": "3422:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3422:63:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3391:94:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:94:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3520:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3520:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3167,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3110,
                        "src": "3532:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3164,
                      "name": "CollateralProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3025,
                      "src": "3501:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3169,
                  "nodeType": "EmitStatement",
                  "src": "3496:44:9"
                }
              ]
            },
            "documentation": {
              "id": 3108,
              "nodeType": "StructuredDocumentation",
              "src": "2888:167:9",
              "text": "@notice provideCollateral allows a user to collateralize this contracts associated LP token\n@param _amount is the amount of LP being collateralized*"
            },
            "functionSelector": "f0c3c06b",
            "id": 3171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3110,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3171,
                  "src": "3087:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3086:17:9"
            },
            "returnParameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3111:0:9"
            },
            "scope": 3334,
            "src": "3060:487:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3250,
              "nodeType": "Block",
              "src": "3806:990:9",
              "statements": [
                {
                  "assignments": [
                    3178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3178,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3250,
                      "src": "3816:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3816:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3179,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3816:14:9"
                },
                {
                  "assignments": [
                    3181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3181,
                      "mutability": "mutable",
                      "name": "maxAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3250,
                      "src": "3840:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3180,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3840:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3191,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3885:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3885:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3188,
                            "name": "LPtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3013,
                            "src": "3905:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8134",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$8134",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3897:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3897:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3897:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3182,
                        "name": "WC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3015,
                        "src": "3860:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WarpControlI_$7061",
                          "typeString": "contract WarpControlI"
                        }
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMaxWithdrawAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6962,
                      "src": "3860:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3840:74:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3192,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "3927:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3938:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3927:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3204,
                    "nodeType": "Block",
                    "src": "3992:43:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3200,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3178,
                            "src": "4006:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3201,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3174,
                            "src": "4015:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4006:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3203,
                        "nodeType": "ExpressionStatement",
                        "src": "4006:16:9"
                      }
                    ]
                  },
                  "id": 3205,
                  "nodeType": "IfStatement",
                  "src": "3924:111:9",
                  "trueBody": {
                    "id": 3199,
                    "nodeType": "Block",
                    "src": "3941:45:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3195,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3178,
                            "src": "3955:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3196,
                            "name": "maxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3181,
                            "src": "3964:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3955:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3198,
                        "nodeType": "ExpressionStatement",
                        "src": "3955:18:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3207,
                          "name": "maxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3181,
                          "src": "4216:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3208,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3178,
                          "src": "4229:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4216:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "547279696e6720746f20776974686472617720746f6f206d756368",
                        "id": 3210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4249:29:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        },
                        "value": "Trying to withdraw too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        }
                      ],
                      "id": 3206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4195:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4195:93:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3212,
                  "nodeType": "ExpressionStatement",
                  "src": "4195:93:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3214,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "4389:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3217,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3215,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4406:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4406:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4389:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3218,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3178,
                          "src": "4421:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4389:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752061726520747279696e6720746f207769746864726177206d6f726520636f6c6c61746572616c207468616e20796f752068617665206c6f636b6564",
                        "id": 3220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4429:65:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a962e5d734e10f5e9f0032efef10c1040971ae90410b2eda99f153e6d62850f",
                          "typeString": "literal_string \"you are trying to withdraw more collateral than you have locked\""
                        },
                        "value": "you are trying to withdraw more collateral than you have locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a962e5d734e10f5e9f0032efef10c1040971ae90410b2eda99f153e6d62850f",
                          "typeString": "literal_string \"you are trying to withdraw more collateral than you have locked\""
                        }
                      ],
                      "id": 3213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4381:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:114:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3222,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:114:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3223,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "4561:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3226,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4578:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4578:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4561:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3232,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3178,
                          "src": "4638:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3227,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "4592:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3230,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3228,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4609:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4609:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4592:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7399,
                        "src": "4592:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4592:62:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4561:93:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3235,
                  "nodeType": "ExpressionStatement",
                  "src": "4561:93:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4717:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4717:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3241,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3178,
                        "src": "4729:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3236,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "4700:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8083,
                      "src": "4700:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4700:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3243,
                  "nodeType": "ExpressionStatement",
                  "src": "4700:36:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4770:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4770:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3247,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3178,
                        "src": "4782:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3244,
                      "name": "CollateralWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3031,
                      "src": "4751:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4751:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3249,
                  "nodeType": "EmitStatement",
                  "src": "4746:43:9"
                }
              ]
            },
            "documentation": {
              "id": 3172,
              "nodeType": "StructuredDocumentation",
              "src": "3553:196:9",
              "text": "@notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\n@param _amount is the amount of LP tokens he wishes to withdraw*"
            },
            "functionSelector": "6112fe2e",
            "id": 3251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3174,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3251,
                  "src": "3782:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3782:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3781:17:9"
            },
            "returnParameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3806:0:9"
            },
            "scope": 3334,
            "src": "3754:1042:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3262,
              "nodeType": "Block",
              "src": "4953:40:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3259,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "4978:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 3258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4970:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3257,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4970:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 3260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4970:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3256,
                  "id": 3261,
                  "nodeType": "Return",
                  "src": "4963:23:9"
                }
              ]
            },
            "documentation": {
              "id": 3252,
              "nodeType": "StructuredDocumentation",
              "src": "4802:93:9",
              "text": "@notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
            },
            "functionSelector": "4c20ac74",
            "id": 3263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetAdd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4920:2:9"
            },
            "returnParameters": {
              "id": 3256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3255,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3263,
                  "src": "4944:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4944:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4943:9:9"
            },
            "scope": 3334,
            "src": "4900:93:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3275,
              "nodeType": "Block",
              "src": "5274:50:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3271,
                      "name": "collateralizedLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3019,
                      "src": "5291:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3273,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3272,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3266,
                      "src": "5308:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5291:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3270,
                  "id": 3274,
                  "nodeType": "Return",
                  "src": "5284:33:9"
                }
              ]
            },
            "documentation": {
              "id": 3264,
              "nodeType": "StructuredDocumentation",
              "src": "4999:165:9",
              "text": "@notice collateralOfAccount is a view function to retreive an accounts collateralized LP amount\n@param _account is the address of the account being looked up*"
            },
            "functionSelector": "f919b4bf",
            "id": 3276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralOfAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3266,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3276,
                  "src": "5198:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5198:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5197:18:9"
            },
            "returnParameters": {
              "id": 3270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3269,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3276,
                  "src": "5261:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5260:9:9"
            },
            "scope": 3334,
            "src": "5169:155:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3303,
              "nodeType": "Block",
              "src": "5817:214:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3291,
                        "name": "_liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3281,
                        "src": "5895:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3292,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3019,
                          "src": "5908:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3294,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3293,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3279,
                          "src": "5925:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5908:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3288,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "5878:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8083,
                      "src": "5878:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5878:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3296,
                  "nodeType": "ExpressionStatement",
                  "src": "5878:57:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3297,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "5994:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3299,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3298,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3279,
                        "src": "6011:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5994:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6023:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5994:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3302,
                  "nodeType": "ExpressionStatement",
                  "src": "5994:30:9"
                }
              ]
            },
            "documentation": {
              "id": 3277,
              "nodeType": "StructuredDocumentation",
              "src": "5330:362:9",
              "text": "@notice _liquidateAccount is a function to liquidate the LP tokens of the input account\n@param _account is the address of the account being liquidated\n@param _liquidator is the address of the account doing the liquidating who receives the liquidated LP's\n@dev this function uses the onlyWC modifier meaning that only the Warp Control contract can call it*"
            },
            "functionSelector": "f4b5e3e4",
            "id": 3304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3284,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3283,
                  "name": "onlyWC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3046,
                  "src": "5786:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5786:6:9"
              },
              {
                "arguments": null,
                "id": 3286,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3285,
                  "name": "angryWizard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3057,
                  "src": "5801:11:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5801:11:9"
              }
            ],
            "name": "_liquidateAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3279,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3304,
                  "src": "5724:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5724:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3281,
                  "mutability": "mutable",
                  "name": "_liquidator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3304,
                  "src": "5742:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5742:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5723:39:9"
            },
            "returnParameters": {
              "id": 3287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5817:0:9"
            },
            "scope": 3334,
            "src": "5697:334:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3332,
              "nodeType": "Block",
              "src": "6120:200:9",
              "statements": [
                {
                  "assignments": [
                    3312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3312,
                      "mutability": "mutable",
                      "name": "collateralPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3332,
                      "src": "6130:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3311,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6130:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3320,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3317,
                            "name": "LPtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3013,
                            "src": "6189:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8134",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$8134",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6181:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3315,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6181:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6181:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3313,
                        "name": "WC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3015,
                        "src": "6156:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WarpControlI_$7061",
                          "typeString": "contract WarpControlI"
                        }
                      },
                      "id": 3314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "viewPriceOfCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6978,
                      "src": "6156:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6156:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6130:68:9"
                },
                {
                  "assignments": [
                    3322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3322,
                      "mutability": "mutable",
                      "name": "collateralValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3332,
                      "src": "6208:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3321,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6208:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3329,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3327,
                        "name": "collateralPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3312,
                        "src": "6265:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3323,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3019,
                          "src": "6234:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3325,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3324,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3306,
                          "src": "6251:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6234:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7462,
                      "src": "6234:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6234:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6208:73:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3330,
                    "name": "collateralValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3322,
                    "src": "6298:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3310,
                  "id": 3331,
                  "nodeType": "Return",
                  "src": "6291:22:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c453e557",
            "id": 3333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "valueOfAccountCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3306,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3333,
                  "src": "6071:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6071:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6070:18:9"
            },
            "returnParameters": {
              "id": 3310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3333,
                  "src": "6111:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6111:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6110:9:9"
            },
            "scope": 3334,
            "src": "6037:283:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3335,
        "src": "1063:5259:9"
      }
    ],
    "src": "0:6323:9"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpVaultLP.sol",
    "exportedSymbols": {
      "WarpVaultLP": [
        3334
      ]
    },
    "id": 3335,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2996,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2997,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 7354,
        "src": "25:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2998,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 7550,
        "src": "78:51:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2999,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 8135,
        "src": "130:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
        "file": "./WarpWrapperToken.sol",
        "id": 3000,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 5047,
        "src": "187:32:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol",
        "file": "./interfaces/WarpControlI.sol",
        "id": 3001,
        "nodeType": "ImportDirective",
        "scope": 3335,
        "sourceUnit": 7062,
        "src": "220:39:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3003,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7353,
              "src": "1087:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7353",
                "typeString": "contract Ownable"
              }
            },
            "id": 3004,
            "nodeType": "InheritanceSpecifier",
            "src": "1087:7:9"
          }
        ],
        "contractDependencies": [
          7244,
          7353
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3002,
          "nodeType": "StructuredDocumentation",
          "src": "500:561:9",
          "text": "@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\nfrom the coumpound protocol.*"
        },
        "fullyImplemented": true,
        "id": 3334,
        "linearizedBaseContracts": [
          3334,
          7353,
          7244
        ],
        "name": "WarpVaultLP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3007,
            "libraryName": {
              "contractScope": null,
              "id": 3005,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7549,
              "src": "1107:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7549",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1101:27:9",
            "typeName": {
              "id": 3006,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1120:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "cb7b4206",
            "id": 3009,
            "mutability": "mutable",
            "name": "timeWizard",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1134:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3008,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1134:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46cd6801",
            "id": 3011,
            "mutability": "mutable",
            "name": "lpName",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1165:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3010,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1165:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c14cba3e",
            "id": 3013,
            "mutability": "mutable",
            "name": "LPtoken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1192:21:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8134",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3012,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8134,
              "src": "1192:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8134",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "122b5818",
            "id": 3015,
            "mutability": "mutable",
            "name": "WC",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1219:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WarpControlI_$7061",
              "typeString": "contract WarpControlI"
            },
            "typeName": {
              "contractScope": null,
              "id": 3014,
              "name": "WarpControlI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7061,
              "src": "1219:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WarpControlI_$7061",
                "typeString": "contract WarpControlI"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "763e4a0d",
            "id": 3019,
            "mutability": "mutable",
            "name": "collateralizedLP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3334,
            "src": "1248:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3018,
              "keyType": {
                "id": 3016,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1256:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1248:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3017,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1267:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3025,
            "name": "CollateralProvided",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3021,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3025,
                  "src": "1331:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3023,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3025,
                  "src": "1349:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3022,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1330:32:9"
            },
            "src": "1306:57:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3031,
            "name": "CollateralWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3027,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3031,
                  "src": "1393:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3029,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3031,
                  "src": "1411:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3028,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1392:31:9"
            },
            "src": "1368:56:9"
          },
          {
            "body": {
              "id": 3045,
              "nodeType": "Block",
              "src": "1533:62:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3035,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1551:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1551:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3039,
                              "name": "WC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3015,
                              "src": "1573:2:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WarpControlI_$7061",
                                "typeString": "contract WarpControlI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WarpControlI_$7061",
                                "typeString": "contract WarpControlI"
                              }
                            ],
                            "id": 3038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1565:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1565:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1565:11:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1551:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1543:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1543:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3043,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:34:9"
                },
                {
                  "id": 3044,
                  "nodeType": "PlaceholderStatement",
                  "src": "1587:1:9"
                }
              ]
            },
            "documentation": {
              "id": 3032,
              "nodeType": "StructuredDocumentation",
              "src": "1429:81:9",
              "text": "@dev Throws if called by any account other than a warp control"
            },
            "id": 3046,
            "name": "onlyWC",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1530:2:9"
            },
            "src": "1515:80:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3056,
              "nodeType": "Block",
              "src": "1701:53:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3050,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "1719:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3051,
                          "name": "timeWizard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3009,
                          "src": "1725:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1719:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1711:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3054,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:25:9"
                },
                {
                  "id": 3055,
                  "nodeType": "PlaceholderStatement",
                  "src": "1746:1:9"
                }
              ]
            },
            "documentation": {
              "id": 3047,
              "nodeType": "StructuredDocumentation",
              "src": "1597:76:9",
              "text": "@dev Throws if a function is called before the time wizard allows it*"
            },
            "id": 3057,
            "name": "angryWizard",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:2:9"
            },
            "src": "1678:76:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3092,
              "nodeType": "Block",
              "src": "2631:146:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3069,
                      "name": "lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3011,
                      "src": "2641:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3070,
                      "name": "_lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3066,
                      "src": "2650:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2641:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3072,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3073,
                      "name": "LPtoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3013,
                      "src": "2667:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8134",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3075,
                          "name": "_lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3062,
                          "src": "2684:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3074,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8134,
                        "src": "2677:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$8134_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2677:11:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8134",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2667:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8134",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3078,
                  "nodeType": "ExpressionStatement",
                  "src": "2667:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3079,
                      "name": "WC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3015,
                      "src": "2698:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7061",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3081,
                          "name": "_WarpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3064,
                          "src": "2716:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3080,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7061,
                        "src": "2703:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$7061_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 3082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2703:26:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7061",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2698:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$7061",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 3084,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:31:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3085,
                      "name": "timeWizard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3009,
                      "src": "2739:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3088,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3060,
                          "src": "2760:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3086,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "2752:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7382,
                        "src": "2752:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2752:18:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2739:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "2739:31:9"
                }
              ]
            },
            "documentation": {
              "id": 3058,
              "nodeType": "StructuredDocumentation",
              "src": "1759:733:9",
              "text": "@notice constructor sets up token names and symbols for the WarpWrapperToken\n@param _lp is the address of the lp token a specific Warp vault will represent\n@param _lpName is the name of the lp token\n@param _timelock is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)\n@dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\neach type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\nthis contract the ability to call their mint and burn functions.*"
            },
            "id": 3093,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3060,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "2518:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3062,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "2545:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3064,
                  "mutability": "mutable",
                  "name": "_WarpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "2566:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3066,
                  "mutability": "mutable",
                  "name": "_lpName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "2596:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3065,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2508:115:9"
            },
            "returnParameters": {
              "id": 3068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:0:9"
            },
            "scope": 3334,
            "src": "2497:280:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3106,
              "nodeType": "Block",
              "src": "2836:46:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3100,
                      "name": "WC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3015,
                      "src": "2844:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7061",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3102,
                          "name": "_warpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3095,
                          "src": "2862:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3101,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7061,
                        "src": "2849:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$7061_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 3103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2849:26:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$7061",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2844:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$7061",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 3105,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:31:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0900f010",
            "id": 3107,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3098,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3097,
                  "name": "onlyWC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3046,
                  "src": "2829:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2829:6:9"
              }
            ],
            "name": "upgrade",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "mutable",
                  "name": "_warpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3107,
                  "src": "2800:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2799:22:9"
            },
            "returnParameters": {
              "id": 3099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2836:0:9"
            },
            "scope": 3334,
            "src": "2783:99:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3170,
              "nodeType": "Block",
              "src": "3111:436:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3116,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3147:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3147:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3120,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3167:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WarpVaultLP_$3334",
                                    "typeString": "contract WarpVaultLP"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WarpVaultLP_$3334",
                                    "typeString": "contract WarpVaultLP"
                                  }
                                ],
                                "id": 3119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3159:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3118,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3159:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3159:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3114,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3013,
                              "src": "3129:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8134",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8093,
                            "src": "3129:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 3122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3129:44:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3123,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3110,
                          "src": "3177:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3129:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5661756c74206d757374206861766520656e6f75676820616c6c6f77616e63652e",
                        "id": 3125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3186:35:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff02b9fc82578adaeb1ee8508353c479a64656660dbb700329f0785ff0182118",
                          "typeString": "literal_string \"Vault must have enough allowance.\""
                        },
                        "value": "Vault must have enough allowance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff02b9fc82578adaeb1ee8508353c479a64656660dbb700329f0785ff0182118",
                          "typeString": "literal_string \"Vault must have enough allowance.\""
                        }
                      ],
                      "id": 3113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3121:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:101:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3127,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:101:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3131,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3258:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3258:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3129,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3013,
                              "src": "3240:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8134",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8073,
                            "src": "3240:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3240:29:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3134,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3110,
                          "src": "3273:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3240:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520656e6f756768204c5020746f2070726f76696465",
                        "id": 3136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3282:32:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        },
                        "value": "Must have enough LP to provide"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        }
                      ],
                      "id": 3128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3232:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:83:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3138,
                  "nodeType": "ExpressionStatement",
                  "src": "3232:83:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3142,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3346:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3346:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3146,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3366:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$3334",
                              "typeString": "contract WarpVaultLP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$3334",
                              "typeString": "contract WarpVaultLP"
                            }
                          ],
                          "id": 3145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3358:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3358:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3358:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3148,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3110,
                        "src": "3373:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3139,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "3325:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8115,
                      "src": "3325:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:56:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3151,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "3391:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3154,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3408:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3408:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3391:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3160,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3110,
                          "src": "3468:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3155,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "3422:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3158,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3156,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3439:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3439:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3422:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7382,
                        "src": "3422:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3422:63:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3391:94:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:94:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3520:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3520:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3167,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3110,
                        "src": "3532:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3164,
                      "name": "CollateralProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3025,
                      "src": "3501:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3169,
                  "nodeType": "EmitStatement",
                  "src": "3496:44:9"
                }
              ]
            },
            "documentation": {
              "id": 3108,
              "nodeType": "StructuredDocumentation",
              "src": "2888:167:9",
              "text": "@notice provideCollateral allows a user to collateralize this contracts associated LP token\n@param _amount is the amount of LP being collateralized*"
            },
            "functionSelector": "f0c3c06b",
            "id": 3171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3110,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3171,
                  "src": "3087:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3086:17:9"
            },
            "returnParameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3111:0:9"
            },
            "scope": 3334,
            "src": "3060:487:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3250,
              "nodeType": "Block",
              "src": "3806:990:9",
              "statements": [
                {
                  "assignments": [
                    3178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3178,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3250,
                      "src": "3816:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3816:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3179,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3816:14:9"
                },
                {
                  "assignments": [
                    3181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3181,
                      "mutability": "mutable",
                      "name": "maxAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3250,
                      "src": "3840:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3180,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3840:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3191,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3885:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3885:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3188,
                            "name": "LPtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3013,
                            "src": "3905:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8134",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$8134",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3897:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3897:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3897:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3182,
                        "name": "WC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3015,
                        "src": "3860:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WarpControlI_$7061",
                          "typeString": "contract WarpControlI"
                        }
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMaxWithdrawAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6962,
                      "src": "3860:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3840:74:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3192,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "3927:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3938:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3927:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3204,
                    "nodeType": "Block",
                    "src": "3992:43:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3200,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3178,
                            "src": "4006:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3201,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3174,
                            "src": "4015:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4006:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3203,
                        "nodeType": "ExpressionStatement",
                        "src": "4006:16:9"
                      }
                    ]
                  },
                  "id": 3205,
                  "nodeType": "IfStatement",
                  "src": "3924:111:9",
                  "trueBody": {
                    "id": 3199,
                    "nodeType": "Block",
                    "src": "3941:45:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3195,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3178,
                            "src": "3955:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3196,
                            "name": "maxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3181,
                            "src": "3964:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3955:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3198,
                        "nodeType": "ExpressionStatement",
                        "src": "3955:18:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3207,
                          "name": "maxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3181,
                          "src": "4216:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3208,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3178,
                          "src": "4229:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4216:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "547279696e6720746f20776974686472617720746f6f206d756368",
                        "id": 3210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4249:29:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        },
                        "value": "Trying to withdraw too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        }
                      ],
                      "id": 3206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4195:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4195:93:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3212,
                  "nodeType": "ExpressionStatement",
                  "src": "4195:93:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3214,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "4389:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3217,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3215,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4406:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4406:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4389:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3218,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3178,
                          "src": "4421:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4389:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752061726520747279696e6720746f207769746864726177206d6f726520636f6c6c61746572616c207468616e20796f752068617665206c6f636b6564",
                        "id": 3220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4429:65:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a962e5d734e10f5e9f0032efef10c1040971ae90410b2eda99f153e6d62850f",
                          "typeString": "literal_string \"you are trying to withdraw more collateral than you have locked\""
                        },
                        "value": "you are trying to withdraw more collateral than you have locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a962e5d734e10f5e9f0032efef10c1040971ae90410b2eda99f153e6d62850f",
                          "typeString": "literal_string \"you are trying to withdraw more collateral than you have locked\""
                        }
                      ],
                      "id": 3213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4381:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:114:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3222,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:114:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3223,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "4561:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3226,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4578:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4578:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4561:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3232,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3178,
                          "src": "4638:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3227,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "4592:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3230,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3228,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4609:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4609:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4592:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7399,
                        "src": "4592:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4592:62:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4561:93:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3235,
                  "nodeType": "ExpressionStatement",
                  "src": "4561:93:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4717:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4717:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3241,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3178,
                        "src": "4729:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3236,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "4700:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8083,
                      "src": "4700:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4700:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3243,
                  "nodeType": "ExpressionStatement",
                  "src": "4700:36:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4770:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4770:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3247,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3178,
                        "src": "4782:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3244,
                      "name": "CollateralWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3031,
                      "src": "4751:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4751:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3249,
                  "nodeType": "EmitStatement",
                  "src": "4746:43:9"
                }
              ]
            },
            "documentation": {
              "id": 3172,
              "nodeType": "StructuredDocumentation",
              "src": "3553:196:9",
              "text": "@notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\n@param _amount is the amount of LP tokens he wishes to withdraw*"
            },
            "functionSelector": "6112fe2e",
            "id": 3251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3174,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3251,
                  "src": "3782:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3782:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3781:17:9"
            },
            "returnParameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3806:0:9"
            },
            "scope": 3334,
            "src": "3754:1042:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3262,
              "nodeType": "Block",
              "src": "4953:40:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3259,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "4978:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 3258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4970:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3257,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4970:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 3260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4970:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3256,
                  "id": 3261,
                  "nodeType": "Return",
                  "src": "4963:23:9"
                }
              ]
            },
            "documentation": {
              "id": 3252,
              "nodeType": "StructuredDocumentation",
              "src": "4802:93:9",
              "text": "@notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
            },
            "functionSelector": "4c20ac74",
            "id": 3263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetAdd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4920:2:9"
            },
            "returnParameters": {
              "id": 3256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3255,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3263,
                  "src": "4944:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4944:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4943:9:9"
            },
            "scope": 3334,
            "src": "4900:93:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3275,
              "nodeType": "Block",
              "src": "5274:50:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3271,
                      "name": "collateralizedLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3019,
                      "src": "5291:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3273,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3272,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3266,
                      "src": "5308:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5291:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3270,
                  "id": 3274,
                  "nodeType": "Return",
                  "src": "5284:33:9"
                }
              ]
            },
            "documentation": {
              "id": 3264,
              "nodeType": "StructuredDocumentation",
              "src": "4999:165:9",
              "text": "@notice collateralOfAccount is a view function to retreive an accounts collateralized LP amount\n@param _account is the address of the account being looked up*"
            },
            "functionSelector": "f919b4bf",
            "id": 3276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralOfAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3266,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3276,
                  "src": "5198:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5198:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5197:18:9"
            },
            "returnParameters": {
              "id": 3270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3269,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3276,
                  "src": "5261:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5260:9:9"
            },
            "scope": 3334,
            "src": "5169:155:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3303,
              "nodeType": "Block",
              "src": "5817:214:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3291,
                        "name": "_liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3281,
                        "src": "5895:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3292,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3019,
                          "src": "5908:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3294,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3293,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3279,
                          "src": "5925:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5908:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3288,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "5878:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8134",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8083,
                      "src": "5878:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5878:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3296,
                  "nodeType": "ExpressionStatement",
                  "src": "5878:57:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3297,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "5994:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3299,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3298,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3279,
                        "src": "6011:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5994:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6023:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5994:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3302,
                  "nodeType": "ExpressionStatement",
                  "src": "5994:30:9"
                }
              ]
            },
            "documentation": {
              "id": 3277,
              "nodeType": "StructuredDocumentation",
              "src": "5330:362:9",
              "text": "@notice _liquidateAccount is a function to liquidate the LP tokens of the input account\n@param _account is the address of the account being liquidated\n@param _liquidator is the address of the account doing the liquidating who receives the liquidated LP's\n@dev this function uses the onlyWC modifier meaning that only the Warp Control contract can call it*"
            },
            "functionSelector": "f4b5e3e4",
            "id": 3304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3284,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3283,
                  "name": "onlyWC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3046,
                  "src": "5786:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5786:6:9"
              },
              {
                "arguments": null,
                "id": 3286,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3285,
                  "name": "angryWizard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3057,
                  "src": "5801:11:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5801:11:9"
              }
            ],
            "name": "_liquidateAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3279,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3304,
                  "src": "5724:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5724:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3281,
                  "mutability": "mutable",
                  "name": "_liquidator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3304,
                  "src": "5742:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5742:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5723:39:9"
            },
            "returnParameters": {
              "id": 3287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5817:0:9"
            },
            "scope": 3334,
            "src": "5697:334:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3332,
              "nodeType": "Block",
              "src": "6120:200:9",
              "statements": [
                {
                  "assignments": [
                    3312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3312,
                      "mutability": "mutable",
                      "name": "collateralPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3332,
                      "src": "6130:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3311,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6130:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3320,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3317,
                            "name": "LPtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3013,
                            "src": "6189:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8134",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$8134",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6181:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3315,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6181:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6181:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3313,
                        "name": "WC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3015,
                        "src": "6156:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WarpControlI_$7061",
                          "typeString": "contract WarpControlI"
                        }
                      },
                      "id": 3314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "viewPriceOfCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6978,
                      "src": "6156:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6156:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6130:68:9"
                },
                {
                  "assignments": [
                    3322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3322,
                      "mutability": "mutable",
                      "name": "collateralValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3332,
                      "src": "6208:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3321,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6208:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3329,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3327,
                        "name": "collateralPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3312,
                        "src": "6265:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3323,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3019,
                          "src": "6234:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3325,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3324,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3306,
                          "src": "6251:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6234:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7462,
                      "src": "6234:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6234:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6208:73:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3330,
                    "name": "collateralValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3322,
                    "src": "6298:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3310,
                  "id": 3331,
                  "nodeType": "Return",
                  "src": "6291:22:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c453e557",
            "id": 3333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "valueOfAccountCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3306,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3333,
                  "src": "6071:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6071:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6070:18:9"
            },
            "returnParameters": {
              "id": 3310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3333,
                  "src": "6111:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6111:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6110:9:9"
            },
            "scope": 3334,
            "src": "6037:283:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3335,
        "src": "1063:5259:9"
      }
    ],
    "src": "0:6323:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-10T23:21:40.438Z",
  "devdoc": {
    "methods": {
      "_liquidateAccount(address,address)": {
        "details": "this function uses the onlyWC modifier meaning that only the Warp Control contract can call it*",
        "params": {
          "_account": "is the address of the account being liquidated",
          "_liquidator": "is the address of the account doing the liquidating who receives the liquidated LP's"
        }
      },
      "collateralOfAccount(address)": {
        "params": {
          "_account": "is the address of the account being looked up*"
        }
      },
      "constructor": {
        "details": "this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving this contract the ability to call their mint and burn functions.*",
        "params": {
          "_lp": "is the address of the lp token a specific Warp vault will represent",
          "_lpName": "is the name of the lp token",
          "_timelock": "is a variable representing the number of seconds the timeWizard will prevent withdraws and borrows from a contracts(one week is 605800 seconds)"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "provideCollateral(uint256)": {
        "params": {
          "_amount": "is the amount of LP being collateralized*"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawCollateral(uint256)": {
        "params": {
          "_amount": "is the amount of LP tokens he wishes to withdraw*"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "_liquidateAccount(address,address)": {
        "notice": "_liquidateAccount is a function to liquidate the LP tokens of the input account"
      },
      "collateralOfAccount(address)": {
        "notice": "collateralOfAccount is a view function to retreive an accounts collateralized LP amount"
      },
      "constructor": "constructor sets up token names and symbols for the WarpWrapperToken",
      "getAssetAdd()": {
        "notice": "getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
      },
      "provideCollateral(uint256)": {
        "notice": "provideCollateral allows a user to collateralize this contracts associated LP token"
      },
      "withdrawCollateral(uint256)": {
        "notice": "withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral"
      }
    },
    "notice": "the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the Warp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets, holding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts from the coumpound protocol.*"
  }
}