{
  "contractName": "WarpVaultLP",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WarpControl",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_lpName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LPtoken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WC",
      "outputs": [
        {
          "internalType": "contract WarpControlI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WLP",
      "outputs": [
        {
          "internalType": "contract WarpWrapperToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralizedLP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "provideCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAssetAdd",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "collateralOfAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "liquidateAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WarpControl\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_lpName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LPtoken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WC\",\"outputs\":[{\"internalType\":\"contract WarpControlI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WLP\",\"outputs\":[{\"internalType\":\"contract WarpWrapperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"collateralOfAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralizedLP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssetAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"liquidateAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"details\":\"this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving this contract the ability to call their mint and burn functions.*\",\"params\":{\"_lp\":\"is the address of the lp token a specific Warp vault will represent\",\"_lpName\":\"is the name of the lp token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"provideCollateral(uint256)\":{\"params\":{\"_amount\":\"is the amount of LP being collateralized*\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawCollateral(uint256)\":{\"params\":{\"_amount\":\"is the amount of LP tokens he wishes to withdraw*\"}}}},\"userdoc\":{\"methods\":{\"constructor\":\"constructor sets up token names and symbols for the WarpWrapperToken\",\"getAssetAdd()\":{\"notice\":\"getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*\"},\"provideCollateral(uint256)\":{\"notice\":\"provideCollateral allows a user to collateralize this contracts associated LP token\"},\"withdrawCollateral(uint256)\":{\"notice\":\"withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\"}},\"notice\":\"the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the Warp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets, holding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts from the coumpound protocol.*\"}},\"settings\":{\"compilationTarget\":{\"/E/dOrg/warp/Smart-Contracts/contracts/WarpVaultLP.sol\":\"WarpVaultLP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"/E/dOrg/warp/Smart-Contracts/contracts/WarpVaultLP.sol\":{\"keccak256\":\"0x3cd5102b4d00f73caf390aa63e7616275fb692d7ee848cb17793445fa901a1a9\",\"urls\":[\"bzz-raw://565d2932617ef627757d366306bf2415b05e7f62d105a19b3b76c84fced9ce5c\",\"dweb:/ipfs/QmfYCkot48coZ88cCiPCWsyvrfpzsoLSrgotbFLAAMHGzf\"]},\"/E/dOrg/warp/Smart-Contracts/contracts/WarpWrapperToken.sol\":{\"keccak256\":\"0xe460ee8f12ea35a9f3e298ca66e7d389a60e0a065ba1e37437454d00c1db0e13\",\"urls\":[\"bzz-raw://c6064f955beed5352da7a86e8766dbe007390ad49c08da96dbf54eff0797da3f\",\"dweb:/ipfs/QmfRaY4Ss76QUCWJLXLJ2Xa4aXE5VkgDdYDGHMjJjxcQXL\"]},\"/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol\":{\"keccak256\":\"0x22fc46d495fad4f665ccd2e147efd9afc785629dce4eb67b9e5012c2517175f7\",\"urls\":[\"bzz-raw://a07463fc507fd86952e9f1fa9c417d38b231fc190e6b8cc969a1b79fbd2b94d0\",\"dweb:/ipfs/QmUTFs1TJGmeMUeCKeuTmG513nhk75ybsUvBV1BeztqZvG\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610cd1380380610cd18339818101604052606081101561003357600080fd5b8151602083015160408085018051915193959294830192918464010000000082111561005e57600080fd5b90830190602082018581111561007357600080fd5b825164010000000081118282018810171561008d57600080fd5b82525081516020918201929091019080838360005b838110156100ba5781810151838201526020016100a2565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b5060405250505060006100fe61018e60201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350805161015b906001906020840190610193565b5050600280546001600160a01b039384166001600160a01b0319918216179091556004805492909316911617905561022b565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101d457805160ff1916838001178555610201565b82800160010185558215610201579182015b828111156102015782518255916020019190600101906101e6565b5061020d929150610211565b5090565b61019091905b8082111561020d5760008155600101610217565b610a978061023a6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c8063122b5818146100b457806346cd6801146100d85780634c20ac74146101555780636112fe2e1461015d578063715018a61461017c578063763e4a0d146101845780638da5cb5b146101bc5780639ab23701146101c4578063ac979028146101cc578063c14cba3e146101fa578063f0c3c06b14610202578063f2fde38b1461021f578063f919b4bf14610245575b600080fd5b6100bc61026b565b604080516001600160a01b039092168252519081900360200190f35b6100e061027a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011a578181015183820152602001610102565b50505050905090810190601f1680156101475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100bc610307565b61017a6004803603602081101561017357600080fd5b5035610316565b005b61017a6104a3565b6101aa6004803603602081101561019a57600080fd5b50356001600160a01b0316610533565b60408051918252519081900360200190f35b6100bc610545565b6100bc610554565b61017a600480360360408110156101e257600080fd5b506001600160a01b0381358116916020013516610563565b6100bc61062e565b61017a6004803603602081101561021857600080fd5b503561063d565b61017a6004803603602081101561023557600080fd5b50356001600160a01b03166107be565b6101aa6004803603602081101561025b57600080fd5b50356001600160a01b03166108a4565b6004546001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b505050505081565b6002546001600160a01b031690565b6004805460025460408051636bda157760e01b815233948101949094526001600160a01b0391821660248501525184939190921691636bda1577916044808201926020929091908290030181600087803b15801561037357600080fd5b505af1158015610387573d6000803e3d6000fd5b505050506040513d602081101561039d57600080fd5b5051116103ef576040805162461bcd60e51b815260206004820152601b60248201527a0a8e4f2d2dcce40e8de40eed2e8d0c8e4c2ee40e8dede40daeac6d602b1b604482015290519081900360640190fd5b3360009081526005602052604090205461040f908263ffffffff6108bf16565b33600081815260056020908152604080832094909455600254845163a9059cbb60e01b815260048101949094526024840186905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b15801561047457600080fd5b505af1158015610488573d6000803e3d6000fd5b505050506040513d602081101561049e57600080fd5b505050565b6104ab610908565b6000546001600160a01b039081169116146104fb576040805162461bcd60e51b81526020600482018190526024820152600080516020610a22833981519152604482015290519081900360640190fd5b600080546040516001600160a01b0390911690600080516020610a42833981519152908390a3600080546001600160a01b0319169055565b60056020526000908152604090205481565b6000546001600160a01b031690565b6003546001600160a01b031681565b6004546001600160a01b0316331461057a57600080fd5b6002546001600160a01b0383811660009081526005602090815260408083205481516323b872dd60e01b815230600482015287861660248201526044810191909152905193909416936323b872dd9360648083019491928390030190829087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505050506040513d602081101561061157600080fd5b5050506001600160a01b0316600090815260056020526040812055565b6002546001600160a01b031681565b600254604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d60208110156106b157600080fd5b505111610705576040805162461bcd60e51b815260206004820152601e60248201527f4d757374206861766520656e6f756768204c5020746f2070726f766964650000604482015290519081900360640190fd5b600254604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561075f57600080fd5b505af1158015610773573d6000803e3d6000fd5b505050506040513d602081101561078957600080fd5b5050336000908152600560205260409020546107ab908263ffffffff61090c16565b3360009081526005602052604090205550565b6107c6610908565b6000546001600160a01b03908116911614610816576040805162461bcd60e51b81526020600482018190526024820152600080516020610a22833981519152604482015290519081900360640190fd5b6001600160a01b03811661085b5760405162461bcd60e51b81526004018080602001828103825260268152602001806109fc6026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020610a4283398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b031660009081526005602052604090205490565b600061090183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610964565b9392505050565b3390565b600082820183811015610901576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b600081848411156109f35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b85781810151838201526020016109a0565b50505050905090810190601f1680156109e55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220db9c645a255777febc97fba9dc24fdaaa3f79392f741a32371683ffa75d29eea64736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100af5760003560e01c8063122b5818146100b457806346cd6801146100d85780634c20ac74146101555780636112fe2e1461015d578063715018a61461017c578063763e4a0d146101845780638da5cb5b146101bc5780639ab23701146101c4578063ac979028146101cc578063c14cba3e146101fa578063f0c3c06b14610202578063f2fde38b1461021f578063f919b4bf14610245575b600080fd5b6100bc61026b565b604080516001600160a01b039092168252519081900360200190f35b6100e061027a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011a578181015183820152602001610102565b50505050905090810190601f1680156101475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100bc610307565b61017a6004803603602081101561017357600080fd5b5035610316565b005b61017a6104a3565b6101aa6004803603602081101561019a57600080fd5b50356001600160a01b0316610533565b60408051918252519081900360200190f35b6100bc610545565b6100bc610554565b61017a600480360360408110156101e257600080fd5b506001600160a01b0381358116916020013516610563565b6100bc61062e565b61017a6004803603602081101561021857600080fd5b503561063d565b61017a6004803603602081101561023557600080fd5b50356001600160a01b03166107be565b6101aa6004803603602081101561025b57600080fd5b50356001600160a01b03166108a4565b6004546001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b505050505081565b6002546001600160a01b031690565b6004805460025460408051636bda157760e01b815233948101949094526001600160a01b0391821660248501525184939190921691636bda1577916044808201926020929091908290030181600087803b15801561037357600080fd5b505af1158015610387573d6000803e3d6000fd5b505050506040513d602081101561039d57600080fd5b5051116103ef576040805162461bcd60e51b815260206004820152601b60248201527a0a8e4f2d2dcce40e8de40eed2e8d0c8e4c2ee40e8dede40daeac6d602b1b604482015290519081900360640190fd5b3360009081526005602052604090205461040f908263ffffffff6108bf16565b33600081815260056020908152604080832094909455600254845163a9059cbb60e01b815260048101949094526024840186905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b15801561047457600080fd5b505af1158015610488573d6000803e3d6000fd5b505050506040513d602081101561049e57600080fd5b505050565b6104ab610908565b6000546001600160a01b039081169116146104fb576040805162461bcd60e51b81526020600482018190526024820152600080516020610a22833981519152604482015290519081900360640190fd5b600080546040516001600160a01b0390911690600080516020610a42833981519152908390a3600080546001600160a01b0319169055565b60056020526000908152604090205481565b6000546001600160a01b031690565b6003546001600160a01b031681565b6004546001600160a01b0316331461057a57600080fd5b6002546001600160a01b0383811660009081526005602090815260408083205481516323b872dd60e01b815230600482015287861660248201526044810191909152905193909416936323b872dd9360648083019491928390030190829087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505050506040513d602081101561061157600080fd5b5050506001600160a01b0316600090815260056020526040812055565b6002546001600160a01b031681565b600254604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d60208110156106b157600080fd5b505111610705576040805162461bcd60e51b815260206004820152601e60248201527f4d757374206861766520656e6f756768204c5020746f2070726f766964650000604482015290519081900360640190fd5b600254604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561075f57600080fd5b505af1158015610773573d6000803e3d6000fd5b505050506040513d602081101561078957600080fd5b5050336000908152600560205260409020546107ab908263ffffffff61090c16565b3360009081526005602052604090205550565b6107c6610908565b6000546001600160a01b03908116911614610816576040805162461bcd60e51b81526020600482018190526024820152600080516020610a22833981519152604482015290519081900360640190fd5b6001600160a01b03811661085b5760405162461bcd60e51b81526004018080602001828103825260268152602001806109fc6026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020610a4283398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b031660009081526005602052604090205490565b600061090183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610964565b9392505050565b3390565b600082820183811015610901576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b600081848411156109f35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b85781810151838201526020016109a0565b50505050905090810190601f1680156109e55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220db9c645a255777febc97fba9dc24fdaaa3f79392f741a32371683ffa75d29eea64736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "1083:3171:5:-:0;;;2100:220;5:9:-1;2:2;;;27:1;24;17:12;2:2;2100:220:5;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2100:220:5;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2100:220:5;;420:4:-1;411:14;;;;2100:220:5;;;;;411:14:-1;2100:220:5;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2100:220:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:17:22;885:12;:10;;;:12;;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:22;-1:-1:-1;;;;;907:18:22;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:22;940:43;;907:6;;940:43;-1:-1:-1;2222:16:5;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;;2249:7:5;:21;;-1:-1:-1;;;;;2249:21:5;;;-1:-1:-1;;;;;;2249:21:5;;;;;;;2281:2;:31;;;;;;;;;;;1083:3171;;590:104:21;677:10;590:104;;:::o;1083:3171:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1083:3171:5;;;-1:-1:-1;1083:3171:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1083:3171:5:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1083:3171:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1248:22:5;;;:::i;:::-;;;;-1:-1:-1;;;;;1248:22:5;;;;;;;;;;;;;;1157:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1157:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3767:95;;;:::i;3043:611::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3043:611:5;;:::i;:::-;;1689:145:22;;;:::i;1279:51:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1279:51:5;-1:-1:-1;;;;;1279:51:5;;:::i;:::-;;;;;;;;;;;;;;;;1066:77:22;;;:::i;1214:27:5:-;;;:::i;4039:210::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4039:210:5;;;;;;;;;;:::i;1186:21::-;;;:::i;2504:326::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2504:326:5;;:::i;1983:240:22:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1983:240:22;-1:-1:-1;;;;;1983:240:22;;:::i;3870:161:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3870:161:5;-1:-1:-1;;;;;3870:161:5;;:::i;1248:22::-;;;-1:-1:-1;;;;;1248:22:5;;:::o;1157:20::-;;;;;;;;;;;;;;;-1:-1:-1;;1157:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3767:95::-;3846:7;;-1:-1:-1;;;;;3846:7:5;3767:95;:::o;3043:611::-;3280:2;;;3322:7;;3280:51;;;-1:-1:-1;;;3280:51:5;;3302:10;3280:51;;;;;;;-1:-1:-1;;;;;3322:7:5;;;3280:51;;;;;3334:7;;3280:2;;;;;:21;;:51;;;;;;;;;;;;;;;:2;;:51;;;2:2:-1;;;;27:1;24;17:12;2:2;3280:51:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3280:51:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3280:51:5;:61;3258:138;;;;;-1:-1:-1;;;3258:138:5;;;;;;;;;;;;-1:-1:-1;;;3258:138:5;;;;;;;;;;;;;;;3513:10;3496:28;;;;:16;:28;;;;;;:65;;3543:7;3496:65;:32;:65;:::i;:::-;3482:10;3465:28;;;;:16;:28;;;;;;;;:96;;;;3609:7;;:37;;-1:-1:-1;;;3609:37:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3609:7:5;;;;:16;;:37;;;;;;;;;;;;;:7;:37;;;2:2:-1;;;;27:1;24;17:12;2:2;3609:37:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3609:37:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;3043:611:5:o;1689:145:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:22;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:22;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:22;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:22;;::::1;::::0;-1:-1:-1;;;;;;;;;;;1758:40:22;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:22::1;::::0;;1689:145::o;1279:51:5:-;;;;;;;;;;;;;:::o;1066:77:22:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:22;1066:77;:::o;1214:27:5:-;;;-1:-1:-1;;;;;1214:27:5;;:::o;4039:210::-;1487:2;;-1:-1:-1;;;;;1487:2:5;1465:10;:25;1457:34;;12:1:-1;9;2:12;1457:34:5;4127:7:::1;::::0;-1:-1:-1;;;;;4175:25:5;;::::1;4127:7;4175:25:::0;;;:16:::1;:25;::::0;;;;;;;;4127:74;;-1:-1:-1;;;4127:74:5;;4156:4:::1;4127:74;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;;;;;:7;;;::::1;::::0;:20:::1;::::0;:74;;;;;;;;;;;;;;:7;:74;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;4127:74:5;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4127:74:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;;;;;;;;4212:25:5::1;4240:1;4212:25:::0;;;:16:::1;4127:74;4212:25:::0;;;;:29;4039:210::o;1186:21::-;;;-1:-1:-1;;;;;1186:21:5;;:::o;2504:326::-;2574:7;;:29;;;-1:-1:-1;;;2574:29:5;;2592:10;2574:29;;;;;;2606:7;;-1:-1:-1;;;;;2574:7:5;;:17;;:29;;;;;;;;;;;;;;:7;:29;;;2:2:-1;;;;27:1;24;17:12;2:2;2574:29:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2574:29:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2574:29:5;:39;2566:82;;;;;-1:-1:-1;;;2566:82:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2659:7;;:56;;;-1:-1:-1;;;2659:56:5;;2680:10;2659:56;;;;2700:4;2659:56;;;;;;;;;;;;-1:-1:-1;;;;;2659:7:5;;;;:20;;:56;;;;;;;;;;;;;;;:7;;:56;;;2:2:-1;;;;27:1;24;17:12;2:2;2659:56:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2659:56:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;2774:10:5;2757:28;;;;:16;2659:56;2757:28;;;;;:65;;2804:7;2757:65;:32;:65;:::i;:::-;2743:10;2726:28;;;;:16;:28;;;;;:96;-1:-1:-1;2504:326:5:o;1983:240:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:22;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:22;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:22;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:22;;::::1;::::0;2172:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2151:38:22;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:22::1;-1:-1:-1::0;;;;;2199:17:22;;;::::1;::::0;;;::::1;::::0;;1983:240::o;3870:161:5:-;-1:-1:-1;;;;;3997:26:5;3965:7;3997:26;;;:16;:26;;;;;;;3870:161::o;1321:134:23:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;1321:134;-1:-1:-1;;;1321:134:23:o;590:104:21:-;677:10;590:104;:::o;874:176:23:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:23;;;;;;;;;;;;-1:-1:-1;;;978:46:23;;;;;;;;;;;;;;1746:187;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:23;;;1746:187::o",
  "source": "pragma solidity ^0.6.2;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./WarpWrapperToken.sol\";\r\nimport \"./interfaces/WarpControlI.sol\";\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n/// @title WarpVaultLP\r\n/// @author Christopher Dixon\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\r\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\r\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\r\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\r\nfrom the coumpound protocol.\r\n**/\r\n\r\ncontract WarpVaultLP is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    string public lpName;\r\n\r\n    IERC20 public LPtoken;\r\n    WarpWrapperToken public WLP;\r\n    WarpControlI public WC;\r\n\r\n    mapping(address => uint256) public collateralizedLP;\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than a warp control\r\n     */\r\n    modifier onlyWC() {\r\n        require(msg.sender == address(WC));\r\n        _;\r\n    }\r\n\r\n    /**\r\n    @notice constructor sets up token names and symbols for the WarpWrapperToken\r\n    @param _lp is the address of the lp token a specific Warp vault will represent\r\n    @param _lpName is the name of the lp token\r\n    @dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\r\n        each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\r\n        this contract the ability to call their mint and burn functions.\r\n    **/\r\n    constructor(\r\n        address _lp,\r\n        address _WarpControl,\r\n        string memory _lpName\r\n    ) public {\r\n        lpName = _lpName;\r\n        LPtoken = IERC20(_lp);\r\n        WC = WarpControlI(_WarpControl);\r\n    }\r\n\r\n    /**\r\n    @notice provideCollateral allows a user to collateralize this contracts associated LP token\r\n    @param _amount is the amount of LP being collateralized\r\n    **/\r\n    function provideCollateral(uint256 _amount) public {\r\n        require(LPtoken.balanceOf(msg.sender) > _amount, \"Must have enough LP to provide\");\r\n        LPtoken.transferFrom(msg.sender, address(this), _amount);\r\n        collateralizedLP[msg.sender] = collateralizedLP[msg.sender].add(\r\n            _amount\r\n        );\r\n    }\r\n\r\n    /**\r\n    @notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\r\n    @param _amount is the amount of LP tokens he wishes to withdraw\r\n    **/\r\n    function withdrawCollateral(uint256 _amount) public {\r\n        //require the availible value of the LP locked in this contract the user has\r\n        //is greater than or equal to the amount being withdrawn\r\n        require(\r\n            WC.maxWithdrawAllowed(msg.sender, address(LPtoken)) > _amount,\r\n            \"Trying to withdraw too much\"\r\n        );\r\n\r\n        //subtract withdrawn amount from amount stored\r\n        collateralizedLP[msg.sender] = collateralizedLP[msg.sender].sub(\r\n            _amount\r\n        );\r\n        //transfer them their token\r\n        LPtoken.transfer(msg.sender, _amount);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n    @notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress\r\n    **/\r\n    function getAssetAdd() public view returns (address) {\r\n        return address(LPtoken);\r\n    }\r\n\r\n    function collateralOfAccount(address _account)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return collateralizedLP[_account];\r\n    }\r\n\r\n    function liquidateAccount(address account, address liquidator) public onlyWC {\r\n        LPtoken.transferFrom(address(this), liquidator, collateralizedLP[account]);\r\n        collateralizedLP[account] = 0;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "E:\\dOrg\\warp\\Smart-Contracts\\contracts\\WarpVaultLP.sol",
  "ast": {
    "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/WarpVaultLP.sol",
    "exportedSymbols": {
      "WarpVaultLP": [
        1639
      ]
    },
    "id": 1640,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1434,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1435,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 4864,
        "src": "27:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1436,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 5060,
        "src": "81:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1437,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 5645,
        "src": "134:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
        "file": "./WarpWrapperToken.sol",
        "id": 1438,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 2791,
        "src": "192:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol",
        "file": "./interfaces/WarpControlI.sol",
        "id": 1439,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 4591,
        "src": "226:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1441,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4863,
              "src": "1107:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4863",
                "typeString": "contract Ownable"
              }
            },
            "id": 1442,
            "nodeType": "InheritanceSpecifier",
            "src": "1107:7:5"
          }
        ],
        "contractDependencies": [
          4754,
          4863
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1440,
          "nodeType": "StructuredDocumentation",
          "src": "512:567:5",
          "text": "@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\nfrom the coumpound protocol.*"
        },
        "fullyImplemented": true,
        "id": 1639,
        "linearizedBaseContracts": [
          1639,
          4863,
          4754
        ],
        "name": "WarpVaultLP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1445,
            "libraryName": {
              "contractScope": null,
              "id": 1443,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5059,
              "src": "1128:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5059",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1122:27:5",
            "typeName": {
              "id": 1444,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1141:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "46cd6801",
            "id": 1447,
            "mutability": "mutable",
            "name": "lpName",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1157:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1446,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1157:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c14cba3e",
            "id": 1449,
            "mutability": "mutable",
            "name": "LPtoken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1186:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5644",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1448,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5644,
              "src": "1186:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5644",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ab23701",
            "id": 1451,
            "mutability": "mutable",
            "name": "WLP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1214:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WarpWrapperToken_$2790",
              "typeString": "contract WarpWrapperToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 1450,
              "name": "WarpWrapperToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2790,
              "src": "1214:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WarpWrapperToken_$2790",
                "typeString": "contract WarpWrapperToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "122b5818",
            "id": 1453,
            "mutability": "mutable",
            "name": "WC",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1248:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WarpControlI_$4590",
              "typeString": "contract WarpControlI"
            },
            "typeName": {
              "contractScope": null,
              "id": 1452,
              "name": "WarpControlI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4590,
              "src": "1248:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WarpControlI_$4590",
                "typeString": "contract WarpControlI"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "763e4a0d",
            "id": 1457,
            "mutability": "mutable",
            "name": "collateralizedLP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1279:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1456,
              "keyType": {
                "id": 1454,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1287:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1279:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1455,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1298:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1471,
              "nodeType": "Block",
              "src": "1446:65:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1461,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1465:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1465:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1465,
                              "name": "WC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "1487:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WarpControlI_$4590",
                                "typeString": "contract WarpControlI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WarpControlI_$4590",
                                "typeString": "contract WarpControlI"
                              }
                            ],
                            "id": 1464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1479:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1463,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1479:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1479:11:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1465:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1457:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:34:5"
                },
                {
                  "id": 1470,
                  "nodeType": "PlaceholderStatement",
                  "src": "1502:1:5"
                }
              ]
            },
            "documentation": {
              "id": 1458,
              "nodeType": "StructuredDocumentation",
              "src": "1339:83:5",
              "text": "@dev Throws if called by any account other than a warp control"
            },
            "id": 1472,
            "name": "onlyWC",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1443:2:5"
            },
            "src": "1428:83:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "2211:109:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1482,
                      "name": "lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "2222:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1483,
                      "name": "_lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "2231:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2222:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "2222:16:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1486,
                      "name": "LPtoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "2249:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5644",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1488,
                          "name": "_lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "2266:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1487,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5644,
                        "src": "2259:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$5644_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2259:11:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5644",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2249:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5644",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:21:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1492,
                      "name": "WC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "2281:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$4590",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1494,
                          "name": "_WarpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1477,
                          "src": "2299:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1493,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4590,
                        "src": "2286:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$4590_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2286:26:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$4590",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2281:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$4590",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 1497,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:31:5"
                }
              ]
            },
            "documentation": {
              "id": 1473,
              "nodeType": "StructuredDocumentation",
              "src": "1519:575:5",
              "text": "@notice constructor sets up token names and symbols for the WarpWrapperToken\n@param _lp is the address of the lp token a specific Warp vault will represent\n@param _lpName is the name of the lp token\n@dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\neach type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\nthis contract the ability to call their mint and burn functions.*"
            },
            "id": 1499,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1475,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "2122:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "_WarpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "2144:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "_lpName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "2175:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2111:92:5"
            },
            "returnParameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:0:5"
            },
            "scope": 1639,
            "src": "2100:220:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1541,
              "nodeType": "Block",
              "src": "2555:275:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1508,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2592:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2592:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1506,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
                              "src": "2574:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5644",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5583,
                            "src": "2574:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2574:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1511,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1502,
                          "src": "2606:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2574:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520656e6f756768204c5020746f2070726f76696465",
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2615:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        },
                        "value": "Must have enough LP to provide"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        }
                      ],
                      "id": 1505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2566:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:82:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:82:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1519,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2680:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2680:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1523,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2700:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$1639",
                              "typeString": "contract WarpVaultLP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$1639",
                              "typeString": "contract WarpVaultLP"
                            }
                          ],
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2692:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1521,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2692:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2692:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1525,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1502,
                        "src": "2707:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1516,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "2659:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5625,
                      "src": "2659:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "2659:56:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1528,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "2726:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1531,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2743:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2743:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2726:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1537,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1502,
                          "src": "2804:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1532,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "2757:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1535,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1533,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2774:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2774:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2757:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4892,
                        "src": "2757:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2757:65:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2726:96:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1540,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:96:5"
                }
              ]
            },
            "documentation": {
              "id": 1500,
              "nodeType": "StructuredDocumentation",
              "src": "2328:170:5",
              "text": "@notice provideCollateral allows a user to collateralize this contracts associated LP token\n@param _amount is the amount of LP being collateralized*"
            },
            "functionSelector": "f0c3c06b",
            "id": 1542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1502,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1542,
                  "src": "2531:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2530:17:5"
            },
            "returnParameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2555:0:5"
            },
            "scope": 1639,
            "src": "2504:326:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1584,
              "nodeType": "Block",
              "src": "3095:559:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1551,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3302:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3302:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1555,
                                  "name": "LPtoken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1449,
                                  "src": "3322:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$5644",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$5644",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3314:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1553,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3314:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3314:16:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1549,
                              "name": "WC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "3280:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WarpControlI_$4590",
                                "typeString": "contract WarpControlI"
                              }
                            },
                            "id": 1550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxWithdrawAllowed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4589,
                            "src": "3280:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) external returns (uint256)"
                            }
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3280:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1558,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1545,
                          "src": "3334:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3280:61:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "547279696e6720746f20776974686472617720746f6f206d756368",
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3356:29:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        },
                        "value": "Trying to withdraw too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        }
                      ],
                      "id": 1548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3258:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:138:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "3258:138:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1563,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "3465:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1566,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3482:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3482:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3465:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1572,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1545,
                          "src": "3543:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1567,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "3496:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1570,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1568,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3513:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3513:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3496:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4909,
                        "src": "3496:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3496:65:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3465:96:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1575,
                  "nodeType": "ExpressionStatement",
                  "src": "3465:96:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1579,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3626:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3626:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1581,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1545,
                        "src": "3638:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1576,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "3609:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5593,
                      "src": "3609:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:37:5"
                }
              ]
            },
            "documentation": {
              "id": 1543,
              "nodeType": "StructuredDocumentation",
              "src": "2838:199:5",
              "text": "@notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\n@param _amount is the amount of LP tokens he wishes to withdraw*"
            },
            "functionSelector": "6112fe2e",
            "id": 1585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1545,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1585,
                  "src": "3071:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3070:17:5"
            },
            "returnParameters": {
              "id": 1547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3095:0:5"
            },
            "scope": 1639,
            "src": "3043:611:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1596,
              "nodeType": "Block",
              "src": "3820:42:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1593,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "3846:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3838:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1591,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3838:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3838:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1590,
                  "id": 1595,
                  "nodeType": "Return",
                  "src": "3831:23:5"
                }
              ]
            },
            "documentation": {
              "id": 1586,
              "nodeType": "StructuredDocumentation",
              "src": "3666:95:5",
              "text": "@notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
            },
            "functionSelector": "4c20ac74",
            "id": 1597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetAdd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3787:2:5"
            },
            "returnParameters": {
              "id": 1590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1589,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1597,
                  "src": "3811:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3810:9:5"
            },
            "scope": 1639,
            "src": "3767:95:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1608,
              "nodeType": "Block",
              "src": "3979:52:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1604,
                      "name": "collateralizedLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1457,
                      "src": "3997:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1606,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1605,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1599,
                      "src": "4014:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3997:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1603,
                  "id": 1607,
                  "nodeType": "Return",
                  "src": "3990:33:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f919b4bf",
            "id": 1609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralOfAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1609,
                  "src": "3899:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3899:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3898:18:5"
            },
            "returnParameters": {
              "id": 1603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1609,
                  "src": "3965:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3965:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3964:9:5"
            },
            "scope": 1639,
            "src": "3870:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1637,
              "nodeType": "Block",
              "src": "4116:133:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1623,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4156:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$1639",
                              "typeString": "contract WarpVaultLP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$1639",
                              "typeString": "contract WarpVaultLP"
                            }
                          ],
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4148:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4148:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4148:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1613,
                        "src": "4163:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1626,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1457,
                          "src": "4175:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1628,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1627,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1611,
                          "src": "4192:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4175:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1618,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "4127:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5625,
                      "src": "4127:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4127:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1630,
                  "nodeType": "ExpressionStatement",
                  "src": "4127:74:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1631,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "4212:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1633,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1632,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4229:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4212:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4240:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4212:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1636,
                  "nodeType": "ExpressionStatement",
                  "src": "4212:29:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ac979028",
            "id": 1638,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1616,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1615,
                  "name": "onlyWC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1472,
                  "src": "4109:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4109:6:5"
              }
            ],
            "name": "liquidateAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1638,
                  "src": "4065:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4065:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "liquidator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1638,
                  "src": "4082:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4064:37:5"
            },
            "returnParameters": {
              "id": 1617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4116:0:5"
            },
            "scope": 1639,
            "src": "4039:210:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1640,
        "src": "1083:3171:5"
      }
    ],
    "src": "0:4256:5"
  },
  "legacyAST": {
    "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/WarpVaultLP.sol",
    "exportedSymbols": {
      "WarpVaultLP": [
        1639
      ]
    },
    "id": 1640,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1434,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1435,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 4864,
        "src": "27:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1436,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 5060,
        "src": "81:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1437,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 5645,
        "src": "134:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
        "file": "./WarpWrapperToken.sol",
        "id": 1438,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 2791,
        "src": "192:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpControlI.sol",
        "file": "./interfaces/WarpControlI.sol",
        "id": 1439,
        "nodeType": "ImportDirective",
        "scope": 1640,
        "sourceUnit": 4591,
        "src": "226:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1441,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4863,
              "src": "1107:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4863",
                "typeString": "contract Ownable"
              }
            },
            "id": 1442,
            "nodeType": "InheritanceSpecifier",
            "src": "1107:7:5"
          }
        ],
        "contractDependencies": [
          4754,
          4863
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1440,
          "nodeType": "StructuredDocumentation",
          "src": "512:567:5",
          "text": "@notice the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the\nWarp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets,\nholding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class.\nThis contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts\nfrom the coumpound protocol.*"
        },
        "fullyImplemented": true,
        "id": 1639,
        "linearizedBaseContracts": [
          1639,
          4863,
          4754
        ],
        "name": "WarpVaultLP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1445,
            "libraryName": {
              "contractScope": null,
              "id": 1443,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5059,
              "src": "1128:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5059",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1122:27:5",
            "typeName": {
              "id": 1444,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1141:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "46cd6801",
            "id": 1447,
            "mutability": "mutable",
            "name": "lpName",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1157:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1446,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1157:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c14cba3e",
            "id": 1449,
            "mutability": "mutable",
            "name": "LPtoken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1186:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5644",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1448,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5644,
              "src": "1186:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5644",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ab23701",
            "id": 1451,
            "mutability": "mutable",
            "name": "WLP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1214:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WarpWrapperToken_$2790",
              "typeString": "contract WarpWrapperToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 1450,
              "name": "WarpWrapperToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2790,
              "src": "1214:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WarpWrapperToken_$2790",
                "typeString": "contract WarpWrapperToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "122b5818",
            "id": 1453,
            "mutability": "mutable",
            "name": "WC",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1248:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WarpControlI_$4590",
              "typeString": "contract WarpControlI"
            },
            "typeName": {
              "contractScope": null,
              "id": 1452,
              "name": "WarpControlI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4590,
              "src": "1248:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WarpControlI_$4590",
                "typeString": "contract WarpControlI"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "763e4a0d",
            "id": 1457,
            "mutability": "mutable",
            "name": "collateralizedLP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1639,
            "src": "1279:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1456,
              "keyType": {
                "id": 1454,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1287:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1279:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1455,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1298:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1471,
              "nodeType": "Block",
              "src": "1446:65:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1461,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1465:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1465:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1465,
                              "name": "WC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "1487:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WarpControlI_$4590",
                                "typeString": "contract WarpControlI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WarpControlI_$4590",
                                "typeString": "contract WarpControlI"
                              }
                            ],
                            "id": 1464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1479:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1463,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1479:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1479:11:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1465:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1457:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:34:5"
                },
                {
                  "id": 1470,
                  "nodeType": "PlaceholderStatement",
                  "src": "1502:1:5"
                }
              ]
            },
            "documentation": {
              "id": 1458,
              "nodeType": "StructuredDocumentation",
              "src": "1339:83:5",
              "text": "@dev Throws if called by any account other than a warp control"
            },
            "id": 1472,
            "name": "onlyWC",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1443:2:5"
            },
            "src": "1428:83:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "2211:109:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1482,
                      "name": "lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "2222:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1483,
                      "name": "_lpName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "2231:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2222:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "2222:16:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1486,
                      "name": "LPtoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "2249:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5644",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1488,
                          "name": "_lp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "2266:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1487,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5644,
                        "src": "2259:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$5644_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2259:11:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5644",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2249:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5644",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:21:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1492,
                      "name": "WC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "2281:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$4590",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1494,
                          "name": "_WarpControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1477,
                          "src": "2299:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1493,
                        "name": "WarpControlI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4590,
                        "src": "2286:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WarpControlI_$4590_$",
                          "typeString": "type(contract WarpControlI)"
                        }
                      },
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2286:26:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WarpControlI_$4590",
                        "typeString": "contract WarpControlI"
                      }
                    },
                    "src": "2281:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WarpControlI_$4590",
                      "typeString": "contract WarpControlI"
                    }
                  },
                  "id": 1497,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:31:5"
                }
              ]
            },
            "documentation": {
              "id": 1473,
              "nodeType": "StructuredDocumentation",
              "src": "1519:575:5",
              "text": "@notice constructor sets up token names and symbols for the WarpWrapperToken\n@param _lp is the address of the lp token a specific Warp vault will represent\n@param _lpName is the name of the lp token\n@dev this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent\neach type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving\nthis contract the ability to call their mint and burn functions.*"
            },
            "id": 1499,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1475,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "2122:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "_WarpControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "2144:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "_lpName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "2175:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2111:92:5"
            },
            "returnParameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:0:5"
            },
            "scope": 1639,
            "src": "2100:220:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1541,
              "nodeType": "Block",
              "src": "2555:275:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1508,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2592:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2592:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1506,
                              "name": "LPtoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
                              "src": "2574:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5644",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5583,
                            "src": "2574:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2574:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1511,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1502,
                          "src": "2606:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2574:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520656e6f756768204c5020746f2070726f76696465",
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2615:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        },
                        "value": "Must have enough LP to provide"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f77a21d03ffffe40755bb490d088001bbdbfcba7939ab798778a3c4596ae487",
                          "typeString": "literal_string \"Must have enough LP to provide\""
                        }
                      ],
                      "id": 1505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2566:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:82:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:82:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1519,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2680:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2680:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1523,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2700:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$1639",
                              "typeString": "contract WarpVaultLP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$1639",
                              "typeString": "contract WarpVaultLP"
                            }
                          ],
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2692:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1521,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2692:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2692:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1525,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1502,
                        "src": "2707:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1516,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "2659:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5625,
                      "src": "2659:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "2659:56:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1528,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "2726:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1531,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2743:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2743:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2726:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1537,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1502,
                          "src": "2804:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1532,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "2757:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1535,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1533,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2774:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2774:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2757:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4892,
                        "src": "2757:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2757:65:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2726:96:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1540,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:96:5"
                }
              ]
            },
            "documentation": {
              "id": 1500,
              "nodeType": "StructuredDocumentation",
              "src": "2328:170:5",
              "text": "@notice provideCollateral allows a user to collateralize this contracts associated LP token\n@param _amount is the amount of LP being collateralized*"
            },
            "functionSelector": "f0c3c06b",
            "id": 1542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1502,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1542,
                  "src": "2531:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2530:17:5"
            },
            "returnParameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2555:0:5"
            },
            "scope": 1639,
            "src": "2504:326:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1584,
              "nodeType": "Block",
              "src": "3095:559:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1551,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3302:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3302:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1555,
                                  "name": "LPtoken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1449,
                                  "src": "3322:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$5644",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$5644",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3314:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1553,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3314:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3314:16:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1549,
                              "name": "WC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "3280:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WarpControlI_$4590",
                                "typeString": "contract WarpControlI"
                              }
                            },
                            "id": 1550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxWithdrawAllowed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4589,
                            "src": "3280:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) external returns (uint256)"
                            }
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3280:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1558,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1545,
                          "src": "3334:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3280:61:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "547279696e6720746f20776974686472617720746f6f206d756368",
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3356:29:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        },
                        "value": "Trying to withdraw too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_870031ad3ad2f053edff2cc7c292101054abdef1d243075a840865a406e92104",
                          "typeString": "literal_string \"Trying to withdraw too much\""
                        }
                      ],
                      "id": 1548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3258:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:138:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "3258:138:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1563,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "3465:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1566,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3482:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3482:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3465:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1572,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1545,
                          "src": "3543:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1567,
                            "name": "collateralizedLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "3496:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1570,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1568,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3513:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3513:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3496:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4909,
                        "src": "3496:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3496:65:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3465:96:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1575,
                  "nodeType": "ExpressionStatement",
                  "src": "3465:96:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1579,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3626:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3626:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1581,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1545,
                        "src": "3638:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1576,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "3609:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5593,
                      "src": "3609:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:37:5"
                }
              ]
            },
            "documentation": {
              "id": 1543,
              "nodeType": "StructuredDocumentation",
              "src": "2838:199:5",
              "text": "@notice withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral\n@param _amount is the amount of LP tokens he wishes to withdraw*"
            },
            "functionSelector": "6112fe2e",
            "id": 1585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1545,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1585,
                  "src": "3071:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3070:17:5"
            },
            "returnParameters": {
              "id": 1547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3095:0:5"
            },
            "scope": 1639,
            "src": "3043:611:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1596,
              "nodeType": "Block",
              "src": "3820:42:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1593,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "3846:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3838:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1591,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3838:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3838:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1590,
                  "id": 1595,
                  "nodeType": "Return",
                  "src": "3831:23:5"
                }
              ]
            },
            "documentation": {
              "id": 1586,
              "nodeType": "StructuredDocumentation",
              "src": "3666:95:5",
              "text": "@notice getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
            },
            "functionSelector": "4c20ac74",
            "id": 1597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetAdd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3787:2:5"
            },
            "returnParameters": {
              "id": 1590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1589,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1597,
                  "src": "3811:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3810:9:5"
            },
            "scope": 1639,
            "src": "3767:95:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1608,
              "nodeType": "Block",
              "src": "3979:52:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1604,
                      "name": "collateralizedLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1457,
                      "src": "3997:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1606,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1605,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1599,
                      "src": "4014:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3997:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1603,
                  "id": 1607,
                  "nodeType": "Return",
                  "src": "3990:33:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f919b4bf",
            "id": 1609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralOfAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1609,
                  "src": "3899:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3899:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3898:18:5"
            },
            "returnParameters": {
              "id": 1603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1609,
                  "src": "3965:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3965:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3964:9:5"
            },
            "scope": 1639,
            "src": "3870:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1637,
              "nodeType": "Block",
              "src": "4116:133:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1623,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4156:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$1639",
                              "typeString": "contract WarpVaultLP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WarpVaultLP_$1639",
                              "typeString": "contract WarpVaultLP"
                            }
                          ],
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4148:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4148:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4148:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1613,
                        "src": "4163:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1626,
                          "name": "collateralizedLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1457,
                          "src": "4175:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1628,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1627,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1611,
                          "src": "4192:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4175:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1618,
                        "name": "LPtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "4127:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5644",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5625,
                      "src": "4127:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4127:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1630,
                  "nodeType": "ExpressionStatement",
                  "src": "4127:74:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1631,
                        "name": "collateralizedLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "4212:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1633,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1632,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4229:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4212:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4240:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4212:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1636,
                  "nodeType": "ExpressionStatement",
                  "src": "4212:29:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ac979028",
            "id": 1638,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1616,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1615,
                  "name": "onlyWC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1472,
                  "src": "4109:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4109:6:5"
              }
            ],
            "name": "liquidateAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1638,
                  "src": "4065:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4065:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "liquidator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1638,
                  "src": "4082:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4064:37:5"
            },
            "returnParameters": {
              "id": 1617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4116:0:5"
            },
            "scope": 1639,
            "src": "4039:210:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1640,
        "src": "1083:3171:5"
      }
    ],
    "src": "0:4256:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-05T19:31:07.751Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "details": "this function instantiates the lp token as a useable object and generates three WarpWrapperToken contracts to represent each type of stable coin this vault can hold. this also instantiates each of these contracts as a usable object in this contract giving this contract the ability to call their mint and burn functions.*",
        "params": {
          "_lp": "is the address of the lp token a specific Warp vault will represent",
          "_lpName": "is the name of the lp token"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "provideCollateral(uint256)": {
        "params": {
          "_amount": "is the amount of LP being collateralized*"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawCollateral(uint256)": {
        "params": {
          "_amount": "is the amount of LP tokens he wishes to withdraw*"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "constructor sets up token names and symbols for the WarpWrapperToken",
      "getAssetAdd()": {
        "notice": "getAssetAdd allows for easy retrieval of a WarpVaults LP token Adress*"
      },
      "provideCollateral(uint256)": {
        "notice": "provideCollateral allows a user to collateralize this contracts associated LP token"
      },
      "withdrawCollateral(uint256)": {
        "notice": "withdrawCollateral allows the user to trade in his WarpLP tokens for hiss underlying LP token collateral"
      }
    },
    "notice": "the WarpVaultLP contract is the main point of interface for a specific LP asset class and an end user in the Warp lending platform. This contract is responsible for distributing WarpWrapper tokens in exchange for stablecoin assets, holding and accounting of stablecoins and LP tokens and all associates lending/borrowing calculations for a specific Warp LP asset class. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library as well as Exponential and the InterestRateModel contracts from the coumpound protocol.*"
  }
}