{
  "contractName": "WarpVaultLPFactoryI",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_lp",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_lpName",
          "type": "string"
        }
      ],
      "name": "createWarpVaultLP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_lpName\",\"type\":\"string\"}],\"name\":\"createWarpVaultLP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createWarpVaultLP(uint256,address,string)\":{\"params\":{\"_lp\":\"is the address for the LP token this Warp Vault will manage\",\"_lpName\":\"is the name of the LP token (ex:wETH-wBTC)*\"}}}},\"userdoc\":{\"methods\":{\"createWarpVaultLP(uint256,address,string)\":{\"notice\":\"createWarpVaultLP allows the contract owner to create a new WarpVaultLP contract for a specific LP token\"}},\"notice\":\"The WarpVaultLPFactory contract is designed to produce individual WarpVaultLP contracts*\"}},\"settings\":{\"compilationTarget\":{\"/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpVaultLPFactoryI.sol\":\"WarpVaultLPFactoryI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpVaultLPFactoryI.sol\":{\"keccak256\":\"0xf5849fd6b35c18441170679f40d5719e32de944dac71c97d63461b95e3fdb8cc\",\"urls\":[\"bzz-raw://b4253b6d7ac815f83b640c51ead1919f248944b2458e1962a4386e5a18d823ad\",\"dweb:/ipfs/QmVr6ofcPcZYrypSFjjGzA4Fx6THvXHtRRCLErfDRMGppN\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.0;\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n/// @title WarpVaultLPFactoryI\r\n/// @author Christopher Dixon\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n/**\r\nThe WarpVaultLPFactory contract is designed to produce individual WarpVaultLP contracts\r\n**/\r\n\r\nabstract contract WarpVaultLPFactoryI {\r\n    /**\r\n      @notice createWarpVaultLP allows the contract owner to create a new WarpVaultLP contract for a specific LP token\r\n      @param _lp is the address for the LP token this Warp Vault will manage\r\n      @param _lpName is the name of the LP token (ex:wETH-wBTC)\r\n      @param _lpName is the name of the LP token (ex:wETH-wBTC)\r\n      **/\r\n    function createWarpVaultLP(uint256 _timelock, address _lp, string memory _lpName)\r\n        public\r\n        virtual\r\n        returns (address);\r\n\r\n}\r\n",
  "sourcePath": "E:\\dOrg\\warp\\Smart-Contracts\\contracts\\interfaces\\WarpVaultLPFactoryI.sol",
  "ast": {
    "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpVaultLPFactoryI.sol",
    "exportedSymbols": {
      "WarpVaultLPFactoryI": [
        7025
      ]
    },
    "id": 7026,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7011,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7012,
          "nodeType": "StructuredDocumentation",
          "src": "278:97:22",
          "text": "The WarpVaultLPFactory contract is designed to produce individual WarpVaultLP contracts*"
        },
        "fullyImplemented": false,
        "id": 7025,
        "linearizedBaseContracts": [
          7025
        ],
        "name": "WarpVaultLPFactoryI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 7013,
              "nodeType": "StructuredDocumentation",
              "src": "424:342:22",
              "text": "@notice createWarpVaultLP allows the contract owner to create a new WarpVaultLP contract for a specific LP token\n@param _lp is the address for the LP token this Warp Vault will manage\n@param _lpName is the name of the LP token (ex:wETH-wBTC)\n@param _lpName is the name of the LP token (ex:wETH-wBTC)*"
            },
            "functionSelector": "a8edf115",
            "id": 7024,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createWarpVaultLP",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7015,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7024,
                  "src": "799:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7017,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7024,
                  "src": "818:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7019,
                  "mutability": "mutable",
                  "name": "_lpName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7024,
                  "src": "831:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7018,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "798:55:22"
            },
            "returnParameters": {
              "id": 7023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7022,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7024,
                  "src": "905:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "904:9:22"
            },
            "scope": 7025,
            "src": "772:142:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 7026,
        "src": "379:540:22"
      }
    ],
    "src": "0:921:22"
  },
  "legacyAST": {
    "absolutePath": "/E/dOrg/warp/Smart-Contracts/contracts/interfaces/WarpVaultLPFactoryI.sol",
    "exportedSymbols": {
      "WarpVaultLPFactoryI": [
        7025
      ]
    },
    "id": 7026,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7011,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7012,
          "nodeType": "StructuredDocumentation",
          "src": "278:97:22",
          "text": "The WarpVaultLPFactory contract is designed to produce individual WarpVaultLP contracts*"
        },
        "fullyImplemented": false,
        "id": 7025,
        "linearizedBaseContracts": [
          7025
        ],
        "name": "WarpVaultLPFactoryI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 7013,
              "nodeType": "StructuredDocumentation",
              "src": "424:342:22",
              "text": "@notice createWarpVaultLP allows the contract owner to create a new WarpVaultLP contract for a specific LP token\n@param _lp is the address for the LP token this Warp Vault will manage\n@param _lpName is the name of the LP token (ex:wETH-wBTC)\n@param _lpName is the name of the LP token (ex:wETH-wBTC)*"
            },
            "functionSelector": "a8edf115",
            "id": 7024,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createWarpVaultLP",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7015,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7024,
                  "src": "799:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7017,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7024,
                  "src": "818:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7019,
                  "mutability": "mutable",
                  "name": "_lpName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7024,
                  "src": "831:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7018,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "798:55:22"
            },
            "returnParameters": {
              "id": 7023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7022,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7024,
                  "src": "905:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "904:9:22"
            },
            "scope": 7025,
            "src": "772:142:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 7026,
        "src": "379:540:22"
      }
    ],
    "src": "0:921:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-10T22:54:54.294Z",
  "devdoc": {
    "methods": {
      "createWarpVaultLP(uint256,address,string)": {
        "params": {
          "_lp": "is the address for the LP token this Warp Vault will manage",
          "_lpName": "is the name of the LP token (ex:wETH-wBTC)*"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createWarpVaultLP(uint256,address,string)": {
        "notice": "createWarpVaultLP allows the contract owner to create a new WarpVaultLP contract for a specific LP token"
      }
    },
    "notice": "The WarpVaultLPFactory contract is designed to produce individual WarpVaultLP contracts*"
  }
}