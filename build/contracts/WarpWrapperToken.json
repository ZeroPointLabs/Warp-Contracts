{
  "contractName": "WarpWrapperToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_SC",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_SC\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"params\":{\"_amount\":\"is the amount of token to be burnt*\",\"_from\":\"is the address where the tokens will be burnt\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"is the amount of token they will receive*\",\"_to\":\"is the address that will receive the new tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"burn(address,uint256)\":{\"notice\":\"burn is an only owner function that allows the owner to burn  tokens from an input account\"},\"constructor\":\"constructor sets up token names and symbols for the WarpWrapperToken\",\"mint(address,uint256)\":{\"notice\":\"mint is an only owner function that allows the owner to mint new tokens to an input account\"}},\"notice\":\"the WarpWrapperToken contract is designed  as a token Wrapper to represent ownership of stablecoins added to a specific WarpVault. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library.*\"}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpWrapperToken.sol\":\"WarpWrapperToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpWrapperToken.sol\":{\"keccak256\":\"0x35de3d220b33e201d27d423fcd687508e91b091cef1c860465e0ff2195cbd4eb\",\"urls\":[\"bzz-raw://dde5700203f3273038e1c9accf460b5749c546983390507bf9d534285679bb09\",\"dweb:/ipfs/QmPBWxpq9EfHeig5Ho6WpvcMvyekgk9aeyG2cpCWx1Cezp\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100eb5760003560e01c8063715018a611610092578063715018a61461029b5780638da5cb5b146102a357806395d89b41146102c75780639dc29fac146102cf578063a457c2d7146102fb578063a9059cbb14610327578063dd62ed3e14610353578063e9cbd82214610381578063f2fde38b14610389576100eb565b806306fdde03146100f0578063095ea7b31461016d57806318160ddd146101ad57806323b872dd146101c7578063313ce567146101fd578063395093511461021b57806340c10f191461024757806370a0823114610275575b600080fd5b6100f86103af565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013257818101518382015260200161011a565b50505050905090810190601f16801561015f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101996004803603604081101561018357600080fd5b506001600160a01b038135169060200135610445565b604080519115158252519081900360200190f35b6101b5610462565b60408051918252519081900360200190f35b610199600480360360608110156101dd57600080fd5b506001600160a01b03813581169160208101359091169060400135610468565b6102056104f5565b6040805160ff9092168252519081900360200190f35b6101996004803603604081101561023157600080fd5b506001600160a01b0381351690602001356104fe565b6102736004803603604081101561025d57600080fd5b506001600160a01b038135169060200135610552565b005b6101b56004803603602081101561028b57600080fd5b50356001600160a01b03166105b8565b6102736105d3565b6102ab610675565b604080516001600160a01b039092168252519081900360200190f35b6100f8610684565b610273600480360360408110156102e557600080fd5b506001600160a01b0381351690602001356106e5565b6101996004803603604081101561031157600080fd5b506001600160a01b038135169060200135610747565b6101996004803603604081101561033d57600080fd5b506001600160a01b0381351690602001356107b5565b6101b56004803603604081101561036957600080fd5b506001600160a01b03813581169160200135166107c9565b6102ab6107f4565b6102736004803603602081101561039f57600080fd5b50356001600160a01b0316610808565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b5050505050905090565b6000610459610452610900565b8484610904565b50600192915050565b60035490565b60006104758484846109f0565b6104eb84610481610900565b6104e685604051806060016040528060288152602001610f1c602891396001600160a01b038a166000908152600260205260408120906104bf610900565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b4716565b610904565b5060019392505050565b60065460ff1690565b600061045961050b610900565b846104e6856002600061051c610900565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bde16565b61055a610900565b6000546001600160a01b039081169116146105aa576040805162461bcd60e51b81526020600482018190526024820152600080516020610f44833981519152604482015290519081900360640190fd5b6105b48282610c3f565b5050565b6001600160a01b031660009081526001602052604090205490565b6105db610900565b6000546001600160a01b0390811691161461062b576040805162461bcd60e51b81526020600482018190526024820152600080516020610f44833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561043b5780601f106104105761010080835404028352916020019161043b565b6106ed610900565b6000546001600160a01b0390811691161461073d576040805162461bcd60e51b81526020600482018190526024820152600080516020610f44833981519152604482015290519081900360640190fd5b6105b48282610d2b565b6000610459610754610900565b846104e685604051806060016040528060258152602001610fee602591396002600061077e610900565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b4716565b60006104596107c2610900565b84846109f0565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60065461010090046001600160a01b031681565b610810610900565b6000546001600160a01b03908116911614610860576040805162461bcd60e51b81526020600482018190526024820152600080516020610f44833981519152604482015290519081900360640190fd5b6001600160a01b0381166108a55760405162461bcd60e51b8152600401808060200182810382526026815260200180610eae6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b0383166109495760405162461bcd60e51b8152600401808060200182810382526024815260200180610fca6024913960400191505060405180910390fd5b6001600160a01b03821661098e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610ed46022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a355760405162461bcd60e51b8152600401808060200182810382526025815260200180610fa56025913960400191505060405180910390fd5b6001600160a01b038216610a7a5760405162461bcd60e51b8152600401808060200182810382526023815260200180610e696023913960400191505060405180910390fd5b610a85838383610e21565b610ac881604051806060016040528060268152602001610ef6602691396001600160a01b038616600090815260016020526040902054919063ffffffff610b4716565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610afd908263ffffffff610bde16565b6001600160a01b038084166000818152600160209081526040918290209490945580518581529051919392871692600080516020610f6483398151915292918290030190a3505050565b60008184841115610bd65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b9b578181015183820152602001610b83565b50505050905090810190601f168015610bc85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c38576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610c9a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ca660008383610e21565b600354610cb9908263ffffffff610bde16565b6003556001600160a01b038216600090815260016020526040902054610ce5908263ffffffff610bde16565b6001600160a01b0383166000818152600160209081526040808320949094558351858152935192939192600080516020610f648339815191529281900390910190a35050565b6001600160a01b038216610d705760405162461bcd60e51b8152600401808060200182810382526021815260200180610f846021913960400191505060405180910390fd5b610d7c82600083610e21565b610dbf81604051806060016040528060228152602001610e8c602291396001600160a01b038516600090815260016020526040902054919063ffffffff610b4716565b6001600160a01b038316600090815260016020526040902055600354610deb908263ffffffff610e2616565b6003556040805182815290516000916001600160a01b03851691600080516020610f648339815191529181900360200190a35050565b505050565b6000610c3883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b4756fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220387c0777770488ed7f86aa3e731036b6c4b3b4d726175a4d6d3e263566c3a7ba64736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "623:1006:14:-:0;;;789:181;5:9:-1;2:2;;;27:1;24;17:12;2:2;789:181:14;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;789:181:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;285:43;;;-1:-1;;;244:29;;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;789:181:14;;420:4:-1;411:14;;;;789:181:14;;;;;411:14:-1;789:181:14;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;789:181:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;285:43;;;-1:-1;;;244:29;;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;789:181:14;;420:4:-1;411:14;;;;789:181:14;;;;;411:14:-1;789:181:14;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;789:181:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:12;925:10;865:17:28;885:12;:10;;;:12;;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:28;-1:-1:-1;;;;;907:18:28;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:28;940:43;;907:6;;940:43;-1:-1:-1;2085:12:30;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2107:16:30;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:30;:14;;-1:-1:-1;;;;;947:16:14;;;::::1;-1:-1:-1::0;947:16:14::1;-1:-1:-1::0;;;;;;;;2133:14:30;;;2145:2;2133:14;947:16:14;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;623:1006:14;;-1:-1:-1;;623:1006:14;590:104:27;677:10;590:104;;:::o;623:1006:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;623:1006:14;;;-1:-1:-1;623:1006:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "623:1006:14:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;623:1006:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2219:81:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2219:81:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4255:166:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;4881:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4881:317:30;;;;;;;;;;;;;;;;;:::i;3121:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5593:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5593:215:30;;;;;;;;:::i;1203:97:14:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1203:97:14;;;;;;;;:::i;:::-;;3418:117:30;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3418:117:30;-1:-1:-1;;;;;3418:117:30;;:::i;1689:145:28:-;;;:::i;1066:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1066:77:28;;;;;;;;;;;;;;2413:85:30;;;:::i;1526:101:14:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1526:101:14;;;;;;;;:::i;6295:266:30:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6295:266:30;;;;;;;;:::i;3738:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3738:172:30;;;;;;;;:::i;3968:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3968:149:30;;;;;;;;;;:::i;673:25:14:-;;;:::i;1983:240:28:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1983:240:28;-1:-1:-1;;;;;1983:240:28;;:::i;2219:81:30:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:30;4255:166;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;4881:317::-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:30;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:30;;;;;;;;;;;;-1:-1:-1;5080:33:30;;;;:37;:89::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:30;4881:317;;;;;:::o;3121:81::-;3186:9;;;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:30;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:30;;;:34;;;;;;;;;;;:38;:50::i;1203:97:14:-;1280:12:28;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:28;;;;;;;;;;;;;;;1274:19:14::1;1280:3;1285:7;1274:5;:19::i;:::-;1203:97:::0;;:::o;3418:117:30:-;-1:-1:-1;;;;;3510:18:30;3484:7;3510:18;;;-1:-1:-1;3510:18:30;;;;;;;3418:117::o;1689:145:28:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:28;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:28;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:28::1;::::0;;1689:145::o;1066:77::-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:28;;1066:77::o;2413:85:30:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;1526:101:14;1280:12:28;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:28;;;;;;;;;;;;;;;1599:21:14::1;1605:5;1612:7;1599:5;:21::i;6295:266:30:-:0;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:30;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:30;;;:34;;;;;;;;;;;;:38;:96::i;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;3968:149::-;-1:-1:-1;;;;;4083:18:30;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;673:25:14:-;;;;;;-1:-1:-1;;;;;673:25:14;;:::o;1983:240:28:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:28;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:28;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:28::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:28;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:28::1;-1:-1:-1::0;;;;;2199:17:28;;;::::1;::::0;;;::::1;::::0;;1983:240::o;590:104:27:-;677:10;590:104;:::o;9357:340:30:-;-1:-1:-1;;;;;9458:19:30;;9450:68;;;;-1:-1:-1;;;9450:68:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9536:21:30;;9528:68;;;;-1:-1:-1;;;9528:68:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9607:18:30;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9658:32;;;;;;;;;;;;;;;;;9357:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:30;;7132:70;;;;-1:-1:-1;;;7132:70:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7220:23:30;;7212:71;;;;-1:-1:-1;;;7212:71:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:30;;;;;;-1:-1:-1;7372:17:30;;;;;;;;:21;:71::i;:::-;-1:-1:-1;;;;;7352:17:30;;;;;;;-1:-1:-1;7352:17:30;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:24;:32::i;:::-;-1:-1:-1;;;;;7453:20:30;;;;;;;-1:-1:-1;7453:20:30;;;;;;;;:55;;;;7523:35;;;;;;;-1:-1:-1;;7453:20:30;;7523:35;;;;;;;;7453:20;;-1:-1:-1;7453:20:30;-1:-1:-1;;;;;7523:35:30;;;;;;;;7035:530;;;:::o;1746:187:29:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:29;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:29:o;7835:370:30:-;-1:-1:-1;;;;;7918:21:30;;7910:65;;;;;-1:-1:-1;;;7910:65:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:12;;:24;;8078:6;8061:24;:16;:24;:::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:30;;;;;;-1:-1:-1;8116:18:30;;;;;;:30;;8139:6;8116:22;:30::i;:::-;-1:-1:-1;;;;;8095:18:30;;;;;;-1:-1:-1;8095:18:30;;;;;;;;:51;;;;8161:37;;;;;;;-1:-1:-1;;8095:18:30;;;;;;;-1:-1:-1;8095:18:30;-1:-1:-1;;;;;8161:37:30;;;;;;;;;7835:370;;:::o;8524:410::-;-1:-1:-1;;;;;8607:21:30;;8599:67;;;;-1:-1:-1;;;8599:67:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:30;;;;;;-1:-1:-1;8758:18:30;;;;;;;;:22;:68::i;:::-;-1:-1:-1;;;;;8737:18:30;;;;;;-1:-1:-1;8737:18:30;;;;;:89;8851:12;;:24;;8868:6;8851:16;:24::i;:::-;8836:12;:39;8890:37;;;;;;;;8916:1;;-1:-1:-1;;;;;8890:37:30;;;-1:-1:-1;;;;;;;;;;;8890:37:30;;;;;;;;8524:410;;:::o;10695:92::-;;;;:::o;1321:134:29:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "pragma solidity ^0.6.2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////\n/// @title WarpWrapperToken\n/// @author Christopher Dixon\n////////////////////////////////////////////////////////////////////////////////////////////\n/**\n@notice the WarpWrapperToken contract is designed  as a token Wrapper to represent ownership of stablecoins added to a specific\n        WarpVault. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library.\n**/\ncontract WarpWrapperToken is Ownable, ERC20 {\n    address public stablecoin;\n\n    ///@notice constructor sets up token names and symbols for the WarpWrapperToken\n    constructor(\n        address _SC,\n        string memory _tokenName,\n        string memory _tokenSymbol\n    ) public ERC20(_tokenSymbol, _tokenName) {\n        stablecoin = _SC;\n    }\n\n    /**\n@notice mint is an only owner function that allows the owner to mint new tokens to an input account\n@param _to is the address that will receive the new tokens\n@param _amount is the amount of token they will receive\n**/\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n    }\n\n    /**\n@notice burn is an only owner function that allows the owner to burn  tokens from an input account\n@param _from is the address where the tokens will be burnt\n@param _amount is the amount of token to be burnt\n**/\n    function burn(address _from, uint256 _amount) public onlyOwner {\n        _burn(_from, _amount);\n    }\n}\n",
  "sourcePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
    "exportedSymbols": {
      "WarpWrapperToken": [
        4640
      ]
    },
    "id": 4641,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4579,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4580,
        "nodeType": "ImportDirective",
        "scope": 4641,
        "sourceUnit": 6801,
        "src": "25:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4581,
        "nodeType": "ImportDirective",
        "scope": 4641,
        "sourceUnit": 7504,
        "src": "78:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4583,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6800,
              "src": "652:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6800",
                "typeString": "contract Ownable"
              }
            },
            "id": 4584,
            "nodeType": "InheritanceSpecifier",
            "src": "652:7:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4585,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7503,
              "src": "661:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$7503",
                "typeString": "contract ERC20"
              }
            },
            "id": 4586,
            "nodeType": "InheritanceSpecifier",
            "src": "661:5:14"
          }
        ],
        "contractDependencies": [
          6691,
          6800,
          7503,
          7581
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4582,
          "nodeType": "StructuredDocumentation",
          "src": "379:243:14",
          "text": "@notice the WarpWrapperToken contract is designed  as a token Wrapper to represent ownership of stablecoins added to a specific\nWarpVault. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library.*"
        },
        "fullyImplemented": true,
        "id": 4640,
        "linearizedBaseContracts": [
          4640,
          7503,
          7581,
          6800,
          6691
        ],
        "name": "WarpWrapperToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e9cbd822",
            "id": 4588,
            "mutability": "mutable",
            "name": "stablecoin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4640,
            "src": "673:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4587,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "673:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4606,
              "nodeType": "Block",
              "src": "937:33:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4602,
                      "name": "stablecoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4588,
                      "src": "947:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4603,
                      "name": "_SC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4591,
                      "src": "960:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "947:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4605,
                  "nodeType": "ExpressionStatement",
                  "src": "947:16:14"
                }
              ]
            },
            "documentation": {
              "id": 4589,
              "nodeType": "StructuredDocumentation",
              "src": "705:79:14",
              "text": "@notice constructor sets up token names and symbols for the WarpWrapperToken"
            },
            "id": 4607,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4598,
                    "name": "_tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4595,
                    "src": "911:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4599,
                    "name": "_tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4593,
                    "src": "925:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4600,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4597,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7503,
                  "src": "905:5:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$7503_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "905:31:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4591,
                  "mutability": "mutable",
                  "name": "_SC",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4607,
                  "src": "810:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4593,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4607,
                  "src": "831:24:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4595,
                  "mutability": "mutable",
                  "name": "_tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4607,
                  "src": "865:26:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4594,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "800:97:14"
            },
            "returnParameters": {
              "id": 4601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "937:0:14"
            },
            "scope": 4640,
            "src": "789:181:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4622,
              "nodeType": "Block",
              "src": "1264:36:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4618,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4610,
                        "src": "1280:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4619,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4612,
                        "src": "1285:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4617,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7379,
                      "src": "1274:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4621,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:19:14"
                }
              ]
            },
            "documentation": {
              "id": 4608,
              "nodeType": "StructuredDocumentation",
              "src": "976:222:14",
              "text": "@notice mint is an only owner function that allows the owner to mint new tokens to an input account\n@param _to is the address that will receive the new tokens\n@param _amount is the amount of token they will receive*"
            },
            "functionSelector": "40c10f19",
            "id": 4623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4615,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4614,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6749,
                  "src": "1254:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1254:9:14"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4610,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4623,
                  "src": "1217:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4612,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4623,
                  "src": "1230:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1216:30:14"
            },
            "returnParameters": {
              "id": 4616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:0:14"
            },
            "scope": 4640,
            "src": "1203:97:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4638,
              "nodeType": "Block",
              "src": "1589:38:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4634,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4626,
                        "src": "1605:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4635,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4628,
                        "src": "1612:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4633,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7435,
                      "src": "1599:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:21:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4637,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:21:14"
                }
              ]
            },
            "documentation": {
              "id": 4624,
              "nodeType": "StructuredDocumentation",
              "src": "1306:215:14",
              "text": "@notice burn is an only owner function that allows the owner to burn  tokens from an input account\n@param _from is the address where the tokens will be burnt\n@param _amount is the amount of token to be burnt*"
            },
            "functionSelector": "9dc29fac",
            "id": 4639,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4631,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4630,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6749,
                  "src": "1579:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1579:9:14"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4626,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4639,
                  "src": "1540:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4628,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4639,
                  "src": "1555:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1539:32:14"
            },
            "returnParameters": {
              "id": 4632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:0:14"
            },
            "scope": 4640,
            "src": "1526:101:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4641,
        "src": "623:1006:14"
      }
    ],
    "src": "0:1630:14"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/Warp/Smart-Contracts/contracts/WarpWrapperToken.sol",
    "exportedSymbols": {
      "WarpWrapperToken": [
        4640
      ]
    },
    "id": 4641,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4579,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4580,
        "nodeType": "ImportDirective",
        "scope": 4641,
        "sourceUnit": 6801,
        "src": "25:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4581,
        "nodeType": "ImportDirective",
        "scope": 4641,
        "sourceUnit": 7504,
        "src": "78:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4583,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6800,
              "src": "652:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6800",
                "typeString": "contract Ownable"
              }
            },
            "id": 4584,
            "nodeType": "InheritanceSpecifier",
            "src": "652:7:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4585,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7503,
              "src": "661:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$7503",
                "typeString": "contract ERC20"
              }
            },
            "id": 4586,
            "nodeType": "InheritanceSpecifier",
            "src": "661:5:14"
          }
        ],
        "contractDependencies": [
          6691,
          6800,
          7503,
          7581
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4582,
          "nodeType": "StructuredDocumentation",
          "src": "379:243:14",
          "text": "@notice the WarpWrapperToken contract is designed  as a token Wrapper to represent ownership of stablecoins added to a specific\nWarpVault. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library.*"
        },
        "fullyImplemented": true,
        "id": 4640,
        "linearizedBaseContracts": [
          4640,
          7503,
          7581,
          6800,
          6691
        ],
        "name": "WarpWrapperToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e9cbd822",
            "id": 4588,
            "mutability": "mutable",
            "name": "stablecoin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4640,
            "src": "673:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4587,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "673:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4606,
              "nodeType": "Block",
              "src": "937:33:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4602,
                      "name": "stablecoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4588,
                      "src": "947:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4603,
                      "name": "_SC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4591,
                      "src": "960:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "947:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4605,
                  "nodeType": "ExpressionStatement",
                  "src": "947:16:14"
                }
              ]
            },
            "documentation": {
              "id": 4589,
              "nodeType": "StructuredDocumentation",
              "src": "705:79:14",
              "text": "@notice constructor sets up token names and symbols for the WarpWrapperToken"
            },
            "id": 4607,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4598,
                    "name": "_tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4595,
                    "src": "911:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4599,
                    "name": "_tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4593,
                    "src": "925:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4600,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4597,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7503,
                  "src": "905:5:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$7503_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "905:31:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4591,
                  "mutability": "mutable",
                  "name": "_SC",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4607,
                  "src": "810:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4593,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4607,
                  "src": "831:24:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4595,
                  "mutability": "mutable",
                  "name": "_tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4607,
                  "src": "865:26:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4594,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "800:97:14"
            },
            "returnParameters": {
              "id": 4601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "937:0:14"
            },
            "scope": 4640,
            "src": "789:181:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4622,
              "nodeType": "Block",
              "src": "1264:36:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4618,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4610,
                        "src": "1280:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4619,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4612,
                        "src": "1285:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4617,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7379,
                      "src": "1274:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4621,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:19:14"
                }
              ]
            },
            "documentation": {
              "id": 4608,
              "nodeType": "StructuredDocumentation",
              "src": "976:222:14",
              "text": "@notice mint is an only owner function that allows the owner to mint new tokens to an input account\n@param _to is the address that will receive the new tokens\n@param _amount is the amount of token they will receive*"
            },
            "functionSelector": "40c10f19",
            "id": 4623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4615,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4614,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6749,
                  "src": "1254:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1254:9:14"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4610,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4623,
                  "src": "1217:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4612,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4623,
                  "src": "1230:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1216:30:14"
            },
            "returnParameters": {
              "id": 4616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:0:14"
            },
            "scope": 4640,
            "src": "1203:97:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4638,
              "nodeType": "Block",
              "src": "1589:38:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4634,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4626,
                        "src": "1605:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4635,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4628,
                        "src": "1612:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4633,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7435,
                      "src": "1599:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:21:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4637,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:21:14"
                }
              ]
            },
            "documentation": {
              "id": 4624,
              "nodeType": "StructuredDocumentation",
              "src": "1306:215:14",
              "text": "@notice burn is an only owner function that allows the owner to burn  tokens from an input account\n@param _from is the address where the tokens will be burnt\n@param _amount is the amount of token to be burnt*"
            },
            "functionSelector": "9dc29fac",
            "id": 4639,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4631,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4630,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6749,
                  "src": "1579:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1579:9:14"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4626,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4639,
                  "src": "1540:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4628,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4639,
                  "src": "1555:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1539:32:14"
            },
            "returnParameters": {
              "id": 4632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:0:14"
            },
            "scope": 4640,
            "src": "1526:101:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4641,
        "src": "623:1006:14"
      }
    ],
    "src": "0:1630:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-29T18:17:07.838Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "params": {
          "_amount": "is the amount of token to be burnt*",
          "_from": "is the address where the tokens will be burnt"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "params": {
          "_amount": "is the amount of token they will receive*",
          "_to": "is the address that will receive the new tokens"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(address,uint256)": {
        "notice": "burn is an only owner function that allows the owner to burn  tokens from an input account"
      },
      "constructor": "constructor sets up token names and symbols for the WarpWrapperToken",
      "mint(address,uint256)": {
        "notice": "mint is an only owner function that allows the owner to mint new tokens to an input account"
      }
    },
    "notice": "the WarpWrapperToken contract is designed  as a token Wrapper to represent ownership of stablecoins added to a specific WarpVault. This contract inherits Ownership and ERC20 functionality from the Open Zeppelin Library.*"
  }
}