{
  "contractName": "WarpNFTLegendary",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_URI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "URI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "idTracker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mintNewNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newURI",
          "type": "string"
        }
      ],
      "name": "updateAllURIs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "updateTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_URI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"idTracker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintNewNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newURI\",\"type\":\"string\"}],\"name\":\"updateAllURIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"updateTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"constructor\":{\"details\":\"assuming all NFT URI metadata is based on a URL he baseURI would be something like https://*\",\"params\":{\"_URI\":\"is a base address added to the front of every input tokenURI\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintNewNFT(address)\":{\"params\":{\"_to\":\"is the address the NFT is being minted to*\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAllURIs(string)\":{\"params\":{\"_newURI\":\"is the new URI for the tokens*\"}},\"updateTokenURI(uint256)\":{\"params\":{\"_tokenID\":\"is the ID of the token being upgraded*\"}}}},\"userdoc\":{\"methods\":{\"constructor\":\"the constructor function is fired only once during contract deployment\",\"mintNewNFT(address)\":{\"notice\":\"mintNewNFT allows the owner of this contract to mint an input address a newNFT\"},\"updateAllURIs(string)\":{\"notice\":\"updateAllURIs allows the owner of this contract to manually update the token URI\"},\"updateTokenURI(uint256)\":{\"notice\":\"updateTokenURI allows the owner of a token to update his tokens URI after the owner sets a new one for use\"}}}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/Warp/nft-distribute/contracts/WarpNFTLegendary.sol\":\"WarpNFTLegendary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/Warp/nft-distribute/contracts/WarpNFTLegendary.sol\":{\"keccak256\":\"0x273949ffb602c88f46518529fe845da6863950cc8abb6c29f25f5f58b52ad000\",\"urls\":[\"bzz-raw://08cd776a83fc5160e270cfde9c955143ca25786d45ce361863b6f4b2d1a596ec\",\"dweb:/ipfs/QmSC9HWzNTmBsy6Vt8RbbB4uyb85fTLkGTc7Z5e9jUAokK\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5a3de7f7f76e47a071195cf42e2a702265694a6b32037de709463bd8ad784fb5\",\"urls\":[\"bzz-raw://678cbad1f972a4d8c9d47bc39fa6d39560b4fc143c8d9c812a63fe99bb13062e\",\"dweb:/ipfs/QmUhLDvUndcbQLakDNg9G4UXz8UPzRqC6S3rWGKupB6DYs\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5a9f5c29bd7cf0b345e14d97d5f685f68c07e1e5bfdd47e5bcec045e81b0b6ac\",\"urls\":[\"bzz-raw://321cbaa1412fc8d013d8ad3fb5f98c0db7401ddacfb09b70828ea2cebe37397e\",\"dweb:/ipfs/Qmd3Hoc71w6rmxAR6A5VKW9at677VP1L5KDcJnyvu4ksu3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x16b5422892fbdd9648f12e59de85b42efd57d76b6d6b2358cb46e0f6d4a71aaf\",\"urls\":[\"bzz-raw://4ef38821a4ee756757dc1ce9074ef6096d1b5c760627e92c0852d788dc636ea7\",\"dweb:/ipfs/QmdGwP6BtRMcp4VVJUWwTmXEjYmL52A8WZpBdFJYmzc9pJ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200266b3803806200266b833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601281526020017115d85c9c08131959d95b99185c9e4813919560721b8152506040518060400160405280600581526020016415d313919560da1b8152506000620001486200024e60201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620001ad6301ffc9a760e01b6001600160e01b036200025316565b8151620001c2906007906020850190620002db565b508051620001d8906008906020840190620002db565b50620001f46380ac58cd60e01b6001600160e01b036200025316565b6200020f635b5e139f60e01b6001600160e01b036200025316565b6200022a63780e9d6360e01b6001600160e01b036200025316565b505080516200024190600c906020840190620002db565b50506000600b556200037d565b335b90565b6001600160e01b03198082161415620002b3576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031e57805160ff19168380011785556200034e565b828001600101855582156200034e579182015b828111156200034e57825182559160200191906001019062000331565b506200035c92915062000360565b5090565b6200025091905b808211156200035c576000815560010162000367565b6122de806200038d6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636352211e116100de5780638da5cb5b11610097578063b88d4fde11610071578063b88d4fde146104f0578063c87b56dd146105b6578063e985e9c5146105d3578063f2fde38b1461060157610173565b80638da5cb5b146104b257806395d89b41146104ba578063a22cb465146104c257610173565b80636352211e1461039357806365568ecb146103b057806369e295e8146103d65780636c0360eb1461047c57806370a0823114610484578063715018a6146104aa57610173565b80631b7fe6b6116101305780631b7fe6b6146102b957806323b872dd146102c15780632f745c59146102f757806342842e0e146103235780634f6ccce7146103595780635bca20161461037657610173565b806301ffc9a71461017857806306fdde03146101b3578063081812fc14610230578063095ea7b3146102695780631141d7de1461029757806318160ddd1461029f575b600080fd5b61019f6004803603602081101561018e57600080fd5b50356001600160e01b031916610627565b604080519115158252519081900360200190f35b6101bb61064a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f55781810151838201526020016101dd565b50505050905090810190601f1680156102225780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024d6004803603602081101561024657600080fd5b50356106e1565b604080516001600160a01b039092168252519081900360200190f35b6102956004803603604081101561027f57600080fd5b506001600160a01b038135169060200135610743565b005b6101bb61081e565b6102a76108ac565b60408051918252519081900360200190f35b6102a76108bd565b610295600480360360608110156102d757600080fd5b506001600160a01b038135811691602081013590911690604001356108c3565b6102a76004803603604081101561030d57600080fd5b506001600160a01b03813516906020013561091a565b6102956004803603606081101561033957600080fd5b506001600160a01b0381358116916020810135909116906040013561094b565b6102a76004803603602081101561036f57600080fd5b5035610966565b6102956004803603602081101561038c57600080fd5b5035610982565b61024d600480360360208110156103a957600080fd5b5035610a3a565b610295600480360360208110156103c657600080fd5b50356001600160a01b0316610a68565b610295600480360360208110156103ec57600080fd5b81019060208101813564010000000081111561040757600080fd5b82018360208201111561041957600080fd5b8035906020019184600183028401116401000000008311171561043b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b3e945050505050565b6101bb610bad565b6102a76004803603602081101561049a57600080fd5b50356001600160a01b0316610c0e565b610295610c76565b61024d610d18565b6101bb610d27565b610295600480360360408110156104d857600080fd5b506001600160a01b0381351690602001351515610d88565b6102956004803603608081101561050657600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561054157600080fd5b82018360208201111561055357600080fd5b8035906020019184600183028401116401000000008311171561057557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e8d945050505050565b6101bb600480360360208110156105cc57600080fd5b5035610eeb565b61019f600480360360408110156105e957600080fd5b506001600160a01b0381358116916020013516611192565b6102956004803603602081101561061757600080fd5b50356001600160a01b03166111c0565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106d65780601f106106ab576101008083540402835291602001916106d6565b820191906000526020600020905b8154815290600101906020018083116106b957829003601f168201915b505050505090505b90565b60006106ec826112b8565b6107275760405162461bcd60e51b815260040180806020018281038252602c815260200180612187602c913960400191505060405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061074e82610a3a565b9050806001600160a01b0316836001600160a01b031614156107a15760405162461bcd60e51b81526004018080602001828103825260218152602001806122576021913960400191505060405180910390fd5b806001600160a01b03166107b36112cb565b6001600160a01b031614806107d457506107d4816107cf6112cb565b611192565b61080f5760405162461bcd60e51b81526004018080602001828103825260388152602001806120da6038913960400191505060405180910390fd5b61081983836112cf565b505050565b600c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108a45780601f10610879576101008083540402835291602001916108a4565b820191906000526020600020905b81548152906001019060200180831161088757829003601f168201915b505050505081565b60006108b8600361133d565b905090565b600b5481565b6108d46108ce6112cb565b82611348565b61090f5760405162461bcd60e51b81526004018080602001828103825260318152602001806122786031913960400191505060405180910390fd5b6108198383836113ec565b6001600160a01b0382166000908152600260205260408120610942908363ffffffff61154a16565b90505b92915050565b61081983838360405180602001604052806000815250610e8d565b60008061097a60038463ffffffff61155616565b509392505050565b3361098c82610a3a565b6001600160a01b03161461099f57600080fd5b600c805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152610a3793859391929091830182828015610a2d5780601f10610a0257610100808354040283529160200191610a2d565b820191906000526020600020905b815481529060010190602001808311610a1057829003601f168201915b5050505050611572565b50565b60006109458260405180606001604052806029815260200161213c602991396003919063ffffffff6115d516565b610a706112cb565b6000546001600160a01b03908116911614610ac0576040805162461bcd60e51b815260206004820181905260248201526000805160206121df833981519152604482015290519081900360640190fd5b610acc81600b546115ec565b600b54600c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152610b32949390929091830182828015610a2d5780601f10610a0257610100808354040283529160200191610a2d565b50600b80546001019055565b610b466112cb565b6000546001600160a01b03908116911614610b96576040805162461bcd60e51b815260206004820181905260248201526000805160206121df833981519152604482015290519081900360640190fd5b8051610ba990600c906020840190611f77565b5050565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106d65780601f106106ab576101008083540402835291602001916106d6565b60006001600160a01b038216610c555760405162461bcd60e51b815260040180806020018281038252602a815260200180612112602a913960400191505060405180910390fd5b6001600160a01b03821660009081526002602052604090206109459061133d565b610c7e6112cb565b6000546001600160a01b03908116911614610cce576040805162461bcd60e51b815260206004820181905260248201526000805160206121df833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106d65780601f106106ab576101008083540402835291602001916106d6565b610d906112cb565b6001600160a01b0316826001600160a01b03161415610df6576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060066000610e036112cb565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610e476112cb565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610e9e610e986112cb565b83611348565b610ed95760405162461bcd60e51b81526004018080602001828103825260318152602001806122786031913960400191505060405180910390fd5b610ee584848484611606565b50505050565b6060610ef6826112b8565b610f315760405162461bcd60e51b815260040180806020018281038252602f815260200180612228602f913960400191505060405180910390fd5b60008281526009602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610fc65780601f10610f9b57610100808354040283529160200191610fc6565b820191906000526020600020905b815481529060010190602001808311610fa957829003601f168201915b5050600a5493945050505060026000196101006001841615020190911604610fef579050610645565b8051156110c057600a8160405160200180838054600181600116156101000203166002900480156110575780601f10611035576101008083540402835291820191611057565b820191906000526020600020905b815481529060010190602001808311611043575b5050825160208401908083835b602083106110835780518252601f199092019160209182019101611064565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610645565b600a6110cb84611658565b60405160200180838054600181600116156101000203166002900480156111295780601f10611107576101008083540402835291820191611129565b820191906000526020600020905b815481529060010190602001808311611115575b5050825160208401908083835b602083106111555780518252601f199092019160209182019101611136565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6111c86112cb565b6000546001600160a01b03908116911614611218576040805162461bcd60e51b815260206004820181905260248201526000805160206121df833981519152604482015290519081900360640190fd5b6001600160a01b03811661125d5760405162461bcd60e51b81526004018080602001828103825260268152602001806120646026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061094560038363ffffffff61173316565b3390565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061130482610a3a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109458261173f565b6000611353826112b8565b61138e5760405162461bcd60e51b815260040180806020018281038252602c8152602001806120ae602c913960400191505060405180910390fd5b600061139983610a3a565b9050806001600160a01b0316846001600160a01b031614806113d45750836001600160a01b03166113c9846106e1565b6001600160a01b0316145b806113e457506113e48185611192565b949350505050565b826001600160a01b03166113ff82610a3a565b6001600160a01b0316146114445760405162461bcd60e51b81526004018080602001828103825260298152602001806121ff6029913960400191505060405180910390fd5b6001600160a01b0382166114895760405162461bcd60e51b815260040180806020018281038252602481526020018061208a6024913960400191505060405180910390fd5b611494838383610819565b61149f6000826112cf565b6001600160a01b03831660009081526002602052604090206114c7908263ffffffff61174316565b506001600160a01b03821660009081526002602052604090206114f0908263ffffffff61174f16565b506115036003828463ffffffff61175b16565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006109428383611771565b600080808061156586866117d5565b9097909650945050505050565b61157b826112b8565b6115b65760405162461bcd60e51b815260040180806020018281038252602c8152602001806121b3602c913960400191505060405180910390fd5b6000828152600960209081526040909120825161081992840190611f77565b60006115e2848484611850565b90505b9392505050565b610ba982826040518060200160405280600081525061191a565b6116118484846113ec565b61161d8484848461196c565b610ee55760405162461bcd60e51b81526004018080602001828103825260328152602001806120326032913960400191505060405180910390fd5b60608161167d57506040805180820190915260018152600360fc1b6020820152610645565b8160005b811561169557600101600a82049150611681565b60608167ffffffffffffffff811180156116ae57600080fd5b506040519080825280601f01601f1916602001820160405280156116d9576020820181803683370190505b50859350905060001982015b831561172a57600a840660300160f81b8282806001900393508151811061170857fe5b60200101906001600160f81b031916908160001a905350600a840493506116e5565b50949350505050565b60006109428383611aec565b5490565b60006109428383611b04565b60006109428383611bca565b60006115e284846001600160a01b038516611c14565b815460009082106117b35760405162461bcd60e51b81526004018080602001828103825260228152602001806120106022913960400191505060405180910390fd5b8260000182815481106117c257fe5b9060005260206000200154905092915050565b8154600090819083106118195760405162461bcd60e51b81526004018080602001828103825260228152602001806121656022913960400191505060405180910390fd5b600084600001848154811061182a57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816118eb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118b0578181015183820152602001611898565b50505050905090810190601f1680156118dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106118fe57fe5b9060005260206000209060020201600101549150509392505050565b6119248383611cab565b611931600084848461196c565b6108195760405162461bcd60e51b81526004018080602001828103825260328152602001806120326032913960400191505060405180910390fd5b6000611980846001600160a01b0316611de5565b61198c575060016113e4565b6060611ab2630a85bd0160e11b6119a16112cb565b88878760405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611a1a578181015183820152602001611a02565b50505050905090810190601f168015611a475780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612032603291396001600160a01b038816919063ffffffff611deb16565b90506000818060200190516020811015611acb57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611bc05783546000198083019190810190600090879083908110611b3757fe5b9060005260206000200154905080876000018481548110611b5457fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611b8457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610945565b6000915050610945565b6000611bd68383611aec565b611c0c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610945565b506000610945565b600082815260018401602052604081205480611c795750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556115e5565b82856000016001830381548110611c8c57fe5b90600052602060002090600202016001018190555060009150506115e5565b6001600160a01b038216611d06576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b611d0f816112b8565b15611d61576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b611d6d60008383610819565b6001600160a01b0382166000908152600260205260409020611d95908263ffffffff61174f16565b50611da86003828463ffffffff61175b16565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b3b151590565b60606115e2848460008585611dff85611de5565b611e50576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611e8f5780518252601f199092019160209182019101611e70565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611ef1576040519150601f19603f3d011682016040523d82523d6000602084013e611ef6565b606091505b5091509150611f06828286611f11565b979650505050505050565b60608315611f205750816115e5565b825115611f305782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156118b0578181015183820152602001611898565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611fb857805160ff1916838001178555611fe5565b82800160010185558215611fe5579182015b82811115611fe5578251825591602001919060010190611fca565b50611ff1929150611ff5565b5090565b6106de91905b80821115611ff15760008155600101611ffb56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212204d798aeeedb17fe47a781f656cd6e7b8aa43b668fafb6657f432cd1e7e5ec1d764736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80636352211e116100de5780638da5cb5b11610097578063b88d4fde11610071578063b88d4fde146104f0578063c87b56dd146105b6578063e985e9c5146105d3578063f2fde38b1461060157610173565b80638da5cb5b146104b257806395d89b41146104ba578063a22cb465146104c257610173565b80636352211e1461039357806365568ecb146103b057806369e295e8146103d65780636c0360eb1461047c57806370a0823114610484578063715018a6146104aa57610173565b80631b7fe6b6116101305780631b7fe6b6146102b957806323b872dd146102c15780632f745c59146102f757806342842e0e146103235780634f6ccce7146103595780635bca20161461037657610173565b806301ffc9a71461017857806306fdde03146101b3578063081812fc14610230578063095ea7b3146102695780631141d7de1461029757806318160ddd1461029f575b600080fd5b61019f6004803603602081101561018e57600080fd5b50356001600160e01b031916610627565b604080519115158252519081900360200190f35b6101bb61064a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f55781810151838201526020016101dd565b50505050905090810190601f1680156102225780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024d6004803603602081101561024657600080fd5b50356106e1565b604080516001600160a01b039092168252519081900360200190f35b6102956004803603604081101561027f57600080fd5b506001600160a01b038135169060200135610743565b005b6101bb61081e565b6102a76108ac565b60408051918252519081900360200190f35b6102a76108bd565b610295600480360360608110156102d757600080fd5b506001600160a01b038135811691602081013590911690604001356108c3565b6102a76004803603604081101561030d57600080fd5b506001600160a01b03813516906020013561091a565b6102956004803603606081101561033957600080fd5b506001600160a01b0381358116916020810135909116906040013561094b565b6102a76004803603602081101561036f57600080fd5b5035610966565b6102956004803603602081101561038c57600080fd5b5035610982565b61024d600480360360208110156103a957600080fd5b5035610a3a565b610295600480360360208110156103c657600080fd5b50356001600160a01b0316610a68565b610295600480360360208110156103ec57600080fd5b81019060208101813564010000000081111561040757600080fd5b82018360208201111561041957600080fd5b8035906020019184600183028401116401000000008311171561043b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b3e945050505050565b6101bb610bad565b6102a76004803603602081101561049a57600080fd5b50356001600160a01b0316610c0e565b610295610c76565b61024d610d18565b6101bb610d27565b610295600480360360408110156104d857600080fd5b506001600160a01b0381351690602001351515610d88565b6102956004803603608081101561050657600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561054157600080fd5b82018360208201111561055357600080fd5b8035906020019184600183028401116401000000008311171561057557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e8d945050505050565b6101bb600480360360208110156105cc57600080fd5b5035610eeb565b61019f600480360360408110156105e957600080fd5b506001600160a01b0381358116916020013516611192565b6102956004803603602081101561061757600080fd5b50356001600160a01b03166111c0565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106d65780601f106106ab576101008083540402835291602001916106d6565b820191906000526020600020905b8154815290600101906020018083116106b957829003601f168201915b505050505090505b90565b60006106ec826112b8565b6107275760405162461bcd60e51b815260040180806020018281038252602c815260200180612187602c913960400191505060405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061074e82610a3a565b9050806001600160a01b0316836001600160a01b031614156107a15760405162461bcd60e51b81526004018080602001828103825260218152602001806122576021913960400191505060405180910390fd5b806001600160a01b03166107b36112cb565b6001600160a01b031614806107d457506107d4816107cf6112cb565b611192565b61080f5760405162461bcd60e51b81526004018080602001828103825260388152602001806120da6038913960400191505060405180910390fd5b61081983836112cf565b505050565b600c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108a45780601f10610879576101008083540402835291602001916108a4565b820191906000526020600020905b81548152906001019060200180831161088757829003601f168201915b505050505081565b60006108b8600361133d565b905090565b600b5481565b6108d46108ce6112cb565b82611348565b61090f5760405162461bcd60e51b81526004018080602001828103825260318152602001806122786031913960400191505060405180910390fd5b6108198383836113ec565b6001600160a01b0382166000908152600260205260408120610942908363ffffffff61154a16565b90505b92915050565b61081983838360405180602001604052806000815250610e8d565b60008061097a60038463ffffffff61155616565b509392505050565b3361098c82610a3a565b6001600160a01b03161461099f57600080fd5b600c805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152610a3793859391929091830182828015610a2d5780601f10610a0257610100808354040283529160200191610a2d565b820191906000526020600020905b815481529060010190602001808311610a1057829003601f168201915b5050505050611572565b50565b60006109458260405180606001604052806029815260200161213c602991396003919063ffffffff6115d516565b610a706112cb565b6000546001600160a01b03908116911614610ac0576040805162461bcd60e51b815260206004820181905260248201526000805160206121df833981519152604482015290519081900360640190fd5b610acc81600b546115ec565b600b54600c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152610b32949390929091830182828015610a2d5780601f10610a0257610100808354040283529160200191610a2d565b50600b80546001019055565b610b466112cb565b6000546001600160a01b03908116911614610b96576040805162461bcd60e51b815260206004820181905260248201526000805160206121df833981519152604482015290519081900360640190fd5b8051610ba990600c906020840190611f77565b5050565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106d65780601f106106ab576101008083540402835291602001916106d6565b60006001600160a01b038216610c555760405162461bcd60e51b815260040180806020018281038252602a815260200180612112602a913960400191505060405180910390fd5b6001600160a01b03821660009081526002602052604090206109459061133d565b610c7e6112cb565b6000546001600160a01b03908116911614610cce576040805162461bcd60e51b815260206004820181905260248201526000805160206121df833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106d65780601f106106ab576101008083540402835291602001916106d6565b610d906112cb565b6001600160a01b0316826001600160a01b03161415610df6576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060066000610e036112cb565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610e476112cb565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610e9e610e986112cb565b83611348565b610ed95760405162461bcd60e51b81526004018080602001828103825260318152602001806122786031913960400191505060405180910390fd5b610ee584848484611606565b50505050565b6060610ef6826112b8565b610f315760405162461bcd60e51b815260040180806020018281038252602f815260200180612228602f913960400191505060405180910390fd5b60008281526009602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610fc65780601f10610f9b57610100808354040283529160200191610fc6565b820191906000526020600020905b815481529060010190602001808311610fa957829003601f168201915b5050600a5493945050505060026000196101006001841615020190911604610fef579050610645565b8051156110c057600a8160405160200180838054600181600116156101000203166002900480156110575780601f10611035576101008083540402835291820191611057565b820191906000526020600020905b815481529060010190602001808311611043575b5050825160208401908083835b602083106110835780518252601f199092019160209182019101611064565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610645565b600a6110cb84611658565b60405160200180838054600181600116156101000203166002900480156111295780601f10611107576101008083540402835291820191611129565b820191906000526020600020905b815481529060010190602001808311611115575b5050825160208401908083835b602083106111555780518252601f199092019160209182019101611136565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6111c86112cb565b6000546001600160a01b03908116911614611218576040805162461bcd60e51b815260206004820181905260248201526000805160206121df833981519152604482015290519081900360640190fd5b6001600160a01b03811661125d5760405162461bcd60e51b81526004018080602001828103825260268152602001806120646026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061094560038363ffffffff61173316565b3390565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061130482610a3a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109458261173f565b6000611353826112b8565b61138e5760405162461bcd60e51b815260040180806020018281038252602c8152602001806120ae602c913960400191505060405180910390fd5b600061139983610a3a565b9050806001600160a01b0316846001600160a01b031614806113d45750836001600160a01b03166113c9846106e1565b6001600160a01b0316145b806113e457506113e48185611192565b949350505050565b826001600160a01b03166113ff82610a3a565b6001600160a01b0316146114445760405162461bcd60e51b81526004018080602001828103825260298152602001806121ff6029913960400191505060405180910390fd5b6001600160a01b0382166114895760405162461bcd60e51b815260040180806020018281038252602481526020018061208a6024913960400191505060405180910390fd5b611494838383610819565b61149f6000826112cf565b6001600160a01b03831660009081526002602052604090206114c7908263ffffffff61174316565b506001600160a01b03821660009081526002602052604090206114f0908263ffffffff61174f16565b506115036003828463ffffffff61175b16565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006109428383611771565b600080808061156586866117d5565b9097909650945050505050565b61157b826112b8565b6115b65760405162461bcd60e51b815260040180806020018281038252602c8152602001806121b3602c913960400191505060405180910390fd5b6000828152600960209081526040909120825161081992840190611f77565b60006115e2848484611850565b90505b9392505050565b610ba982826040518060200160405280600081525061191a565b6116118484846113ec565b61161d8484848461196c565b610ee55760405162461bcd60e51b81526004018080602001828103825260328152602001806120326032913960400191505060405180910390fd5b60608161167d57506040805180820190915260018152600360fc1b6020820152610645565b8160005b811561169557600101600a82049150611681565b60608167ffffffffffffffff811180156116ae57600080fd5b506040519080825280601f01601f1916602001820160405280156116d9576020820181803683370190505b50859350905060001982015b831561172a57600a840660300160f81b8282806001900393508151811061170857fe5b60200101906001600160f81b031916908160001a905350600a840493506116e5565b50949350505050565b60006109428383611aec565b5490565b60006109428383611b04565b60006109428383611bca565b60006115e284846001600160a01b038516611c14565b815460009082106117b35760405162461bcd60e51b81526004018080602001828103825260228152602001806120106022913960400191505060405180910390fd5b8260000182815481106117c257fe5b9060005260206000200154905092915050565b8154600090819083106118195760405162461bcd60e51b81526004018080602001828103825260228152602001806121656022913960400191505060405180910390fd5b600084600001848154811061182a57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816118eb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118b0578181015183820152602001611898565b50505050905090810190601f1680156118dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106118fe57fe5b9060005260206000209060020201600101549150509392505050565b6119248383611cab565b611931600084848461196c565b6108195760405162461bcd60e51b81526004018080602001828103825260328152602001806120326032913960400191505060405180910390fd5b6000611980846001600160a01b0316611de5565b61198c575060016113e4565b6060611ab2630a85bd0160e11b6119a16112cb565b88878760405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611a1a578181015183820152602001611a02565b50505050905090810190601f168015611a475780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612032603291396001600160a01b038816919063ffffffff611deb16565b90506000818060200190516020811015611acb57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611bc05783546000198083019190810190600090879083908110611b3757fe5b9060005260206000200154905080876000018481548110611b5457fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611b8457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610945565b6000915050610945565b6000611bd68383611aec565b611c0c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610945565b506000610945565b600082815260018401602052604081205480611c795750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556115e5565b82856000016001830381548110611c8c57fe5b90600052602060002090600202016001018190555060009150506115e5565b6001600160a01b038216611d06576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b611d0f816112b8565b15611d61576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b611d6d60008383610819565b6001600160a01b0382166000908152600260205260409020611d95908263ffffffff61174f16565b50611da86003828463ffffffff61175b16565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b3b151590565b60606115e2848460008585611dff85611de5565b611e50576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611e8f5780518252601f199092019160209182019101611e70565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611ef1576040519150601f19603f3d011682016040523d82523d6000602084013e611ef6565b606091505b5091509150611f06828286611f11565b979650505050505050565b60608315611f205750816115e5565b825115611f305782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156118b0578181015183820152602001611898565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611fb857805160ff1916838001178555611fe5565b82800160010185558215611fe5579182015b82811115611fe5578251825591602001919060010190611fca565b50611ff1929150611ff5565b5090565b6106de91905b80821115611ff15760008155600101611ffb56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212204d798aeeedb17fe47a781f656cd6e7b8aa43b668fafb6657f432cd1e7e5ec1d764736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "137:1315:3:-:0;;;491:117;5:9:-1;2:2;;;27:1;24;17:12;2:2;491:117:3;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;491:117:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;491:117:3;;420:4:-1;411:14;;;;491:117:3;;;;;411:14:-1;491:117:3;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;491:117:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3575:369:11;;;;;;;;;;;;;-1:-1:-1;;;3575:369:11;;;;;;;;;;;;;;;;-1:-1:-1;;;3575:369:11;;;882:17:7;902:12;:10;;;:12;;:::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:7;-1:-1:-1;;;;;924:18:7;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:7;957:43;;924:6;;957:43;-1:-1:-1;768:40:8;-1:-1:-1;;;;;;;;768:18:8;:40;:::i;:::-;3649:13:11;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3672:17:11;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;3777:40:11;-1:-1:-1;;;;;;;;3777:18:11;:40;:::i;:::-;3827:49;-1:-1:-1;;;;;;;;3827:18:11;:49;:::i;:::-;3886:51;-1:-1:-1;;;;;;;;3886:18:11;:51;:::i;:::-;-1:-1:-1;;574:10:3;;::::1;::::0;:3:::1;::::0;:10:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;602:1:3::1;590:9;:13:::0;137:1315;;598:104:6;685:10;598:104;;:::o;1499:198:8:-;-1:-1:-1;;;;;;1582:25:8;;;;;1574:66;;;;;-1:-1:-1;;;1574:66:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1650:33:8;;;;;1686:4;1650:33;;;;;;;;:40;;-1:-1:-1;;1650:40:8;;;;;;1499:198::o;137:1315:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;137:1315:3;;;-1:-1:-1;137:1315:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "137:1315:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;137:1315:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;965:140:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;965:140:8;-1:-1:-1;;;;;;965:140:8;;:::i;:::-;;;;;;;;;;;;;;;;;;4500:90:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4500:90:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7107:209;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;7107:209:11;;:::i;:::-;;;;-1:-1:-1;;;;;7107:209:11;;;;;;;;;;;;;;6665:381;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6665:381:11;;;;;;;;:::i;:::-;;211:17:3;;;:::i;6175:200:11:-;;;:::i;:::-;;;;;;;;;;;;;;;;186:21:3;;;:::i;7955:300:11:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;7955:300:11;;;;;;;;;;;;;;;;;:::i;5952:152::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5952:152:11;;;;;;;;:::i;8321:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;8321:149:11;;;;;;;;;;;;;;;;;:::i;6447:161::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6447:161:11;;:::i;1319:130:3:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1319:130:3;;:::i;4271:167:11:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4271:167:11;;:::i;760:137:3:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;760:137:3;-1:-1:-1;;;;;760:137:3;;:::i;1043:87::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1043:87:3;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;1043:87:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1043:87:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1043:87:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1043:87:3;;-1:-1:-1;1043:87:3;;-1:-1:-1;;;;;1043:87:3:i;5786::11:-;;;:::i;4003:211::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4003:211:11;-1:-1:-1;;;;;4003:211:11;;:::i;1706:145:7:-;;;:::i;1083:77::-;;;:::i;4654:94:11:-;;;:::i;7383:290::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;7383:290:11;;;;;;;;;;:::i;8536:282::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;8536:282:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;8536:282:11;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;8536:282:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8536:282:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8536:282:11;;-1:-1:-1;8536:282:11;;-1:-1:-1;;;;;8536:282:11:i;4814:740::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4814:740:11;;:::i;7739:154::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;7739:154:11;;;;;;;;;;:::i;2000:240:7:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2000:240:7;-1:-1:-1;;;;;2000:240:7;;:::i;965:140:8:-;-1:-1:-1;;;;;;1065:33:8;;1042:4;1065:33;;;:20;:33;;;;;;;;965:140;;;;:::o;4500:90:11:-;4578:5;4571:12;;;;;;;;-1:-1:-1;;4571:12:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4546:13;;4571:12;;4578:5;;4571:12;;4578:5;4571:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:90;;:::o;7107:209::-;7175:7;7202:16;7210:7;7202;:16::i;:::-;7194:73;;;;-1:-1:-1;;;7194:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7285:24:11;;;;:15;:24;;;;;;-1:-1:-1;;;;;7285:24:11;;7107:209::o;6665:381::-;6745:13;6761:16;6769:7;6761;:16::i;:::-;6745:32;;6801:5;-1:-1:-1;;;;;6795:11:11;:2;-1:-1:-1;;;;;6795:11:11;;;6787:57;;;;-1:-1:-1;;;6787:57:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6879:5;-1:-1:-1;;;;;6863:21:11;:12;:10;:12::i;:::-;-1:-1:-1;;;;;6863:21:11;;:62;;;;6888:37;6905:5;6912:12;:10;:12::i;:::-;6888:16;:37::i;:::-;6855:152;;;;-1:-1:-1;;;6855:152:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:21;7027:2;7031:7;7018:8;:21::i;:::-;6665:381;;;:::o;211:17:3:-;;;;;;;;;;;;;;;-1:-1:-1;;211:17:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6175:200:11:-;6228:7;6347:21;:12;:19;:21::i;:::-;6340:28;;6175:200;:::o;186:21:3:-;;;;:::o;7955:300:11:-;8114:41;8133:12;:10;:12::i;:::-;8147:7;8114:18;:41::i;:::-;8106:103;;;;-1:-1:-1;;;8106:103:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8220:28;8230:4;8236:2;8240:7;8220:9;:28::i;5952:152::-;-1:-1:-1;;;;;6067:20:11;;6041:7;6067:20;;;:13;:20;;;;;:30;;6091:5;6067:30;:23;:30;:::i;:::-;6060:37;;5952:152;;;;;:::o;8321:149::-;8424:39;8441:4;8447:2;8451:7;8424:39;;;;;;;;;;;;:16;:39::i;6447:161::-;6514:7;;6555:22;:12;6571:5;6555:22;:15;:22;:::i;:::-;-1:-1:-1;6533:44:11;6447:161;-1:-1:-1;;;6447:161:11:o;1319:130:3:-;1400:10;1379:17;1387:8;1379:7;:17::i;:::-;-1:-1:-1;;;;;1379:31:3;;1371:40;;12:1:-1;9;2:12;1371:40:3;1440:3;1417:27;;;;;;;;;;;;;-1:-1:-1;;1417:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:8;;1417:27;;1440:3;;1417:27;;1440:3;1417:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:27::i;:::-;1319:130;:::o;4271:167:11:-;4335:7;4361:70;4378:7;4361:70;;;;;;;;;;;;;;;;;:12;;:70;;:16;:70;:::i;760:137:3:-;1297:12:7;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:7;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:7;;;;;;;;;;;;;;;816:25:3::1;826:3;831:9;;816;:25::i;:::-;860:9;::::0;871:3:::1;847:28:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;847:28:3::1;;::::0;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;860:9;847:28;;871:3;;847:28;::::1;871:3:::0;847:28;;::::1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;881:9:3::1;:11:::0;;::::1;;::::0;;760:137::o;1043:87::-;1297:12:7;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:7;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:7;;;;;;;;;;;;;;;1112:13:3;;::::1;::::0;:3:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1043:87:::0;:::o;5786::11:-;5858:8;5851:15;;;;;;;;-1:-1:-1;;5851:15:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5826:13;;5851:15;;5858:8;;5851:15;;5858:8;5851:15;;;;;;;;;;;;;;;;;;;;;;;;4003:211;4067:7;-1:-1:-1;;;;;4094:19:11;;4086:74;;;;-1:-1:-1;;;4086:74:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4178:20:11;;;;;;:13;:20;;;;;:29;;:27;:29::i;1706:145:7:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:7;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:7;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;-1:-1:-1;;;;;1796:6:7;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;-1:-1:-1;;;;;;1825:19:7::1;::::0;;1706:145::o;1083:77::-;1121:7;1147:6;-1:-1:-1;;;;;1147:6:7;1083:77;:::o;4654:94:11:-;4734:7;4727:14;;;;;;;;-1:-1:-1;;4727:14:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4702:13;;4727:14;;4734:7;;4727:14;;4734:7;4727:14;;;;;;;;;;;;;;;;;;;;;;;;7383:290;7497:12;:10;:12::i;:::-;-1:-1:-1;;;;;7485:24:11;:8;-1:-1:-1;;;;;7485:24:11;;;7477:62;;;;;-1:-1:-1;;;7477:62:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;7595:8;7550:18;:32;7569:12;:10;:12::i;:::-;-1:-1:-1;;;;;7550:32:11;;;;;;;;;;;;;;;;;-1:-1:-1;7550:32:11;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7550:53:11;;;;;;;;;;;7633:12;:10;:12::i;:::-;7618:48;;;;;;;;;;-1:-1:-1;;;;;7618:48:11;;;;;;;;;;;;;;7383:290;;:::o;8536:282::-;8667:41;8686:12;:10;:12::i;:::-;8700:7;8667:18;:41::i;:::-;8659:103;;;;-1:-1:-1;;;8659:103:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8772:39;8786:4;8792:2;8796:7;8805:5;8772:13;:39::i;:::-;8536:282;;;;:::o;4814:740::-;4879:13;4912:16;4920:7;4912;:16::i;:::-;4904:76;;;;-1:-1:-1;;;4904:76:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5017:19;;;;:10;:19;;;;;;;;;4991:45;;;;;;-1:-1:-1;;4991:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5017:19;4991:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5115:8:11;5109:22;4991:45;;-1:-1:-1;;;;5109:22:11;-1:-1:-1;;5109:22:11;;;;;;;;;;;5105:74;;5159:9;-1:-1:-1;5152:16:11;;5105:74;5281:23;;:27;5277:110;;5355:8;5365:9;5338:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5338:37:11;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5338:37:11;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5338:37:11;;;5324:52;;;;;5277:110;5517:8;5527:18;:7;:16;:18::i;:::-;5500:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5500:46:11;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5500:46:11;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5500:46:11;;;5486:61;;;4814:740;;;:::o;7739:154::-;-1:-1:-1;;;;;7851:25:11;;;7828:4;7851:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7739:154::o;2000:240:7:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:7;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:7;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:7::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:7;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;-1:-1:-1;;;;;;2216:17:7::1;-1:-1:-1::0;;;;;2216:17:7;;;::::1;::::0;;;::::1;::::0;;2000:240::o;10252:117:11:-;10309:4;10332:30;:12;10354:7;10332:30;:21;:30;:::i;598:104:6:-;685:10;598:104;:::o;15908:155:11:-;15973:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15973:29:11;-1:-1:-1;;;;;15973:29:11;;;;;;;;:24;;16026:16;15973:24;16026:7;:16::i;:::-;-1:-1:-1;;;;;16017:39:11;;;;;;;;;;;15908:155;;:::o;7031:121:17:-;7100:7;7126:19;7134:3;7126:7;:19::i;10527:329:11:-;10612:4;10636:16;10644:7;10636;:16::i;:::-;10628:73;;;;-1:-1:-1;;;10628:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10711:13;10727:16;10735:7;10727;:16::i;:::-;10711:32;;10772:5;-1:-1:-1;;;;;10761:16:11;:7;-1:-1:-1;;;;;10761:16:11;;:51;;;;10805:7;-1:-1:-1;;;;;10781:31:11;:20;10793:7;10781:11;:20::i;:::-;-1:-1:-1;;;;;10781:31:11;;10761:51;:87;;;;10816:32;10833:5;10840:7;10816:16;:32::i;:::-;10753:96;10527:329;-1:-1:-1;;;;10527:329:11:o;13521:559::-;13638:4;-1:-1:-1;;;;;13618:24:11;:16;13626:7;13618;:16::i;:::-;-1:-1:-1;;;;;13618:24:11;;13610:78;;;;-1:-1:-1;;;13610:78:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13706:16:11;;13698:65;;;;-1:-1:-1;;;13698:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13774:39;13795:4;13801:2;13805:7;13774:20;:39::i;:::-;13875:29;13892:1;13896:7;13875:8;:29::i;:::-;-1:-1:-1;;;;;13915:19:11;;;;;;:13;:19;;;;;:35;;13942:7;13915:35;:26;:35;:::i;:::-;-1:-1:-1;;;;;;13960:17:11;;;;;;:13;:17;;;;;:30;;13982:7;13960:30;:21;:30;:::i;:::-;-1:-1:-1;14001:29:11;:12;14018:7;14027:2;14001:29;:16;:29;:::i;:::-;;14065:7;14061:2;-1:-1:-1;;;;;14046:27:11;14055:4;-1:-1:-1;;;;;14046:27:11;;;;;;;;;;;13521:559;;;:::o;9214:135:18:-;9285:7;9319:22;9323:3;9335:5;9319:3;:22::i;7480:224:17:-;7560:7;;;;7619:22;7623:3;7635:5;7619:3;:22::i;:::-;7588:53;;;;-1:-1:-1;7480:224:17;-1:-1:-1;;;;;7480:224:17:o;14227:212:11:-;14326:16;14334:7;14326;:16::i;:::-;14318:73;;;;-1:-1:-1;;;14318:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14401:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;8123:202:17:-;8230:7;8272:44;8277:3;8297;8303:12;8272:4;:44::i;:::-;8264:53;-1:-1:-1;8123:202:17;;;;;;:::o;11187:108:11:-;11262:26;11272:2;11276:7;11262:26;;;;;;;;;;;;:9;:26::i;9680:269::-;9793:28;9803:4;9809:2;9813:7;9793:9;:28::i;:::-;9839:48;9862:4;9868:2;9872:7;9881:5;9839:22;:48::i;:::-;9831:111;;;;-1:-1:-1;;;9831:111:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210:723:19;266:13;483:10;479:51;;-1:-1:-1;509:10:19;;;;;;;;;;;;-1:-1:-1;;;509:10:19;;;;;;479:51;554:5;539:12;593:75;600:9;;593:75;;625:8;;655:2;647:10;;;;593:75;;;677:19;709:6;699:17;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;699:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;108:14;699:17:19;87:42:-1;143:17;;-1:-1;699:17:19;-1:-1:-1;769:5:19;;-1:-1:-1;677:39:19;-1:-1:-1;;;742:10:19;;784:112;791:9;;784:112;;857:2;850:4;:9;845:2;:14;834:27;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:45;-1:-1:-1;;;;;816:45:19;;;;;;;;-1:-1:-1;883:2:19;875:10;;;;784:112;;;-1:-1:-1;919:6:19;210:723;-1:-1:-1;;;;210:723:19:o;6799:149:17:-;6883:4;6906:35;6916:3;6936;6906:9;:35::i;4491:108::-;4573:19;;4491:108::o;8329:135:18:-;8399:4;8422:35;8430:3;8450:5;8422:7;:35::i;8032:129::-;8099:4;8122:32;8127:3;8147:5;8122:4;:32::i;6247:174:17:-;6336:4;6359:55;6364:3;6384;-1:-1:-1;;;;;6398:14:17;;6359:4;:55::i;4452:201:18:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:18;;;;-1:-1:-1;;;4538:73:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;4942:274:17:-;5045:19;;5009:7;;;;5045:27;-1:-1:-1;5037:74:17;;;;-1:-1:-1;;;5037:74:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;5623:315::-;5717:7;5755:17;;;:12;;;:17;;;;;;5805:12;5790:13;5782:36;;;;-1:-1:-1;;;5782:36:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5782:36:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:3;:12;;5895:1;5884:8;:12;5871:26;;;;;;;;;;;;;;;;;;:33;;;5864:40;;;5623:315;;;;;:::o;11516:247:11:-;11611:18;11617:2;11621:7;11611:5;:18::i;:::-;11647:54;11678:1;11682:2;11686:7;11695:5;11647:22;:54::i;:::-;11639:117;;;;-1:-1:-1;;;11639:117:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15313:589;15433:4;15458:15;:2;-1:-1:-1;;;;;15458:13:11;;:15::i;:::-;15453:58;;-1:-1:-1;15496:4:11;15489:11;;15453:58;15520:23;15546:246;-1:-1:-1;;;15657:12:11;:10;:12::i;:::-;15683:4;15701:7;15722:5;15562:175;;;;;;-1:-1:-1;;;;;15562:175:11;-1:-1:-1;;;;;15562:175:11;;;;;;-1:-1:-1;;;;;15562:175:11;-1:-1:-1;;;;;15562:175:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15562:175:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15562:175:11;;;;-1:-1:-1;;;;;15562:175:11;;38:4:-1;29:7;25:18;67:10;61:17;-1:-1;;;;;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15562:175:11;15546:246;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15546:15:11;;;:246;;:15;:246;:::i;:::-;15520:272;;15802:13;15829:10;15818:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;15818:32:11;-1:-1:-1;;;;;;15868:26:11;-1:-1:-1;;;15868:26:11;;-1:-1:-1;;;15313:589:11;;;;;;:::o;4278:123:17:-;4349:4;4372:17;;;:12;;;;;:17;;;;;;:22;;;4278:123::o;2212:1512:18:-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:18;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;1640:404;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1761:11:18;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:18;2015:12;;1836:678:17;1912:4;2045:17;;;:12;;;:17;;;;;;2077:13;2073:435;;-1:-1:-1;;2161:38:17;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;2143:12:17;:57;;;;;;;;;;;;;;;;;;;;;;;;2355:19;;2335:17;;;:12;;;:17;;;;;;;:39;2388:11;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;;;12085:393:11;-1:-1:-1;;;;;12164:16:11;;12156:61;;;;;-1:-1:-1;;;12156:61:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12236:16;12244:7;12236;:16::i;:::-;12235:17;12227:58;;;;;-1:-1:-1;;;12227:58:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;12296:45;12325:1;12329:2;12333:7;12296:20;:45::i;:::-;-1:-1:-1;;;;;12352:17:11;;;;;;:13;:17;;;;;:30;;12374:7;12352:30;:21;:30;:::i;:::-;-1:-1:-1;12393:29:11;:12;12410:7;12419:2;12393:29;:16;:29;:::i;:::-;-1:-1:-1;12438:33:11;;12463:7;;-1:-1:-1;;;;;12438:33:11;;;12455:1;;12438:33;;12455:1;;12438:33;12085:393;;:::o;726:413:16:-;1086:20;1124:8;;;726:413::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3684;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:16;5042:5;5050:4;5022:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5022:33:16;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;4980:75:16;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:16:o;6111:725::-;6226:12;6254:7;6250:580;;;-1:-1:-1;6284:10:16;6277:17;;6250:580;6395:17;;:21;6391:429;;6653:10;6647:17;6713:15;6700:10;6696:2;6692:19;6685:44;6602:145;6785:20;;-1:-1:-1;;;6785:20:16;;;;;;;;;;;;;;;;;6792:12;;6785:20;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;137:1315:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;137:1315:3;;;-1:-1:-1;137:1315:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract WarpNFTLegendary is Ownable, ERC721 {\n  uint public idTracker;\n  string public URI;\n\n\n/**\n@notice the constructor function is fired only once during contract deployment\n@param _URI is a base address added to the front of every input tokenURI\n@dev assuming all NFT URI metadata is based on a URL he baseURI would be something like https://\n**/\n  constructor(string memory _URI) ERC721(\"Warp Legendary NFT\", \"WLNFT\") public {\n    URI = _URI;\n    idTracker = 0;\n  }\n\n/**\n@notice mintNewNFT allows the owner of this contract to mint an input address a newNFT\n@param _to is the address the NFT is being minted to\n**/\n  function mintNewNFT(address _to) public onlyOwner {\n    _safeMint(_to, idTracker);\n    _setTokenURI(idTracker, URI);\n    idTracker++;\n  }\n\n/**\n@notice updateAllURIs allows the owner of this contract to manually update the token URI\n@param _newURI is the new URI for the tokens\n**/\n  function updateAllURIs(string memory _newURI) public onlyOwner {\n    URI = _newURI;\n  }\n\n/**\n@notice updateTokenURI allows the owner of a token to update his tokens URI after the owner\n        sets a new one for use\n@param _tokenID is the ID of the token being upgraded\n**/\n  function updateTokenURI(uint _tokenID) public {\n    require(ownerOf(_tokenID) == msg.sender);\n    _setTokenURI(_tokenID, URI);\n  }\n\n}\n",
  "sourcePath": "/home/stan36/repos/Warp/nft-distribute/contracts/WarpNFTLegendary.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/Warp/nft-distribute/contracts/WarpNFTLegendary.sol",
    "exportedSymbols": {
      "WarpNFTLegendary": [
        839
      ]
    },
    "id": 840,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 753,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 754,
        "nodeType": "ImportDirective",
        "scope": 840,
        "sourceUnit": 1148,
        "src": "25:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 755,
        "nodeType": "ImportDirective",
        "scope": 840,
        "sourceUnit": 2343,
        "src": "78:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 756,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1147,
              "src": "166:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1147",
                "typeString": "contract Ownable"
              }
            },
            "id": 757,
            "nodeType": "InheritanceSpecifier",
            "src": "166:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 758,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2342,
              "src": "175:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2342",
                "typeString": "contract ERC721"
              }
            },
            "id": 759,
            "nodeType": "InheritanceSpecifier",
            "src": "175:6:3"
          }
        ],
        "contractDependencies": [
          1038,
          1147,
          1203,
          1215,
          2342,
          2458,
          2489,
          2516
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 839,
        "linearizedBaseContracts": [
          839,
          2342,
          2489,
          2516,
          2458,
          1203,
          1215,
          1147,
          1038
        ],
        "name": "WarpNFTLegendary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1b7fe6b6",
            "id": 761,
            "mutability": "mutable",
            "name": "idTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 839,
            "src": "186:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 760,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "186:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1141d7de",
            "id": 763,
            "mutability": "mutable",
            "name": "URI",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 839,
            "src": "211:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 762,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "211:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "568:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 773,
                      "name": "URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "574:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 774,
                      "name": "_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "580:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "574:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "574:10:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "idTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "590:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "602:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "590:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "590:13:3"
                }
              ]
            },
            "documentation": {
              "id": 764,
              "nodeType": "StructuredDocumentation",
              "src": "232:256:3",
              "text": "@notice the constructor function is fired only once during contract deployment\n@param _URI is a base address added to the front of every input tokenURI\n@dev assuming all NFT URI metadata is based on a URL he baseURI would be something like https://*"
            },
            "id": 782,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "57617270204c6567656e64617279204e4654",
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "530:20:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5ff12bb27aef291250a54f0fa183f515a4924801280e88665d1f89c4b51f214b",
                      "typeString": "literal_string \"Warp Legendary NFT\""
                    },
                    "value": "Warp Legendary NFT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "574c4e4654",
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "552:7:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7ec0a035acd3e72dc77b5d534d7e1eabf55cab6cae6a6bffff3dfde2fb16ea7c",
                      "typeString": "literal_string \"WLNFT\""
                    },
                    "value": "WLNFT"
                  }
                ],
                "id": 771,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 768,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2342,
                  "src": "523:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2342_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "523:37:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_URI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 782,
                  "src": "503:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "502:20:3"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:3"
            },
            "scope": 839,
            "src": "491:117:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "810:87:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 791,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "826:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 792,
                        "name": "idTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "831:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 790,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1990,
                        2019
                      ],
                      "referencedDeclaration": 1990,
                      "src": "816:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "816:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "816:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "idTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "860:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 797,
                        "name": "URI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "871:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 795,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2239,
                      "src": "847:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "847:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "881:11:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 800,
                      "name": "idTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "881:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "881:11:3"
                }
              ]
            },
            "documentation": {
              "id": 783,
              "nodeType": "StructuredDocumentation",
              "src": "610:147:3",
              "text": "@notice mintNewNFT allows the owner of this contract to mint an input address a newNFT\n@param _to is the address the NFT is being minted to*"
            },
            "functionSelector": "65568ecb",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 788,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 787,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1096,
                  "src": "800:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "800:9:3"
              }
            ],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 804,
                  "src": "780:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "779:13:3"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:0:3"
            },
            "scope": 839,
            "src": "760:137:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "1106:24:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 812,
                      "name": "URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "1112:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 813,
                      "name": "_newURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "1118:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1112:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:13:3"
                }
              ]
            },
            "documentation": {
              "id": 805,
              "nodeType": "StructuredDocumentation",
              "src": "899:141:3",
              "text": "@notice updateAllURIs allows the owner of this contract to manually update the token URI\n@param _newURI is the new URI for the tokens*"
            },
            "functionSelector": "69e295e8",
            "id": 817,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 810,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 809,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1096,
                  "src": "1096:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1096:9:3"
              }
            ],
            "name": "updateAllURIs",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "_newURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 817,
                  "src": "1066:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1065:23:3"
            },
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1106:0:3"
            },
            "scope": 839,
            "src": "1043:87:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "1365:84:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 825,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 820,
                              "src": "1387:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 824,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1559,
                            "src": "1379:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:17:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 827,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1400:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1400:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1379:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1371:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1371:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "1371:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 833,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1430:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 834,
                        "name": "URI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1440:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 832,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2239,
                      "src": "1417:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:27:3"
                }
              ]
            },
            "documentation": {
              "id": 818,
              "nodeType": "StructuredDocumentation",
              "src": "1132:184:3",
              "text": "@notice updateTokenURI allows the owner of a token to update his tokens URI after the owner\nsets a new one for use\n@param _tokenID is the ID of the token being upgraded*"
            },
            "functionSelector": "5bca2016",
            "id": 838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "1343:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1342:15:3"
            },
            "returnParameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:3"
            },
            "scope": 839,
            "src": "1319:130:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 840,
        "src": "137:1315:3"
      }
    ],
    "src": "0:1453:3"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/Warp/nft-distribute/contracts/WarpNFTLegendary.sol",
    "exportedSymbols": {
      "WarpNFTLegendary": [
        839
      ]
    },
    "id": 840,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 753,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 754,
        "nodeType": "ImportDirective",
        "scope": 840,
        "sourceUnit": 1148,
        "src": "25:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 755,
        "nodeType": "ImportDirective",
        "scope": 840,
        "sourceUnit": 2343,
        "src": "78:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 756,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1147,
              "src": "166:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1147",
                "typeString": "contract Ownable"
              }
            },
            "id": 757,
            "nodeType": "InheritanceSpecifier",
            "src": "166:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 758,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2342,
              "src": "175:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2342",
                "typeString": "contract ERC721"
              }
            },
            "id": 759,
            "nodeType": "InheritanceSpecifier",
            "src": "175:6:3"
          }
        ],
        "contractDependencies": [
          1038,
          1147,
          1203,
          1215,
          2342,
          2458,
          2489,
          2516
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 839,
        "linearizedBaseContracts": [
          839,
          2342,
          2489,
          2516,
          2458,
          1203,
          1215,
          1147,
          1038
        ],
        "name": "WarpNFTLegendary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1b7fe6b6",
            "id": 761,
            "mutability": "mutable",
            "name": "idTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 839,
            "src": "186:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 760,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "186:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1141d7de",
            "id": 763,
            "mutability": "mutable",
            "name": "URI",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 839,
            "src": "211:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 762,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "211:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "568:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 773,
                      "name": "URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "574:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 774,
                      "name": "_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "580:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "574:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "574:10:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "idTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "590:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "602:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "590:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "590:13:3"
                }
              ]
            },
            "documentation": {
              "id": 764,
              "nodeType": "StructuredDocumentation",
              "src": "232:256:3",
              "text": "@notice the constructor function is fired only once during contract deployment\n@param _URI is a base address added to the front of every input tokenURI\n@dev assuming all NFT URI metadata is based on a URL he baseURI would be something like https://*"
            },
            "id": 782,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "57617270204c6567656e64617279204e4654",
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "530:20:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5ff12bb27aef291250a54f0fa183f515a4924801280e88665d1f89c4b51f214b",
                      "typeString": "literal_string \"Warp Legendary NFT\""
                    },
                    "value": "Warp Legendary NFT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "574c4e4654",
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "552:7:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7ec0a035acd3e72dc77b5d534d7e1eabf55cab6cae6a6bffff3dfde2fb16ea7c",
                      "typeString": "literal_string \"WLNFT\""
                    },
                    "value": "WLNFT"
                  }
                ],
                "id": 771,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 768,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2342,
                  "src": "523:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2342_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "523:37:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_URI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 782,
                  "src": "503:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "502:20:3"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:3"
            },
            "scope": 839,
            "src": "491:117:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "810:87:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 791,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "826:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 792,
                        "name": "idTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "831:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 790,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1990,
                        2019
                      ],
                      "referencedDeclaration": 1990,
                      "src": "816:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "816:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "816:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "idTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "860:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 797,
                        "name": "URI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "871:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 795,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2239,
                      "src": "847:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "847:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "881:11:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 800,
                      "name": "idTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "881:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "881:11:3"
                }
              ]
            },
            "documentation": {
              "id": 783,
              "nodeType": "StructuredDocumentation",
              "src": "610:147:3",
              "text": "@notice mintNewNFT allows the owner of this contract to mint an input address a newNFT\n@param _to is the address the NFT is being minted to*"
            },
            "functionSelector": "65568ecb",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 788,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 787,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1096,
                  "src": "800:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "800:9:3"
              }
            ],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 804,
                  "src": "780:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "779:13:3"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:0:3"
            },
            "scope": 839,
            "src": "760:137:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "1106:24:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 812,
                      "name": "URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "1112:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 813,
                      "name": "_newURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "1118:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1112:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:13:3"
                }
              ]
            },
            "documentation": {
              "id": 805,
              "nodeType": "StructuredDocumentation",
              "src": "899:141:3",
              "text": "@notice updateAllURIs allows the owner of this contract to manually update the token URI\n@param _newURI is the new URI for the tokens*"
            },
            "functionSelector": "69e295e8",
            "id": 817,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 810,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 809,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1096,
                  "src": "1096:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1096:9:3"
              }
            ],
            "name": "updateAllURIs",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "_newURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 817,
                  "src": "1066:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1065:23:3"
            },
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1106:0:3"
            },
            "scope": 839,
            "src": "1043:87:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "1365:84:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 825,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 820,
                              "src": "1387:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 824,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1559,
                            "src": "1379:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:17:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 827,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1400:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1400:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1379:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1371:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1371:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "1371:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 833,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1430:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 834,
                        "name": "URI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1440:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 832,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2239,
                      "src": "1417:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:27:3"
                }
              ]
            },
            "documentation": {
              "id": 818,
              "nodeType": "StructuredDocumentation",
              "src": "1132:184:3",
              "text": "@notice updateTokenURI allows the owner of a token to update his tokens URI after the owner\nsets a new one for use\n@param _tokenID is the ID of the token being upgraded*"
            },
            "functionSelector": "5bca2016",
            "id": 838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "1343:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1342:15:3"
            },
            "returnParameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:3"
            },
            "scope": 839,
            "src": "1319:130:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 840,
        "src": "137:1315:3"
      }
    ],
    "src": "0:1453:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x88d748328d0652ad3EF5CfbF5a430deb6B378D70",
      "transactionHash": "0xeebc4f239f0ff1015c99e54a5653871a1c95b85049aa00af4dbd1ff279e82de4"
    },
    "1607997817852": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xFABDbbEB64EE5eCb4Db6eCDBF96AEed93196Ad20",
      "transactionHash": "0x4241a9f9f10c2f826764d803660e448ec538fdd5a9d36ea1776679747b98db97"
    },
    "1608077444902": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x53ebF1d52127714315269d8ddEb4079fB56dc7CC",
      "transactionHash": "0x1e1cfc8781c2d47702ce3371049cba26fa6d095cbd77dd994db0730130b3e0af"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-16T00:47:53.186Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "constructor": {
        "details": "assuming all NFT URI metadata is based on a URL he baseURI would be something like https://*",
        "params": {
          "_URI": "is a base address added to the front of every input tokenURI"
        }
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mintNewNFT(address)": {
        "params": {
          "_to": "is the address the NFT is being minted to*"
        }
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateAllURIs(string)": {
        "params": {
          "_newURI": "is the new URI for the tokens*"
        }
      },
      "updateTokenURI(uint256)": {
        "params": {
          "_tokenID": "is the ID of the token being upgraded*"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "the constructor function is fired only once during contract deployment",
      "mintNewNFT(address)": {
        "notice": "mintNewNFT allows the owner of this contract to mint an input address a newNFT"
      },
      "updateAllURIs(string)": {
        "notice": "updateAllURIs allows the owner of this contract to manually update the token URI"
      },
      "updateTokenURI(uint256)": {
        "notice": "updateTokenURI allows the owner of a token to update his tokens URI after the owner sets a new one for use"
      }
    }
  }
}